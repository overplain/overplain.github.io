{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/footer.css","path":"css/footer.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/progress_bar.css","path":"css/progress_bar.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.png","path":"img/404.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/boomboom.png","path":"img/boomboom.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/girl.png","path":"img/girl.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/head1.png","path":"img/head1.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/htmlcss.jpg","path":"img/htmlcss.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/sea.jpg","path":"img/sea.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/作品集.png","path":"img/作品集.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/wenzhang.webp","path":"img/wenzhang.webp","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/fenmian.png","path":"img/fenmian.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/html css笔记.md","hash":"1e32f8eff93925b054399ebe69e71bc63ca54ecc","modified":1678340231424},{"_id":"source/_posts/c-数据结构笔记.md","hash":"7fdfd7078ae24efb86e8f1f260d2ab69a9813334","modified":1709120462648},{"_id":"source/_posts/ps.md","hash":"1cbd17f4fd414802dc175921cba5bdf2121d3ece","modified":1674027973362},{"_id":"source/_posts/洛谷入门难度刷题记录.md","hash":"205789321cb199faf60a9e76aa2968774fccd703","modified":1674042914134},{"_id":"source/about/index.md","hash":"a7f8b5b86ea7bfbb8705ccc8a020537a2eaf49df","modified":1674202874734},{"_id":"source/air-conditioner/index.md","hash":"451b2bb969f4e2901a759e8e3d4cef23b89d8745","modified":1674204443218},{"_id":"source/about/about.css","hash":"525c51c2e256c027ab77902b91e874155dbd38fb","modified":1674202876599},{"_id":"source/about/about.pug","hash":"1dadea9c77b922592809e87510f2e9a4cc3a7b5c","modified":1674203124862},{"_id":"source/_posts/assets/image-20230102185447127.png","hash":"b1d9c55388d7cdb08a60131d03d4e03bfe5af4a2","modified":1672656887139},{"_id":"source/_posts/assets/image-20230102190232665.png","hash":"d98a8f7fb270bb6deb841702d439789a8556b613","modified":1672657352668},{"_id":"source/_posts/assets/image-20230102185717456.png","hash":"130af5e323b69cb07041929ed179ab29ec7e4bd5","modified":1672657037461},{"_id":"source/_posts/assets/image-20230102185928097.png","hash":"1ac6bc01825193b19b3c41436a8d07db86e4e88a","modified":1672657168103},{"_id":"source/_posts/assets/image-20230106155112829.png","hash":"06477f73ef34ed88f1fa2843a665b5a6d202538e","modified":1672991472836},{"_id":"source/_posts/assets/image-20230106155147504.png","hash":"12fb1ad6b4aec0056330e4973f97bce1d1fb3c70","modified":1672991507510},{"_id":"source/_posts/assets/image-20230106155206425.png","hash":"8c7533992539da20dcb1abce78b2ec56f97dfe6d","modified":1672991526432},{"_id":"source/_posts/assets/image-20230106155218093.png","hash":"1567a0db83d7ff738508e972897e161c76159fea","modified":1672991538099},{"_id":"source/_posts/assets/image-20230106155131518.png","hash":"7a9445da78a9846388f1475e723f4fb79077b0c0","modified":1672991491530},{"_id":"themes/butterfly/package.json","hash":"c81d3e680b7219b271496afbd60718bda8915368","modified":1671860091667},{"_id":"themes/butterfly/README_CN.md","hash":"d0f7a24732855ae340f94e8286085d5387850cde","modified":1671860091624},{"_id":"themes/butterfly/README.md","hash":"15e7f6386b4fd3fa4a6c179ddf641e1ae57eafa2","modified":1671860091624},{"_id":"themes/butterfly/layout/archive.pug","hash":"115fa5ee8864e5c97549eff91a17c66101d724ab","modified":1671860091626},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1671860091626},{"_id":"themes/butterfly/_config.yml","hash":"df2be6c500340e14ae2a8146e50f26f3fcc52e9d","modified":1674204444747},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1671860091623},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1671860091666},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1674203523721},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1671860091667},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1671860091667},{"_id":"themes/butterfly/plugins.yml","hash":"49092888e97d1424624258369928586c5b4067ef","modified":1671860091668},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"4adf079fb0170e3a8de6ddbb0392d6d1120030c4","modified":1671860091625},{"_id":"themes/butterfly/languages/en.yml","hash":"a96ab1bbe74e99ca2e4d67da9d83f442eb9b73af","modified":1671860091625},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1671860091622},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"dcb10d62249bb149af8ad78db3ee6e342c6d6be7","modified":1671860091626},{"_id":"themes/butterfly/languages/default.yml","hash":"335731ef259a3cec2499a2d5b050025ff4bdc608","modified":1671860091625},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1671860091622},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1671860091623},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1671860091622},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"553f6e5e242506775ea02ebe4ebf5c99bcd9d439","modified":1671860091627},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"d2e0e71a98f6eb28b3ee91df5286cbbc70b45394","modified":1671860091628},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1671860091627},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1671860091627},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"92683cb785a29e5a73701b33dba73d3afac268c3","modified":1671860091621},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"ac5f3b2aee29fe6ee72d534c3d78c9fa4d7de404","modified":1671860091632},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"4f41fc46410e1e3018ff87e1d1a5c28be7258119","modified":1671860091637},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"bb1847f45e713cc88b1c0a97035ec01f0209c995","modified":1671860091636},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"6c3b7d0874fa499800a4fd49894c481b05ec750c","modified":1671860091673},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"205562ec188bfba5686c51af77486550d0927df5","modified":1671860091637},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1671860091672},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1671860091668},{"_id":"themes/butterfly/scripts/events/init.js","hash":"b3e05e3440b078f57391c113d6b0c8ecff112720","modified":1671860091669},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"176332aa4d01728d0bd084e9b02c60167dc307dd","modified":1671860091669},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"8e6f0677c190d44c64222054e2e7c065fc6c4802","modified":1671860091668},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1671860091670},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"b92cc4648cfe5fb28c58943727823d1178b73a4a","modified":1671860091672},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1671860091674},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"db4f5971c27f49a4cb47d34729f4ddf9919d392b","modified":1671860091674},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"c445140fa16f19bf5fb617fa735504e7799d4d42","modified":1671860091675},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1671860091674},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"83bfb16ab8d440be04e1b1f889f6affa7ad65a67","modified":1671860091675},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"c07efb04120914363b8de2c276ac5783b82db776","modified":1671860091675},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1674203358829},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1671860091676},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1671860091676},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"6d4cd2393945a9316339351cab588265f5c18d73","modified":1671860091676},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1671860091677},{"_id":"themes/butterfly/source/css/var.styl","hash":"63f12a6a847738b1479ce782c8caac5e0cf16a6b","modified":1671860091702},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"56a5d41487d74654b75305c5325167a116495900","modified":1671860091678},{"_id":"themes/butterfly/source/css/footer.css","hash":"08ee5669792200a032e51391cc72cb64e03ddb1f","modified":1674051719634},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1671860091677},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1671860091679},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1671860091678},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1671860091677},{"_id":"themes/butterfly/source/css/progress_bar.css","hash":"3fcae98cc300c16ff23b5244f793fde09a2f482b","modified":1674042027788},{"_id":"themes/butterfly/source/img/404.png","hash":"b926ce8338a390d5b78738b6f4059a1e094f6da8","modified":1671863095807},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1671860091703},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1671860091679},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1671860091703},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"1ae9561ea27fd9f929a9a67f1b1025303ca4370f","modified":1671860091705},{"_id":"themes/butterfly/source/img/boomboom.png","hash":"00075ebcc6720f4d3c400152545cba06caabe857","modified":1671861503843},{"_id":"themes/butterfly/source/js/main.js","hash":"8650aaa2b77b1a25f48dfe2ea952050275b4038a","modified":1671860091704},{"_id":"themes/butterfly/source/js/utils.js","hash":"fdb9e5b38f076953a2431b8f682388b030694b55","modified":1671860091706},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1671860091703},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"bee7e29995ebe28ff8518646ef162201b5efa9d9","modified":1671860091628},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"b69f54423e1d7db78b0e4a5ff726244401a6546b","modified":1671860091628},{"_id":"themes/butterfly/source/img/wenzhang.webp","hash":"7ba904b8a1dfd5de2ece1589223dba20effe21cf","modified":1672759391187},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1671860091629},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1671860091629},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1671860091629},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1671860091630},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c1e45d4d0bd905ddcd2282de4fe89be92e67847d","modified":1671860091628},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1671860091630},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fc3e67e5ae4774d9e89964ba96beed28f34ee8f0","modified":1671860091630},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"087c7be083e899bae9be5883e7a5aeb707fc6f7f","modified":1673695114058},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1671860091631},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1671860091632},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"a9e56b1c41bf327859b0a7bcb8e72b458bd851b2","modified":1671860091632},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"81362a8c82029119d02b33f0f7bed249950040f0","modified":1674040719516},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"50b4b9c7f6a4771910be4198639cfcfc6d7b8925","modified":1671860091632},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"39847b8a1f0fad7889954a4ac936b7681949f16c","modified":1671860091633},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1671860091635},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1671860091635},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"8f43fdeaf8cff4a35bab74b48c963786ca015620","modified":1671860091635},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"a415c24dddbac12243b2ded7ce2753644c2bc026","modified":1674040701938},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"8b8e04d3d9462b3790ba17e5a865dab5a4740a73","modified":1671860091634},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1671860091636},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1671860091637},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"971038debf539333b1687b4a1d87cf4fc965a846","modified":1671860091634},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"ea89ca7bb18dc3059079709ee5b6e971a8b87c50","modified":1671860091635},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1671860091638},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1671860091655},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1671860091659},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1671860091660},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1671860091651},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1671860091656},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"558456d85100606c14e0a59801b0ee2ee67aadd9","modified":1671860091656},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1671860091659},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"d561d36229692e2c8a9ee45a7c24c0c2b3599170","modified":1671860091659},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1671860091664},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1671860091660},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1671860091665},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"c02b1779bd0ebca6749f195be096b6ca574bfa29","modified":1671860091661},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"08641633d38903351a7424baf9893d9038ba057d","modified":1671860091660},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1671860091665},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1671860091660},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"471b20e71a19db1f5115727082e5188200c49383","modified":1671860091664},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"5e0e9e9b2cd3c256d52423e2278e790aa387a53a","modified":1671860091666},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1671860091665},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"a2aa5caf338ff5323b6ff0601ebcc09e710d8398","modified":1671860091681},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1671860091683},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1671860091684},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"b9d7d23dc8810542b8c8ffcbfbd3694318debcc6","modified":1671860091680},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f562648de515abc873609bfe9b9f799c8cf42b72","modified":1671860091680},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"e931ef81754a7b9d999fa23d134c620e68e75491","modified":1671860091684},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"af6e3357b8f6df18d0775b8352551c0f8ce38e55","modified":1671860091683},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"612d2f8a53141b353078f2a3405d8d44a79d9558","modified":1671860091684},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1671860091684},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"b0ba6f72848bc711bcf534c56b04ae14ab21b320","modified":1671860091685},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1671860091689},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1671860091685},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"9c9f47bea61c09cc9ee679e759ecce72a9cce1c3","modified":1674199615833},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1671860091686},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1671860091689},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"1c1c585ba99cb4004956b5e98fc044260b456f99","modified":1671860091689},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"956ed11cc5d65941b49192b9be47cecfaed57a91","modified":1671860091690},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1671860091695},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"d72218cb5a6bfe048ae1c92009bd815a08a53d3a","modified":1671860091695},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1671860091694},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1671860091696},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"95c0e6e7eb4d377cc38e83be13bd267335d45c15","modified":1674052104785},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"6d2a841c7656fb28b1e15afe1d7dda56c424b7d7","modified":1671860091696},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"d1398399eb7f1cc004fbcefa18f56188cc8fec8c","modified":1671860091697},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"45792c13c7c439d412b7dc597d74d24f3b598406","modified":1671860091697},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"cced94e70b4b90130cfa215582be2adbf883efba","modified":1671860091697},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1671860091696},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1671860091699},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"5dabc3a5330cc28f0666d1cd8db0d67f553fd854","modified":1671860091693},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"1fed25162d7204480e9bcf476b3246e1717107ca","modified":1671860091693},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1671860091699},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1671860091698},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"84c42716e833d2d1dd47195ea996803ffa0e58ec","modified":1671860091698},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1671860091700},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"331c89ecfb79fab68466944a43e9e3d0ff49c646","modified":1671860091700},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1671860091699},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1671860091700},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1671860091701},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"d0d60008ef4ff74298ff062878766f194a2e4a70","modified":1671860091705},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"645087801624a73cbee63269cfd399e9da39c663","modified":1671860091638},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1671860091701},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1671860091638},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1671860091639},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1671860091639},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"f72e002d56903a49c36174e77e42f88b8af8bd44","modified":1671860091705},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1671860091640},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"6e5ccc9ea4346c71ad4cbf1e9f1cb83bb45e6f27","modified":1671860091641},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"38b85d216d9377ddbaa2e5867e2f03805227237c","modified":1671860091639},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"aff5c34b6061b281c66a986cf017e9021dc11ac6","modified":1671860091639},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"a5ddcf84ce8855c7801289270009e29c3a103150","modified":1671860091645},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1671860091645},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1671860091645},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1671860091644},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1671860091645},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1671860091646},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"3b551ab7618b36795480015b5cf565288df5b957","modified":1671860091647},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e703319ae5395273e81de11ba2366f21a104cf47","modified":1671860091646},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"8c16214a610ff8087628f32d005a1b0aab3bb910","modified":1671860091647},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"55f7c144e4ef7a7f317bcdab8044fd8f89bdd5d9","modified":1671860091647},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"319463fc8ff993b798f2293b659b522ad7770cf0","modified":1671860091648},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"fe599836225b835bd19fe1a6831fb4d41bcec071","modified":1671860091647},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"3df2f59c9552a1f2e6f0d50c4ae97e72c5392b59","modified":1671860091648},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1671860091649},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"5b44b4e5f2445260811de81edd3eeeb97d8bb583","modified":1671860091649},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1671860091649},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f04263a3bd7efb7f1b250cfee112e82f49805492","modified":1671860091650},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1671860091650},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"e45152e4ebc3fb2462916be93f98d18f0574f2d3","modified":1671860091651},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1671860091652},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1671860091652},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"ccb5c3f2a821b87986998595743387d7c997c16e","modified":1671860091650},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"2a39dd634a80a735359206a2481f8468f34a0b5c","modified":1671860091652},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"297d34d83e7bff8ec3b8bc19bb0f4d901c35fe5a","modified":1671860091652},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cd1ce86441dc508e4c3dbf8b829046455ba8a6b4","modified":1671860091653},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"77ac27a24b8347668c4df9d5c44c9461c69eaec9","modified":1671860091653},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1671860091654},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b2ede1f6b41026ebd233ac076a405889a6eec76b","modified":1671860091654},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"d48d59ebf8c0142fb3c4592a0d35874f85e6fd4c","modified":1671860091650},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"af5d3d87b736598dafcf5871863596592cacdfe1","modified":1671860091656},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"bc207dcb771fc2c2c329f29d01708ff6b18443da","modified":1671860091654},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"91a72e94743befa21a7b1c557fbb3751efb87ab0","modified":1671860091655},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1671860091657},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"33368c0b80e4c4e78f3c7ee9bec0fed70ad838ca","modified":1671860091655},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3b5ef84744a1a8fec5a63554079008040d96f924","modified":1671860091657},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"b45fc15c3ae7db3a0fbce0d6da74a72a95ca8a2b","modified":1671860091658},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1671860091658},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1671860091658},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1671860091658},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"63ef0b2a75cf26a94c5bcd885f3a1c144451b852","modified":1671860091655},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1671860091682},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1671860091681},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1671860091681},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1671860091682},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1671860091682},{"_id":"themes/butterfly/source/img/girl.png","hash":"05e8f6e93406ba3b1c4526a8a599274a715af656","modified":1674026761545},{"_id":"themes/butterfly/source/img/head1.png","hash":"09418220d55bd6557f037d8a23f082bd9999b7f4","modified":1674026622107},{"_id":"themes/butterfly/source/img/作品集.png","hash":"eb315fa503a7df0b85b3a5d1918fef1abc6ec978","modified":1673674076398},{"_id":"themes/butterfly/source/img/fenmian.png","hash":"1c986fe6f035fb7cc5a7c156bcc3693906376a05","modified":1671862944062},{"_id":"themes/butterfly/source/img/htmlcss.jpg","hash":"f6e57fdef657cb9427ec179eb0a058244fa2a2eb","modified":1672991249084},{"_id":"themes/butterfly/source/img/sea.jpg","hash":"c438f51e90e75ab7de991584d63b52becb2aa043","modified":1671862461147},{"_id":"public/about/about.css","hash":"7a0dd493553adb6066d7cad7b980c12d247fc0c8","modified":1678340675251},{"_id":"public/about/index.html","hash":"42f6fccca1518ec8ad63764f7f1444df08b17ed6","modified":1709042808551},{"_id":"public/air-conditioner/index.html","hash":"1ecee078f7edf36805043153a864417dfb2da950","modified":1709042808551},{"_id":"public/about/about.html","hash":"e227a2f80413a1a919c7013641f37463153612f4","modified":1709120498674},{"_id":"public/post/de2ba020.html","hash":"2a5515c03acc003174e0f51c283f0fb79d455cc8","modified":1709042808551},{"_id":"public/post/8582db5.html","hash":"10dc2dc1b496d8e195725184f9406c25d40e022b","modified":1709120498674},{"_id":"public/post/4a17b15.html","hash":"cd38dae937f7cb13e4df8e3bac7a334abba79ada","modified":1709042808551},{"_id":"public/post/c2394247.html","hash":"efdab791e491aa4bec8672df13dc29945c890678","modified":1709042808551},{"_id":"public/categories/学习笔记/index.html","hash":"444dc54c1b82968ab24125c0361500c170c6d806","modified":1709120498674},{"_id":"public/categories/美工作品/index.html","hash":"73125ff7750234d9f3a26d13000e02cd41d0dcd0","modified":1709120498674},{"_id":"public/categories/刷题日记/index.html","hash":"2f3a6bc0ba9b420e8a8ae67ad91946e0180f7266","modified":1709120498674},{"_id":"public/archives/index.html","hash":"27dc723a3c9536b20518c42fb2321371be217814","modified":1709120498674},{"_id":"public/archives/2022/index.html","hash":"3424c3703bb2746e24b33b312a1a94dc8e88997e","modified":1709120498674},{"_id":"public/archives/2022/12/index.html","hash":"195e321eac0604dce097fd0297276aed577272a0","modified":1709120498674},{"_id":"public/archives/2023/index.html","hash":"1b6fe68addfa2ae23a6cd59fcbe95d3b0be479f6","modified":1709120498674},{"_id":"public/archives/2023/01/index.html","hash":"bcbae68bf9545f33de491cca33f543456804bf3c","modified":1709120498674},{"_id":"public/index.html","hash":"3ec6338f1a45f4ba13c3aabba720cb47eec4bec7","modified":1709120498674},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1678340675251},{"_id":"public/img/boomboom.png","hash":"00075ebcc6720f4d3c400152545cba06caabe857","modified":1678340675251},{"_id":"public/img/404.png","hash":"b926ce8338a390d5b78738b6f4059a1e094f6da8","modified":1678340675251},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1678340675251},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1678340675251},{"_id":"public/img/wenzhang.webp","hash":"7ba904b8a1dfd5de2ece1589223dba20effe21cf","modified":1678340675251},{"_id":"public/css/footer.css","hash":"fe74d78fefe9eb878f081a7c589cf1ab418e8e56","modified":1678340675251},{"_id":"public/css/progress_bar.css","hash":"b7ee62d6672836adca92a3640a3ae159aef4c4be","modified":1678340675251},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1678340675251},{"_id":"public/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1678340675251},{"_id":"public/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1678340675251},{"_id":"public/js/search/algolia.js","hash":"9feb248552667c53ce1b19bc7a295215f8c77008","modified":1678340675251},{"_id":"public/css/index.css","hash":"83886cafdf5d7c7feff5eb9657a10e6bfff8a402","modified":1678340675251},{"_id":"public/js/main.js","hash":"189359400f6cd4d814ca9ebb5a27b96f7031bce3","modified":1678340675251},{"_id":"public/js/tw_cn.js","hash":"5c1391c9e96950833641f178b5f23c58422fb659","modified":1678340675251},{"_id":"public/img/girl.png","hash":"05e8f6e93406ba3b1c4526a8a599274a715af656","modified":1678340675251},{"_id":"public/img/head1.png","hash":"09418220d55bd6557f037d8a23f082bd9999b7f4","modified":1678340675251},{"_id":"public/img/作品集.png","hash":"eb315fa503a7df0b85b3a5d1918fef1abc6ec978","modified":1678340675251},{"_id":"public/img/fenmian.png","hash":"1c986fe6f035fb7cc5a7c156bcc3693906376a05","modified":1678340675251},{"_id":"public/img/htmlcss.jpg","hash":"f6e57fdef657cb9427ec179eb0a058244fa2a2eb","modified":1678340675251},{"_id":"public/img/sea.jpg","hash":"c438f51e90e75ab7de991584d63b52becb2aa043","modified":1678340675251},{"_id":"source/_posts/C++决策树代码分析.md","hash":"c0ea441daa84eff510a56fdb1c348b0cf6e7cd53","modified":1700212018501},{"_id":"source/pageName/index.md","hash":"d3ce4cd1edaf237bac6905d51a550c2c5863f3a8","modified":1700211084388},{"_id":"public/post/ea3d45b1.html","hash":"6f6891c75bad40ab8c530cec1945a8d947114d52","modified":1709042808551},{"_id":"public/pageName/index.html","hash":"bc5ee840e216708e4f54f8e2174651266b0db509","modified":1709120498674},{"_id":"public/archives/2023/11/index.html","hash":"1a81f91154d3c7f8c0fa74361a73a3881c40a2b8","modified":1709120498674}],"Category":[{"name":"学习笔记","_id":"clf0opdj10004hkty6ifrgqe4"},{"name":"美工作品","_id":"clf0opdj40009hktybo73eo1i"},{"name":"刷题日记","_id":"clf0opdj5000chktyh1sz52vu"}],"Data":[],"Page":[{"title":"关于我","date":"2023-01-20T07:39:26.000Z","aside":false,"comments":0,"background":"#f8f9fe","type":"about","_content":"","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2023-01-20 15:39:26\naside: false\ncomments: false\nbackground: \"#f8f9fe\"\ntype: \"about\"\n---\n","updated":"2023-01-20T08:21:14.734Z","path":"about/index.html","layout":"page","_id":"clf0opdiu0000hkty0svgggex","content":"","site":{"data":{}},"cover":"/img/wenzhang.webp","excerpt":"","more":""},{"_content":"#gitcalendar {\n  margin: 0 auto;\n  border-radius: 24px;\n  background: #fff;\n  border: rgb(203, 203, 203);\n  box-shadow: #666;\n  position: relative;\n  padding: 1rem 2rem;\n  overflow: hidden;\n}\n\n#page:has(#about-page) {\n  border: 0;\n  box-shadow: none !important;\n  padding: 0 !important;\n  background: transparent !important;\n}\n\n#page:has(#about-page) .page-title {\n  display: none;\n}\n\n.page:has(#about-page) #footer-wrap {\n  opacity: 1;\n  overflow: visible;\n  height: auto !important;\n  min-height: 16px;\n  color: #666;\n}\n\n#web_bg ~ .page:has(#about-page) {\n  background: #fff;\n}\n\n#about-page .author-box {\n  position: relative;\n}\n#about-page .author-box .author-img {\n  margin: auto;\n  border-radius: 50%;\n  overflow: hidden;\n  width: 180px;\n  height: 180px;\n}\n#about-page .author-box .author-img img {\n  border-radius: 50%;\n  overflow: hidden;\n  width: 180px;\n  height: 180px;\n}\n\n#about-page .author-box .image-dot {\n  width: 45px;\n  height: 45px;\n  background: #6bdf8f;\n  position: absolute;\n  border-radius: 50%;\n  border: 6px solid #fff;\n  top: 50%;\n  left: 50%;\n  transform: translate(35px, 45px);\n}\n\n.author-content {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 1rem;\n}\n\n#about-page .myInfoAndSayHello {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: #fff;\n  background: linear-gradient(120deg, #5b27ff 0, #00d4ff 100%);\n  background-size: 200%;\n  animation: gradient 15s ease infinite;\n  width: 59%;\n}\n\n.author-content-item {\n  width: 49%;\n  border-radius: 24px;\n  background: #fff;\n  border:rgb(203, 203, 203);\n  box-shadow: #666;\n  position: relative;\n  padding: 1rem 2rem;\n  overflow: hidden;\n}\n\n#about-page .myInfoAndSayHello .title1 {\n  opacity: 0.8;\n  line-height: 1.3;\n}\n\n#about-page .myInfoAndSayHello .title2 {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n  margin: 0.5rem 0;\n}\n.inline-word {\n  word-break: keep-all;\n  white-space: nowrap;\n}\n\n#about-page .myInfoAndSayHello .title1 {\n  opacity: 0.8;\n  line-height: 1.3;\n}\n\n.author-content-item.aboutsiteTips {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-direction: column;\n  width: 39%;\n}\n\n.aboutsiteTips h2 {\n  margin-right: auto;\n  font-size: 36px;\n  font-family: Helvetica;\n  line-height: 1.06;\n  letter-spacing: -0.02em;\n  color: #fff;\n  margin-top: 0;\n}\n\n.aboutsiteTips .mask {\n  height: 36px;\n  position: relative;\n  overflow: hidden;\n  margin-top: 4px;\n}\n.aboutsiteTips .mask span {\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  top: 36px;\n  padding-bottom: #fff;\n  background-size: 100% 100%;\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-repeat: no-repeat;\n}\n.aboutsiteTips .mask span[data-show] {\n  transform: translateY(-100%);\n  transition: 0.5s transform ease-in-out;\n}\n.aboutsiteTips .mask span[data-up] {\n  transform: translateY(-200%);\n  transition: 0.5s transform ease-in-out;\n}\n.aboutsiteTips .mask span:nth-child(1) {\n  background-image: linear-gradient(45deg, #0ecffe 50%, #07a6f1);\n}\n.aboutsiteTips .mask span:nth-child(2) {\n  background-image: linear-gradient(45deg, #18e198 50%, #0ec15d);\n}\n.aboutsiteTips .mask span:nth-child(3) {\n  background-image: linear-gradient(45deg, #8a7cfb 50%, #633e9c);\n}\n.aboutsiteTips .mask span:nth-child(4) {\n  background-image: linear-gradient(45deg, #fa7671 50%, #f45f7f);\n}\n@media screen and (max-width: 768px) {\n  .author-content-item.map {\n    margin-bottom: 0;\n  }\n}\n#about-page .about-statistic {\n  min-height: 380px;\n  width: 39%;\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/23/632d634f8376d.jpg) no-repeat top;\n  background-size: cover;\n  color: #fff;\n  overflow: hidden;\n}\n#about-page .about-statistic::after {\n  box-shadow: 0 -159px 173px 71px #0c1c2c inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n.author-content-item .card-content {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 2;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem 2rem;\n}\n\n.author-content-item .card-content .author-content-item-title {\n  margin-bottom: 0.5rem;\n}\n.author-content-item .author-content-item-title {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1;\n}\n#statistic {\n  font-size: 16px;\n  border-radius: 15px;\n  width: 100%;\n  color: #fff;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n}\n#statistic div span:first-child {\n  opacity: 0.8;\n  font-size: 0.6rem;\n}\n#statistic div span:last-child {\n  font-weight: 700;\n  font-size: 34px;\n  line-height: 1;\n  white-space: nowrap;\n}\n#statistic div {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: 50%;\n  margin-bottom: 0.5rem;\n}\n\n.post-tips {\n  color: #666;\n  font-size: 14px;\n  position: absolute;\n  bottom: 1rem;\n  left: 2rem;\n}\n.post-tips a {\n  color: #666 !important;\n  border: none !important;\n}\n.author-content-item .card-content .banner-button-group {\n  position: absolute;\n  bottom: 1.5rem;\n  right: 2rem;\n}\n.author-content-item .card-content .banner-button-group .banner-button {\n  height: 40px;\n  width: 124px;\n  border-radius: 20px;\n  justify-content: center;\n  background: #fff;\n  color: #666;\n  display: flex;\n  align-items: center;\n  z-index: 1;\n  transition: 0.3s;\n  cursor: pointer;\n  border-bottom: 0 !important;\n}\n.author-content-item .card-content .banner-button-group .banner-button i {\n  margin-right: 8px;\n  font-size: 1rem;\n}\n#about-page .author-content-item .card-content .banner-button-group .banner-button i {\n  font-size: 1.5rem;\n}\n\n.author-content-item .card-content .banner-button-group .banner-button:hover {\n  background: #fff;\n  color: #fff;\n  border-radius: 20px !important;\n}\n.author-content-item.personalities {\n  position: relative;\n  width: 59%;\n}\n\n.author-content-item.personalities .image {\n  position: absolute;\n  right: 30px;\n  top: 10px;\n  width: 220px;\n  transition: transform 2s cubic-bezier(0.13, 0.45, 0.21, 1.02);\n}\n.author-content-item.personalities .image img {\n  display: block;\n  margin: 0 auto 20px;\n  max-width: 100%;\n  transition: filter 375ms ease-in 0.2s;\n}\n.author-content-item.personalities:hover .image {\n  transform: rotate(-10deg);\n}\n.author-content-item.myphoto {\n  height: 60%;\n  min-height: 240px;\n  position: relative;\n  overflow: hidden;\n  width: 39%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.author-content-item.myphoto img {\n  position: absolute;\n  min-width: 100%;\n  object-fit: cover;\n  transition: 0.6s;\n  animation: coverIn 2s ease-out forwards;\n  transition: transform 2s ease-out !important;\n}\n.author-content-item.myphoto:hover img {\n  transform: scale(1.1);\n}\n.author-content-item:hover .card-background-icon {\n  transform: rotate(20deg);\n}\n.author-content-item.personalities .title2 {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n}\n\n.author-content-item.map {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/24/632e6f48981d8.jpg) no-repeat center;\n  min-height: 160px;\n  max-height: 400px;\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n  height: 60%;\n  background-size: 100%;\n  transition: 1s ease-in-out;\n}\n[data-theme=\"dark\"] .author-content-item.map {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/26/6330ebf1f3e65.jpg) no-repeat center;\n  background-size: 100%;\n}\n\n.author-content-item.single {\n  width: 100%;\n}\n\n.author-content-item.map .map-title {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #fff;\n  padding: 0.5rem 2rem;\n  backdrop-filter: saturate(180%) blur(20px);\n  -webkit-backdrop-filter: blur(20px);\n  transition: 1s ease-in-out;\n  font-size: 20px;\n}\n.author-content-item.map .map-title b {\n  color: #fff;\n}\n.author-content-item.selfInfo {\n  display: flex;\n  min-height: 100px;\n  max-height: 400px;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  height: -webkit-fill-available;\n  height: 40%;\n}\n.author-content-item.selfInfo div {\n  display: flex;\n  flex-direction: column;\n  margin: 0.5rem 2rem 0.5rem 0;\n}\n.author-content-item.selfInfo .selfInfo-title {\n  opacity: 0.8;\n  font-size: 0.6rem;\n  line-height: 1;\n  margin-bottom: 8px;\n}\n.author-content-item.selfInfo .selfInfo-content {\n  font-weight: 700;\n  font-size: 34px;\n  line-height: 1;\n}\n.author-content-item-group.column.mapAndInfo {\n  width: 59%;\n}\n.author-content-item.map:hover {\n  background-size: 120%;\n  transition: 4s ease-in-out;\n  background-position-x: 0;\n  background-position-y: 36%;\n}\n.author-content-item.map:hover .map-title {\n  bottom: -100%;\n}\n.author-content-item-group.column {\n  display: flex;\n  flex-direction: column;\n  width: 49%;\n  justify-content: space-between;\n}\n\n.post-tips a:hover {\n  color: #fff !important;\n  background: none !important;\n}\n\n.author-content-item.single.reward .reward-list-updateDate {\n  color: #666;\n  font-size: 14px;\n}\n\n.author-content-item.single.reward .post-reward {\n  position: absolute;\n  margin-top: 0px;\n  width: auto;\n  text-align: none;\n  pointer-events: none;\n  right: 2rem;\n  top: 2rem;\n}\n.tip-button {\n  border: 0;\n  border-radius: 2.25rem;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: 600;\n  height: 2.6rem;\n  margin-bottom: -4rem;\n  outline: 0;\n  position: relative;\n  top: 0;\n  transform-origin: 0 100%;\n  transition: transform 50ms ease-in-out;\n  width: auto;\n  -webkit-tap-highlight-color: transparent;\n}\n.coin::before,\n.coin__back,\n.coin__back::after,\n.coin__front,\n.coin__front::after,\n.coin__middle {\n  border-radius: 50%;\n  box-sizing: border-box;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  width: 100%;\n  z-index: 3;\n}\n.coin-wrapper {\n  background: 0 0;\n  bottom: 0;\n  height: 18rem;\n  left: 0;\n  opacity: 1;\n  overflow: hidden;\n  pointer-events: none;\n  position: absolute;\n  transform: none;\n  transform-origin: 50% 100%;\n  transition: opacity 0.2s linear 0.1s, transform 0.3s ease-out;\n  width: 100%;\n}\n.coin__front::after {\n  background: rgba(0, 0, 0, 0.2);\n  content: \"\";\n  opacity: #fff;\n}\n.coin__back::after {\n  background: rgba(0, 0, 0, 0.2);\n  content: \"\";\n  opacity: #fff;\n}\n.coin__middle {\n  background: #737c99;\n  transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--middle-scale-multiplier));\n}\n.coin::before {\n  background: radial-gradient(circle at 25% 65%, transparent 50%, rgba(255, 255, 255, 0.9) 90%), linear-gradient(55deg, transparent\n        calc(var(--shine-bg-multiplier) + 0), #e9f4ff calc(var(--shine-bg-multiplier) + 0), transparent calc(var(\n              --shine-bg-multiplier\n            ) + 50%));\n  content: \"\";\n  opacity: #fff;\n  transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / -2)) scaleY(var(--middle-scale-multiplier))\n    rotate(calc(var(--coin-rotation-multiplier) * 1deg));\n  z-index: 10;\n}\n\n.coin {\n  --front-y-multiplier: 0;\n  --back-y-multiplier: 0;\n  --coin-y-multiplier: 0;\n  --coin-x-multiplier: 0;\n  --coin-scale-multiplier: 0;\n  --coin-rotation-multiplier: 0;\n  --shine-opacity-multiplier: 0.4;\n  --shine-bg-multiplier: 50%;\n  bottom: calc(var(--coin-y-multiplier) * 1rem - 3.5rem);\n  height: 3.5rem;\n  margin-bottom: 3.05rem;\n  position: absolute;\n  right: calc(var(--coin-x-multiplier) * 34% + 16%);\n  transform: translateX(50%) scale(calc(0.4 + var(--coin-scale-multiplier))) rotate(calc(var(\n            --coin-rotation-multiplier\n          ) * -1deg));\n  transition: opacity 0.1s linear 0.2s;\n  width: 3.5rem;\n  z-index: 3;\n}\n\n.coin__back {\n  background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%),\n    radial-gradient(circle at 50% 40%, #fcfaf9 23%, transparent 23%), radial-gradient(circle at 50% 100%, #fcfaf9 35%, transparent\n        35%);\n  background-color: #8590b3;\n  background-size: 100% 100%;\n  transform: translateY(calc(var(--back-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--back-scale-multiplier));\n}\n.coin__front {\n  background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%),\n    linear-gradient(210deg, #8590b3 32%, transparent 32%), linear-gradient(150deg, #8590b3 32%, transparent 32%),\n    linear-gradient(to right, #8590b3 22%, transparent 22%, transparent 78%, #8590b3 78%), linear-gradient(\n      to bottom,\n      #fcfaf9 44%,\n      transparent 44%,\n      transparent 65%,\n      #fcfaf9 65%,\n      #fcfaf9 71%,\n      #8590b3 71%\n    ), linear-gradient(to right, transparent 28%, #fcfaf9 28%, #fcfaf9 34%, #8590b3 34%, #8590b3 40%, #fcfaf9 40%, #fcfaf9\n        47%, #8590b3 47%, #8590b3 53%, #fcfaf9 53%, #fcfaf9 60%, #8590b3 60%, #8590b3 66%, #fcfaf9 66%, #fcfaf9 72%, transparent\n        72%);\n  background-color: #8590b3;\n  background-size: 100% 100%;\n  transform: translateY(calc(var(--front-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--front-scale-multiplier));\n}\n.tip-button__text {\n  color: #fff;\n  margin-right: 1.8rem;\n  opacity: 1;\n  position: relative;\n  transition: opacity 0.1s linear 0.5s;\n  z-index: 3;\n}\n.author-content .post-reward .reward-main {\n  bottom: 0;\n  top: 50px;\n  left: auto;\n  right: 0;\n}\n.author-content .post-reward .reward-main .reward-all:before {\n  top: -11px;\n  bottom: auto;\n}\n#about-page .post-reward .reward-item a:hover {\n  background: transparent !important;\n}\n#about-page .post-reward .reward-item a {\n  border-bottom: none !important;\n}\n#about-page .post-reward .reward-item a img {\n  margin-bottom: 0 !important;\n}\n#about-page .post-reward .reward-main .reward-all {\n  border-radius: 10px;\n  padding: 20px 10px !important;\n}\n.post-reward .reward-main .reward-all .reward-item {\n  padding: 0 8px !important;\n}\n.post-reward .reward-main .reward-all li.reward-item::before {\n  content: none !important;\n}\n.post-reward .reward-main .reward-all:after {\n  content: none !important;\n}\n.author-content-item.maxim {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: center;\n  width: 39%;\n}\n.author-content-item .author-content-item-tips {\n  opacity: 0.8;\n  font-size: 0.6rem;\n  margin-bottom: 0.5rem;\n}\n.author-content-item.maxim .maxim-title {\n  display: flex;\n  flex-direction: column;\n}\n.author-content-item.buff {\n  height: 200px;\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: center;\n  background: linear-gradient(120deg, #ff27e8 0, #ff8000 100%);\n  color: var(--anzhiyu-white);\n  background-size: 200%;\n  animation: gradient 15s ease infinite;\n  min-height: 200px;\n  height: fit-content;\n  width: 59%;\n}\n.author-content-item.buff .card-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.author-content-item.buff .buff-title {\n  display: flex;\n  flex-direction: column;\n}\n.card-background-icon {\n  font-size: 12rem;\n  opacity: 0.2;\n  position: absolute;\n  right: 0;\n  bottom: -40%;\n  transform: rotate(30deg);\n  transition: 2s ease-in-out;\n}\n.author-content-item.game-yuanshen {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/12/19/63a079ca63c8a.webp) no-repeat top;\n  background-size: cover;\n  min-height: 300px;\n  overflow: hidden;\n  color: var(--anzhiyu-white);\n  width: 59%;\n}\n\n.author-content-item .content-bottom {\n  margin-top: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.author-content-item .content-bottom .icon-group {\n  display: flex;\n  position: relative;\n}\n.author-content-item .content-bottom .icon-group i {\n  display: inline-block;\n  width: 143px;\n  height: 18px;\n  margin-right: 0.5rem;\n}\n.icon-pos-mid {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/25/632fb9cecfc8c.png);\n}\n.author-content-item.game-yuanshen::after {\n  box-shadow: 0 -69px 203px 11px #575d8b inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n.author-content-item.comic-content {\n  width: 39%;\n  background: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/common/violet.jpg) no-repeat top;\n  background-size: cover;\n  min-height: 300px;\n  overflow: hidden;\n  color: violet;\n}\n.author-content-item.comic-content::after {\n  box-shadow: 0 -48px 203px 11px #fbe9b8 inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n.author-content-item.like-technology {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/24/632f0dd8f33c6.webp) no-repeat;\n  background-size: cover;\n  min-height: 230px;\n  color: var(--anzhiyu-white);\n}\n\n.author-content-item.like-music {\n  background: url(https://p2.music.126.net/Mrg1i7DwcwjWBvQPIMt_Mg==/79164837213438.jpg) no-repeat top;\n  background-size: cover;\n  min-height: 400px;\n  color: var(--anzhiyu-white);\n  overflow: hidden;\n}\n\n.author-content-item .card-content .banner-button-group {\n  position: absolute;\n  bottom: 1.5rem;\n  right: 2rem;\n}\n\n.author-content-item.like-music::after {\n  box-shadow: 0 -69px 203px 11px #453e38 inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n@media screen and (max-width: 768px) {\n  #gitcalendar {\n    display: none;\n  }\n  [data-theme=\"dark\"] .author-content-item .card-content .banner-button-group .banner-button {\n    color: var(--anzhiyu-black) !important;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button:hover {\n    background: none !important;\n  }\n  .author-content-item.game-yuanshen .content-bottom {\n    padding-bottom: 10px;\n  }\n  .author-content-item.game-yuanshen .game-yuanshen-uid {\n    display: none;\n  }\n  .author-content {\n    margin-top: 0;\n  }\n  .author-content-item {\n    width: 100% !important;\n    margin-top: 1rem;\n    padding: 1rem;\n  }\n  .author-content-item.map {\n    margin-bottom: 0;\n  }\n  .author-content-item-group.column {\n    width: 100% !important;\n  }\n  .author-content-item.selfInfo {\n    height: 95%;\n  }\n  .author-content-item.personalities {\n    height: 170px;\n  }\n  .post-tips {\n    left: auto;\n  }\n  .author-content-item.personalities .image {\n    width: 90px;\n  }\n  .site-card-group > a {\n    width: 100% !important;\n  }\n  .post-reward {\n    display: none;\n  }\n  .reward-list-item {\n    width: 100% !important;\n  }\n  .layout > div:first-child:not(.recent-posts) {\n    /* border-radius: 0; */\n    padding: 0 1rem !important;\n    box-shadow: none !important;\n    background: #fff;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button-text {\n    display: none;\n  }\n  .author-content-item .card-content .banner-button-group {\n    right: 1rem;\n    bottom: 1rem;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button {\n    background: 0 0;\n    padding: 0;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button i {\n    margin-right: 0;\n    font-size: 1.5rem;\n    background: white;\n    border-radius: 50%;\n    padding: 6px;\n    margin-left: 80px;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button:hover i {\n    background: #fff !important;\n    color: var(--anzhiyu-theme);\n  }\n  #selfInfo-content-year {\n    width: 90px;\n  }\n}\n\n@media screen and (min-width: 768px) and (max-width: 896px) {\n  .author-content-item.like-music .content-bottom .tips {\n    display: none;\n  }\n}\n\n/* 赞赏的css */\n\n.reward-list-all {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n}\n\n.reward-list-item {\n  padding: 1rem;\n  border-radius: 12px;\n  border:rgb(203, 203, 203);\n  width: calc((100% / 3) - 0.5rem);\n  margin: 0 0.25rem 0.5rem 0.25rem;\n  box-shadow: #666;\n}\n\n.reward-list-item .reward-list-item-name {\n  font-size: 1rem;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: 0.5rem;\n}\n\n.reward-list-item .reward-list-bottom-group {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.reward-list-item .reward-list-item-money {\n  padding: 4px;\n  background: #fff;\n  color: #fff;\n  font-size: 12px;\n  line-height: 1;\n  border-radius: 4px;\n  margin-right: 4px;\n  white-space: nowrap;\n}\n\n.reward-list-item .reward-list-item-time {\n  font-size: 12px;\n  color: #fff;\n  white-space: nowrap;\n}","source":"about/about.css","raw":"#gitcalendar {\n  margin: 0 auto;\n  border-radius: 24px;\n  background: #fff;\n  border: rgb(203, 203, 203);\n  box-shadow: #666;\n  position: relative;\n  padding: 1rem 2rem;\n  overflow: hidden;\n}\n\n#page:has(#about-page) {\n  border: 0;\n  box-shadow: none !important;\n  padding: 0 !important;\n  background: transparent !important;\n}\n\n#page:has(#about-page) .page-title {\n  display: none;\n}\n\n.page:has(#about-page) #footer-wrap {\n  opacity: 1;\n  overflow: visible;\n  height: auto !important;\n  min-height: 16px;\n  color: #666;\n}\n\n#web_bg ~ .page:has(#about-page) {\n  background: #fff;\n}\n\n#about-page .author-box {\n  position: relative;\n}\n#about-page .author-box .author-img {\n  margin: auto;\n  border-radius: 50%;\n  overflow: hidden;\n  width: 180px;\n  height: 180px;\n}\n#about-page .author-box .author-img img {\n  border-radius: 50%;\n  overflow: hidden;\n  width: 180px;\n  height: 180px;\n}\n\n#about-page .author-box .image-dot {\n  width: 45px;\n  height: 45px;\n  background: #6bdf8f;\n  position: absolute;\n  border-radius: 50%;\n  border: 6px solid #fff;\n  top: 50%;\n  left: 50%;\n  transform: translate(35px, 45px);\n}\n\n.author-content {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 1rem;\n}\n\n#about-page .myInfoAndSayHello {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: #fff;\n  background: linear-gradient(120deg, #5b27ff 0, #00d4ff 100%);\n  background-size: 200%;\n  animation: gradient 15s ease infinite;\n  width: 59%;\n}\n\n.author-content-item {\n  width: 49%;\n  border-radius: 24px;\n  background: #fff;\n  border:rgb(203, 203, 203);\n  box-shadow: #666;\n  position: relative;\n  padding: 1rem 2rem;\n  overflow: hidden;\n}\n\n#about-page .myInfoAndSayHello .title1 {\n  opacity: 0.8;\n  line-height: 1.3;\n}\n\n#about-page .myInfoAndSayHello .title2 {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n  margin: 0.5rem 0;\n}\n.inline-word {\n  word-break: keep-all;\n  white-space: nowrap;\n}\n\n#about-page .myInfoAndSayHello .title1 {\n  opacity: 0.8;\n  line-height: 1.3;\n}\n\n.author-content-item.aboutsiteTips {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-direction: column;\n  width: 39%;\n}\n\n.aboutsiteTips h2 {\n  margin-right: auto;\n  font-size: 36px;\n  font-family: Helvetica;\n  line-height: 1.06;\n  letter-spacing: -0.02em;\n  color: #fff;\n  margin-top: 0;\n}\n\n.aboutsiteTips .mask {\n  height: 36px;\n  position: relative;\n  overflow: hidden;\n  margin-top: 4px;\n}\n.aboutsiteTips .mask span {\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  top: 36px;\n  padding-bottom: #fff;\n  background-size: 100% 100%;\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-repeat: no-repeat;\n}\n.aboutsiteTips .mask span[data-show] {\n  transform: translateY(-100%);\n  transition: 0.5s transform ease-in-out;\n}\n.aboutsiteTips .mask span[data-up] {\n  transform: translateY(-200%);\n  transition: 0.5s transform ease-in-out;\n}\n.aboutsiteTips .mask span:nth-child(1) {\n  background-image: linear-gradient(45deg, #0ecffe 50%, #07a6f1);\n}\n.aboutsiteTips .mask span:nth-child(2) {\n  background-image: linear-gradient(45deg, #18e198 50%, #0ec15d);\n}\n.aboutsiteTips .mask span:nth-child(3) {\n  background-image: linear-gradient(45deg, #8a7cfb 50%, #633e9c);\n}\n.aboutsiteTips .mask span:nth-child(4) {\n  background-image: linear-gradient(45deg, #fa7671 50%, #f45f7f);\n}\n@media screen and (max-width: 768px) {\n  .author-content-item.map {\n    margin-bottom: 0;\n  }\n}\n#about-page .about-statistic {\n  min-height: 380px;\n  width: 39%;\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/23/632d634f8376d.jpg) no-repeat top;\n  background-size: cover;\n  color: #fff;\n  overflow: hidden;\n}\n#about-page .about-statistic::after {\n  box-shadow: 0 -159px 173px 71px #0c1c2c inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n.author-content-item .card-content {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 2;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem 2rem;\n}\n\n.author-content-item .card-content .author-content-item-title {\n  margin-bottom: 0.5rem;\n}\n.author-content-item .author-content-item-title {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1;\n}\n#statistic {\n  font-size: 16px;\n  border-radius: 15px;\n  width: 100%;\n  color: #fff;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n}\n#statistic div span:first-child {\n  opacity: 0.8;\n  font-size: 0.6rem;\n}\n#statistic div span:last-child {\n  font-weight: 700;\n  font-size: 34px;\n  line-height: 1;\n  white-space: nowrap;\n}\n#statistic div {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: 50%;\n  margin-bottom: 0.5rem;\n}\n\n.post-tips {\n  color: #666;\n  font-size: 14px;\n  position: absolute;\n  bottom: 1rem;\n  left: 2rem;\n}\n.post-tips a {\n  color: #666 !important;\n  border: none !important;\n}\n.author-content-item .card-content .banner-button-group {\n  position: absolute;\n  bottom: 1.5rem;\n  right: 2rem;\n}\n.author-content-item .card-content .banner-button-group .banner-button {\n  height: 40px;\n  width: 124px;\n  border-radius: 20px;\n  justify-content: center;\n  background: #fff;\n  color: #666;\n  display: flex;\n  align-items: center;\n  z-index: 1;\n  transition: 0.3s;\n  cursor: pointer;\n  border-bottom: 0 !important;\n}\n.author-content-item .card-content .banner-button-group .banner-button i {\n  margin-right: 8px;\n  font-size: 1rem;\n}\n#about-page .author-content-item .card-content .banner-button-group .banner-button i {\n  font-size: 1.5rem;\n}\n\n.author-content-item .card-content .banner-button-group .banner-button:hover {\n  background: #fff;\n  color: #fff;\n  border-radius: 20px !important;\n}\n.author-content-item.personalities {\n  position: relative;\n  width: 59%;\n}\n\n.author-content-item.personalities .image {\n  position: absolute;\n  right: 30px;\n  top: 10px;\n  width: 220px;\n  transition: transform 2s cubic-bezier(0.13, 0.45, 0.21, 1.02);\n}\n.author-content-item.personalities .image img {\n  display: block;\n  margin: 0 auto 20px;\n  max-width: 100%;\n  transition: filter 375ms ease-in 0.2s;\n}\n.author-content-item.personalities:hover .image {\n  transform: rotate(-10deg);\n}\n.author-content-item.myphoto {\n  height: 60%;\n  min-height: 240px;\n  position: relative;\n  overflow: hidden;\n  width: 39%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.author-content-item.myphoto img {\n  position: absolute;\n  min-width: 100%;\n  object-fit: cover;\n  transition: 0.6s;\n  animation: coverIn 2s ease-out forwards;\n  transition: transform 2s ease-out !important;\n}\n.author-content-item.myphoto:hover img {\n  transform: scale(1.1);\n}\n.author-content-item:hover .card-background-icon {\n  transform: rotate(20deg);\n}\n.author-content-item.personalities .title2 {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n}\n\n.author-content-item.map {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/24/632e6f48981d8.jpg) no-repeat center;\n  min-height: 160px;\n  max-height: 400px;\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n  height: 60%;\n  background-size: 100%;\n  transition: 1s ease-in-out;\n}\n[data-theme=\"dark\"] .author-content-item.map {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/26/6330ebf1f3e65.jpg) no-repeat center;\n  background-size: 100%;\n}\n\n.author-content-item.single {\n  width: 100%;\n}\n\n.author-content-item.map .map-title {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #fff;\n  padding: 0.5rem 2rem;\n  backdrop-filter: saturate(180%) blur(20px);\n  -webkit-backdrop-filter: blur(20px);\n  transition: 1s ease-in-out;\n  font-size: 20px;\n}\n.author-content-item.map .map-title b {\n  color: #fff;\n}\n.author-content-item.selfInfo {\n  display: flex;\n  min-height: 100px;\n  max-height: 400px;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  height: -webkit-fill-available;\n  height: 40%;\n}\n.author-content-item.selfInfo div {\n  display: flex;\n  flex-direction: column;\n  margin: 0.5rem 2rem 0.5rem 0;\n}\n.author-content-item.selfInfo .selfInfo-title {\n  opacity: 0.8;\n  font-size: 0.6rem;\n  line-height: 1;\n  margin-bottom: 8px;\n}\n.author-content-item.selfInfo .selfInfo-content {\n  font-weight: 700;\n  font-size: 34px;\n  line-height: 1;\n}\n.author-content-item-group.column.mapAndInfo {\n  width: 59%;\n}\n.author-content-item.map:hover {\n  background-size: 120%;\n  transition: 4s ease-in-out;\n  background-position-x: 0;\n  background-position-y: 36%;\n}\n.author-content-item.map:hover .map-title {\n  bottom: -100%;\n}\n.author-content-item-group.column {\n  display: flex;\n  flex-direction: column;\n  width: 49%;\n  justify-content: space-between;\n}\n\n.post-tips a:hover {\n  color: #fff !important;\n  background: none !important;\n}\n\n.author-content-item.single.reward .reward-list-updateDate {\n  color: #666;\n  font-size: 14px;\n}\n\n.author-content-item.single.reward .post-reward {\n  position: absolute;\n  margin-top: 0px;\n  width: auto;\n  text-align: none;\n  pointer-events: none;\n  right: 2rem;\n  top: 2rem;\n}\n.tip-button {\n  border: 0;\n  border-radius: 2.25rem;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: 600;\n  height: 2.6rem;\n  margin-bottom: -4rem;\n  outline: 0;\n  position: relative;\n  top: 0;\n  transform-origin: 0 100%;\n  transition: transform 50ms ease-in-out;\n  width: auto;\n  -webkit-tap-highlight-color: transparent;\n}\n.coin::before,\n.coin__back,\n.coin__back::after,\n.coin__front,\n.coin__front::after,\n.coin__middle {\n  border-radius: 50%;\n  box-sizing: border-box;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  width: 100%;\n  z-index: 3;\n}\n.coin-wrapper {\n  background: 0 0;\n  bottom: 0;\n  height: 18rem;\n  left: 0;\n  opacity: 1;\n  overflow: hidden;\n  pointer-events: none;\n  position: absolute;\n  transform: none;\n  transform-origin: 50% 100%;\n  transition: opacity 0.2s linear 0.1s, transform 0.3s ease-out;\n  width: 100%;\n}\n.coin__front::after {\n  background: rgba(0, 0, 0, 0.2);\n  content: \"\";\n  opacity: #fff;\n}\n.coin__back::after {\n  background: rgba(0, 0, 0, 0.2);\n  content: \"\";\n  opacity: #fff;\n}\n.coin__middle {\n  background: #737c99;\n  transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--middle-scale-multiplier));\n}\n.coin::before {\n  background: radial-gradient(circle at 25% 65%, transparent 50%, rgba(255, 255, 255, 0.9) 90%), linear-gradient(55deg, transparent\n        calc(var(--shine-bg-multiplier) + 0), #e9f4ff calc(var(--shine-bg-multiplier) + 0), transparent calc(var(\n              --shine-bg-multiplier\n            ) + 50%));\n  content: \"\";\n  opacity: #fff;\n  transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / -2)) scaleY(var(--middle-scale-multiplier))\n    rotate(calc(var(--coin-rotation-multiplier) * 1deg));\n  z-index: 10;\n}\n\n.coin {\n  --front-y-multiplier: 0;\n  --back-y-multiplier: 0;\n  --coin-y-multiplier: 0;\n  --coin-x-multiplier: 0;\n  --coin-scale-multiplier: 0;\n  --coin-rotation-multiplier: 0;\n  --shine-opacity-multiplier: 0.4;\n  --shine-bg-multiplier: 50%;\n  bottom: calc(var(--coin-y-multiplier) * 1rem - 3.5rem);\n  height: 3.5rem;\n  margin-bottom: 3.05rem;\n  position: absolute;\n  right: calc(var(--coin-x-multiplier) * 34% + 16%);\n  transform: translateX(50%) scale(calc(0.4 + var(--coin-scale-multiplier))) rotate(calc(var(\n            --coin-rotation-multiplier\n          ) * -1deg));\n  transition: opacity 0.1s linear 0.2s;\n  width: 3.5rem;\n  z-index: 3;\n}\n\n.coin__back {\n  background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%),\n    radial-gradient(circle at 50% 40%, #fcfaf9 23%, transparent 23%), radial-gradient(circle at 50% 100%, #fcfaf9 35%, transparent\n        35%);\n  background-color: #8590b3;\n  background-size: 100% 100%;\n  transform: translateY(calc(var(--back-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--back-scale-multiplier));\n}\n.coin__front {\n  background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%),\n    linear-gradient(210deg, #8590b3 32%, transparent 32%), linear-gradient(150deg, #8590b3 32%, transparent 32%),\n    linear-gradient(to right, #8590b3 22%, transparent 22%, transparent 78%, #8590b3 78%), linear-gradient(\n      to bottom,\n      #fcfaf9 44%,\n      transparent 44%,\n      transparent 65%,\n      #fcfaf9 65%,\n      #fcfaf9 71%,\n      #8590b3 71%\n    ), linear-gradient(to right, transparent 28%, #fcfaf9 28%, #fcfaf9 34%, #8590b3 34%, #8590b3 40%, #fcfaf9 40%, #fcfaf9\n        47%, #8590b3 47%, #8590b3 53%, #fcfaf9 53%, #fcfaf9 60%, #8590b3 60%, #8590b3 66%, #fcfaf9 66%, #fcfaf9 72%, transparent\n        72%);\n  background-color: #8590b3;\n  background-size: 100% 100%;\n  transform: translateY(calc(var(--front-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--front-scale-multiplier));\n}\n.tip-button__text {\n  color: #fff;\n  margin-right: 1.8rem;\n  opacity: 1;\n  position: relative;\n  transition: opacity 0.1s linear 0.5s;\n  z-index: 3;\n}\n.author-content .post-reward .reward-main {\n  bottom: 0;\n  top: 50px;\n  left: auto;\n  right: 0;\n}\n.author-content .post-reward .reward-main .reward-all:before {\n  top: -11px;\n  bottom: auto;\n}\n#about-page .post-reward .reward-item a:hover {\n  background: transparent !important;\n}\n#about-page .post-reward .reward-item a {\n  border-bottom: none !important;\n}\n#about-page .post-reward .reward-item a img {\n  margin-bottom: 0 !important;\n}\n#about-page .post-reward .reward-main .reward-all {\n  border-radius: 10px;\n  padding: 20px 10px !important;\n}\n.post-reward .reward-main .reward-all .reward-item {\n  padding: 0 8px !important;\n}\n.post-reward .reward-main .reward-all li.reward-item::before {\n  content: none !important;\n}\n.post-reward .reward-main .reward-all:after {\n  content: none !important;\n}\n.author-content-item.maxim {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: center;\n  width: 39%;\n}\n.author-content-item .author-content-item-tips {\n  opacity: 0.8;\n  font-size: 0.6rem;\n  margin-bottom: 0.5rem;\n}\n.author-content-item.maxim .maxim-title {\n  display: flex;\n  flex-direction: column;\n}\n.author-content-item.buff {\n  height: 200px;\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: center;\n  background: linear-gradient(120deg, #ff27e8 0, #ff8000 100%);\n  color: var(--anzhiyu-white);\n  background-size: 200%;\n  animation: gradient 15s ease infinite;\n  min-height: 200px;\n  height: fit-content;\n  width: 59%;\n}\n.author-content-item.buff .card-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.author-content-item.buff .buff-title {\n  display: flex;\n  flex-direction: column;\n}\n.card-background-icon {\n  font-size: 12rem;\n  opacity: 0.2;\n  position: absolute;\n  right: 0;\n  bottom: -40%;\n  transform: rotate(30deg);\n  transition: 2s ease-in-out;\n}\n.author-content-item.game-yuanshen {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/12/19/63a079ca63c8a.webp) no-repeat top;\n  background-size: cover;\n  min-height: 300px;\n  overflow: hidden;\n  color: var(--anzhiyu-white);\n  width: 59%;\n}\n\n.author-content-item .content-bottom {\n  margin-top: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.author-content-item .content-bottom .icon-group {\n  display: flex;\n  position: relative;\n}\n.author-content-item .content-bottom .icon-group i {\n  display: inline-block;\n  width: 143px;\n  height: 18px;\n  margin-right: 0.5rem;\n}\n.icon-pos-mid {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/25/632fb9cecfc8c.png);\n}\n.author-content-item.game-yuanshen::after {\n  box-shadow: 0 -69px 203px 11px #575d8b inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n.author-content-item.comic-content {\n  width: 39%;\n  background: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/common/violet.jpg) no-repeat top;\n  background-size: cover;\n  min-height: 300px;\n  overflow: hidden;\n  color: violet;\n}\n.author-content-item.comic-content::after {\n  box-shadow: 0 -48px 203px 11px #fbe9b8 inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n.author-content-item.like-technology {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/24/632f0dd8f33c6.webp) no-repeat;\n  background-size: cover;\n  min-height: 230px;\n  color: var(--anzhiyu-white);\n}\n\n.author-content-item.like-music {\n  background: url(https://p2.music.126.net/Mrg1i7DwcwjWBvQPIMt_Mg==/79164837213438.jpg) no-repeat top;\n  background-size: cover;\n  min-height: 400px;\n  color: var(--anzhiyu-white);\n  overflow: hidden;\n}\n\n.author-content-item .card-content .banner-button-group {\n  position: absolute;\n  bottom: 1.5rem;\n  right: 2rem;\n}\n\n.author-content-item.like-music::after {\n  box-shadow: 0 -69px 203px 11px #453e38 inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n@media screen and (max-width: 768px) {\n  #gitcalendar {\n    display: none;\n  }\n  [data-theme=\"dark\"] .author-content-item .card-content .banner-button-group .banner-button {\n    color: var(--anzhiyu-black) !important;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button:hover {\n    background: none !important;\n  }\n  .author-content-item.game-yuanshen .content-bottom {\n    padding-bottom: 10px;\n  }\n  .author-content-item.game-yuanshen .game-yuanshen-uid {\n    display: none;\n  }\n  .author-content {\n    margin-top: 0;\n  }\n  .author-content-item {\n    width: 100% !important;\n    margin-top: 1rem;\n    padding: 1rem;\n  }\n  .author-content-item.map {\n    margin-bottom: 0;\n  }\n  .author-content-item-group.column {\n    width: 100% !important;\n  }\n  .author-content-item.selfInfo {\n    height: 95%;\n  }\n  .author-content-item.personalities {\n    height: 170px;\n  }\n  .post-tips {\n    left: auto;\n  }\n  .author-content-item.personalities .image {\n    width: 90px;\n  }\n  .site-card-group > a {\n    width: 100% !important;\n  }\n  .post-reward {\n    display: none;\n  }\n  .reward-list-item {\n    width: 100% !important;\n  }\n  .layout > div:first-child:not(.recent-posts) {\n    /* border-radius: 0; */\n    padding: 0 1rem !important;\n    box-shadow: none !important;\n    background: #fff;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button-text {\n    display: none;\n  }\n  .author-content-item .card-content .banner-button-group {\n    right: 1rem;\n    bottom: 1rem;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button {\n    background: 0 0;\n    padding: 0;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button i {\n    margin-right: 0;\n    font-size: 1.5rem;\n    background: white;\n    border-radius: 50%;\n    padding: 6px;\n    margin-left: 80px;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button:hover i {\n    background: #fff !important;\n    color: var(--anzhiyu-theme);\n  }\n  #selfInfo-content-year {\n    width: 90px;\n  }\n}\n\n@media screen and (min-width: 768px) and (max-width: 896px) {\n  .author-content-item.like-music .content-bottom .tips {\n    display: none;\n  }\n}\n\n/* 赞赏的css */\n\n.reward-list-all {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n}\n\n.reward-list-item {\n  padding: 1rem;\n  border-radius: 12px;\n  border:rgb(203, 203, 203);\n  width: calc((100% / 3) - 0.5rem);\n  margin: 0 0.25rem 0.5rem 0.25rem;\n  box-shadow: #666;\n}\n\n.reward-list-item .reward-list-item-name {\n  font-size: 1rem;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: 0.5rem;\n}\n\n.reward-list-item .reward-list-bottom-group {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.reward-list-item .reward-list-item-money {\n  padding: 4px;\n  background: #fff;\n  color: #fff;\n  font-size: 12px;\n  line-height: 1;\n  border-radius: 4px;\n  margin-right: 4px;\n  white-space: nowrap;\n}\n\n.reward-list-item .reward-list-item-time {\n  font-size: 12px;\n  color: #fff;\n  white-space: nowrap;\n}","date":"2023-01-20T08:21:16.599Z","updated":"2023-01-20T08:21:16.599Z","path":"about/about.css","layout":"false","title":"","comments":1,"_id":"clf0opdiz0002hkty8yeffkis","content":"#gitcalendar {\n  margin: 0 auto;\n  border-radius: 24px;\n  background: #fff;\n  border: rgb(203, 203, 203);\n  box-shadow: #666;\n  position: relative;\n  padding: 1rem 2rem;\n  overflow: hidden;\n}\n\n#page:has(#about-page) {\n  border: 0;\n  box-shadow: none !important;\n  padding: 0 !important;\n  background: transparent !important;\n}\n\n#page:has(#about-page) .page-title {\n  display: none;\n}\n\n.page:has(#about-page) #footer-wrap {\n  opacity: 1;\n  overflow: visible;\n  height: auto !important;\n  min-height: 16px;\n  color: #666;\n}\n\n#web_bg ~ .page:has(#about-page) {\n  background: #fff;\n}\n\n#about-page .author-box {\n  position: relative;\n}\n#about-page .author-box .author-img {\n  margin: auto;\n  border-radius: 50%;\n  overflow: hidden;\n  width: 180px;\n  height: 180px;\n}\n#about-page .author-box .author-img img {\n  border-radius: 50%;\n  overflow: hidden;\n  width: 180px;\n  height: 180px;\n}\n\n#about-page .author-box .image-dot {\n  width: 45px;\n  height: 45px;\n  background: #6bdf8f;\n  position: absolute;\n  border-radius: 50%;\n  border: 6px solid #fff;\n  top: 50%;\n  left: 50%;\n  transform: translate(35px, 45px);\n}\n\n.author-content {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 1rem;\n}\n\n#about-page .myInfoAndSayHello {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: #fff;\n  background: linear-gradient(120deg, #5b27ff 0, #00d4ff 100%);\n  background-size: 200%;\n  animation: gradient 15s ease infinite;\n  width: 59%;\n}\n\n.author-content-item {\n  width: 49%;\n  border-radius: 24px;\n  background: #fff;\n  border:rgb(203, 203, 203);\n  box-shadow: #666;\n  position: relative;\n  padding: 1rem 2rem;\n  overflow: hidden;\n}\n\n#about-page .myInfoAndSayHello .title1 {\n  opacity: 0.8;\n  line-height: 1.3;\n}\n\n#about-page .myInfoAndSayHello .title2 {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n  margin: 0.5rem 0;\n}\n.inline-word {\n  word-break: keep-all;\n  white-space: nowrap;\n}\n\n#about-page .myInfoAndSayHello .title1 {\n  opacity: 0.8;\n  line-height: 1.3;\n}\n\n.author-content-item.aboutsiteTips {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-direction: column;\n  width: 39%;\n}\n\n.aboutsiteTips h2 {\n  margin-right: auto;\n  font-size: 36px;\n  font-family: Helvetica;\n  line-height: 1.06;\n  letter-spacing: -0.02em;\n  color: #fff;\n  margin-top: 0;\n}\n\n.aboutsiteTips .mask {\n  height: 36px;\n  position: relative;\n  overflow: hidden;\n  margin-top: 4px;\n}\n.aboutsiteTips .mask span {\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  top: 36px;\n  padding-bottom: #fff;\n  background-size: 100% 100%;\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-repeat: no-repeat;\n}\n.aboutsiteTips .mask span[data-show] {\n  transform: translateY(-100%);\n  transition: 0.5s transform ease-in-out;\n}\n.aboutsiteTips .mask span[data-up] {\n  transform: translateY(-200%);\n  transition: 0.5s transform ease-in-out;\n}\n.aboutsiteTips .mask span:nth-child(1) {\n  background-image: linear-gradient(45deg, #0ecffe 50%, #07a6f1);\n}\n.aboutsiteTips .mask span:nth-child(2) {\n  background-image: linear-gradient(45deg, #18e198 50%, #0ec15d);\n}\n.aboutsiteTips .mask span:nth-child(3) {\n  background-image: linear-gradient(45deg, #8a7cfb 50%, #633e9c);\n}\n.aboutsiteTips .mask span:nth-child(4) {\n  background-image: linear-gradient(45deg, #fa7671 50%, #f45f7f);\n}\n@media screen and (max-width: 768px) {\n  .author-content-item.map {\n    margin-bottom: 0;\n  }\n}\n#about-page .about-statistic {\n  min-height: 380px;\n  width: 39%;\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/23/632d634f8376d.jpg) no-repeat top;\n  background-size: cover;\n  color: #fff;\n  overflow: hidden;\n}\n#about-page .about-statistic::after {\n  box-shadow: 0 -159px 173px 71px #0c1c2c inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n.author-content-item .card-content {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 2;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem 2rem;\n}\n\n.author-content-item .card-content .author-content-item-title {\n  margin-bottom: 0.5rem;\n}\n.author-content-item .author-content-item-title {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1;\n}\n#statistic {\n  font-size: 16px;\n  border-radius: 15px;\n  width: 100%;\n  color: #fff;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n}\n#statistic div span:first-child {\n  opacity: 0.8;\n  font-size: 0.6rem;\n}\n#statistic div span:last-child {\n  font-weight: 700;\n  font-size: 34px;\n  line-height: 1;\n  white-space: nowrap;\n}\n#statistic div {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: 50%;\n  margin-bottom: 0.5rem;\n}\n\n.post-tips {\n  color: #666;\n  font-size: 14px;\n  position: absolute;\n  bottom: 1rem;\n  left: 2rem;\n}\n.post-tips a {\n  color: #666 !important;\n  border: none !important;\n}\n.author-content-item .card-content .banner-button-group {\n  position: absolute;\n  bottom: 1.5rem;\n  right: 2rem;\n}\n.author-content-item .card-content .banner-button-group .banner-button {\n  height: 40px;\n  width: 124px;\n  border-radius: 20px;\n  justify-content: center;\n  background: #fff;\n  color: #666;\n  display: flex;\n  align-items: center;\n  z-index: 1;\n  transition: 0.3s;\n  cursor: pointer;\n  border-bottom: 0 !important;\n}\n.author-content-item .card-content .banner-button-group .banner-button i {\n  margin-right: 8px;\n  font-size: 1rem;\n}\n#about-page .author-content-item .card-content .banner-button-group .banner-button i {\n  font-size: 1.5rem;\n}\n\n.author-content-item .card-content .banner-button-group .banner-button:hover {\n  background: #fff;\n  color: #fff;\n  border-radius: 20px !important;\n}\n.author-content-item.personalities {\n  position: relative;\n  width: 59%;\n}\n\n.author-content-item.personalities .image {\n  position: absolute;\n  right: 30px;\n  top: 10px;\n  width: 220px;\n  transition: transform 2s cubic-bezier(0.13, 0.45, 0.21, 1.02);\n}\n.author-content-item.personalities .image img {\n  display: block;\n  margin: 0 auto 20px;\n  max-width: 100%;\n  transition: filter 375ms ease-in 0.2s;\n}\n.author-content-item.personalities:hover .image {\n  transform: rotate(-10deg);\n}\n.author-content-item.myphoto {\n  height: 60%;\n  min-height: 240px;\n  position: relative;\n  overflow: hidden;\n  width: 39%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.author-content-item.myphoto img {\n  position: absolute;\n  min-width: 100%;\n  object-fit: cover;\n  transition: 0.6s;\n  animation: coverIn 2s ease-out forwards;\n  transition: transform 2s ease-out !important;\n}\n.author-content-item.myphoto:hover img {\n  transform: scale(1.1);\n}\n.author-content-item:hover .card-background-icon {\n  transform: rotate(20deg);\n}\n.author-content-item.personalities .title2 {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n}\n\n.author-content-item.map {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/24/632e6f48981d8.jpg) no-repeat center;\n  min-height: 160px;\n  max-height: 400px;\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n  height: 60%;\n  background-size: 100%;\n  transition: 1s ease-in-out;\n}\n[data-theme=\"dark\"] .author-content-item.map {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/26/6330ebf1f3e65.jpg) no-repeat center;\n  background-size: 100%;\n}\n\n.author-content-item.single {\n  width: 100%;\n}\n\n.author-content-item.map .map-title {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #fff;\n  padding: 0.5rem 2rem;\n  backdrop-filter: saturate(180%) blur(20px);\n  -webkit-backdrop-filter: blur(20px);\n  transition: 1s ease-in-out;\n  font-size: 20px;\n}\n.author-content-item.map .map-title b {\n  color: #fff;\n}\n.author-content-item.selfInfo {\n  display: flex;\n  min-height: 100px;\n  max-height: 400px;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  height: -webkit-fill-available;\n  height: 40%;\n}\n.author-content-item.selfInfo div {\n  display: flex;\n  flex-direction: column;\n  margin: 0.5rem 2rem 0.5rem 0;\n}\n.author-content-item.selfInfo .selfInfo-title {\n  opacity: 0.8;\n  font-size: 0.6rem;\n  line-height: 1;\n  margin-bottom: 8px;\n}\n.author-content-item.selfInfo .selfInfo-content {\n  font-weight: 700;\n  font-size: 34px;\n  line-height: 1;\n}\n.author-content-item-group.column.mapAndInfo {\n  width: 59%;\n}\n.author-content-item.map:hover {\n  background-size: 120%;\n  transition: 4s ease-in-out;\n  background-position-x: 0;\n  background-position-y: 36%;\n}\n.author-content-item.map:hover .map-title {\n  bottom: -100%;\n}\n.author-content-item-group.column {\n  display: flex;\n  flex-direction: column;\n  width: 49%;\n  justify-content: space-between;\n}\n\n.post-tips a:hover {\n  color: #fff !important;\n  background: none !important;\n}\n\n.author-content-item.single.reward .reward-list-updateDate {\n  color: #666;\n  font-size: 14px;\n}\n\n.author-content-item.single.reward .post-reward {\n  position: absolute;\n  margin-top: 0px;\n  width: auto;\n  text-align: none;\n  pointer-events: none;\n  right: 2rem;\n  top: 2rem;\n}\n.tip-button {\n  border: 0;\n  border-radius: 2.25rem;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: 600;\n  height: 2.6rem;\n  margin-bottom: -4rem;\n  outline: 0;\n  position: relative;\n  top: 0;\n  transform-origin: 0 100%;\n  transition: transform 50ms ease-in-out;\n  width: auto;\n  -webkit-tap-highlight-color: transparent;\n}\n.coin::before,\n.coin__back,\n.coin__back::after,\n.coin__front,\n.coin__front::after,\n.coin__middle {\n  border-radius: 50%;\n  box-sizing: border-box;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  width: 100%;\n  z-index: 3;\n}\n.coin-wrapper {\n  background: 0 0;\n  bottom: 0;\n  height: 18rem;\n  left: 0;\n  opacity: 1;\n  overflow: hidden;\n  pointer-events: none;\n  position: absolute;\n  transform: none;\n  transform-origin: 50% 100%;\n  transition: opacity 0.2s linear 0.1s, transform 0.3s ease-out;\n  width: 100%;\n}\n.coin__front::after {\n  background: rgba(0, 0, 0, 0.2);\n  content: \"\";\n  opacity: #fff;\n}\n.coin__back::after {\n  background: rgba(0, 0, 0, 0.2);\n  content: \"\";\n  opacity: #fff;\n}\n.coin__middle {\n  background: #737c99;\n  transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--middle-scale-multiplier));\n}\n.coin::before {\n  background: radial-gradient(circle at 25% 65%, transparent 50%, rgba(255, 255, 255, 0.9) 90%), linear-gradient(55deg, transparent\n        calc(var(--shine-bg-multiplier) + 0), #e9f4ff calc(var(--shine-bg-multiplier) + 0), transparent calc(var(\n              --shine-bg-multiplier\n            ) + 50%));\n  content: \"\";\n  opacity: #fff;\n  transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / -2)) scaleY(var(--middle-scale-multiplier))\n    rotate(calc(var(--coin-rotation-multiplier) * 1deg));\n  z-index: 10;\n}\n\n.coin {\n  --front-y-multiplier: 0;\n  --back-y-multiplier: 0;\n  --coin-y-multiplier: 0;\n  --coin-x-multiplier: 0;\n  --coin-scale-multiplier: 0;\n  --coin-rotation-multiplier: 0;\n  --shine-opacity-multiplier: 0.4;\n  --shine-bg-multiplier: 50%;\n  bottom: calc(var(--coin-y-multiplier) * 1rem - 3.5rem);\n  height: 3.5rem;\n  margin-bottom: 3.05rem;\n  position: absolute;\n  right: calc(var(--coin-x-multiplier) * 34% + 16%);\n  transform: translateX(50%) scale(calc(0.4 + var(--coin-scale-multiplier))) rotate(calc(var(\n            --coin-rotation-multiplier\n          ) * -1deg));\n  transition: opacity 0.1s linear 0.2s;\n  width: 3.5rem;\n  z-index: 3;\n}\n\n.coin__back {\n  background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%),\n    radial-gradient(circle at 50% 40%, #fcfaf9 23%, transparent 23%), radial-gradient(circle at 50% 100%, #fcfaf9 35%, transparent\n        35%);\n  background-color: #8590b3;\n  background-size: 100% 100%;\n  transform: translateY(calc(var(--back-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--back-scale-multiplier));\n}\n.coin__front {\n  background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%),\n    linear-gradient(210deg, #8590b3 32%, transparent 32%), linear-gradient(150deg, #8590b3 32%, transparent 32%),\n    linear-gradient(to right, #8590b3 22%, transparent 22%, transparent 78%, #8590b3 78%), linear-gradient(\n      to bottom,\n      #fcfaf9 44%,\n      transparent 44%,\n      transparent 65%,\n      #fcfaf9 65%,\n      #fcfaf9 71%,\n      #8590b3 71%\n    ), linear-gradient(to right, transparent 28%, #fcfaf9 28%, #fcfaf9 34%, #8590b3 34%, #8590b3 40%, #fcfaf9 40%, #fcfaf9\n        47%, #8590b3 47%, #8590b3 53%, #fcfaf9 53%, #fcfaf9 60%, #8590b3 60%, #8590b3 66%, #fcfaf9 66%, #fcfaf9 72%, transparent\n        72%);\n  background-color: #8590b3;\n  background-size: 100% 100%;\n  transform: translateY(calc(var(--front-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--front-scale-multiplier));\n}\n.tip-button__text {\n  color: #fff;\n  margin-right: 1.8rem;\n  opacity: 1;\n  position: relative;\n  transition: opacity 0.1s linear 0.5s;\n  z-index: 3;\n}\n.author-content .post-reward .reward-main {\n  bottom: 0;\n  top: 50px;\n  left: auto;\n  right: 0;\n}\n.author-content .post-reward .reward-main .reward-all:before {\n  top: -11px;\n  bottom: auto;\n}\n#about-page .post-reward .reward-item a:hover {\n  background: transparent !important;\n}\n#about-page .post-reward .reward-item a {\n  border-bottom: none !important;\n}\n#about-page .post-reward .reward-item a img {\n  margin-bottom: 0 !important;\n}\n#about-page .post-reward .reward-main .reward-all {\n  border-radius: 10px;\n  padding: 20px 10px !important;\n}\n.post-reward .reward-main .reward-all .reward-item {\n  padding: 0 8px !important;\n}\n.post-reward .reward-main .reward-all li.reward-item::before {\n  content: none !important;\n}\n.post-reward .reward-main .reward-all:after {\n  content: none !important;\n}\n.author-content-item.maxim {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: center;\n  width: 39%;\n}\n.author-content-item .author-content-item-tips {\n  opacity: 0.8;\n  font-size: 0.6rem;\n  margin-bottom: 0.5rem;\n}\n.author-content-item.maxim .maxim-title {\n  display: flex;\n  flex-direction: column;\n}\n.author-content-item.buff {\n  height: 200px;\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: center;\n  background: linear-gradient(120deg, #ff27e8 0, #ff8000 100%);\n  color: var(--anzhiyu-white);\n  background-size: 200%;\n  animation: gradient 15s ease infinite;\n  min-height: 200px;\n  height: fit-content;\n  width: 59%;\n}\n.author-content-item.buff .card-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.author-content-item.buff .buff-title {\n  display: flex;\n  flex-direction: column;\n}\n.card-background-icon {\n  font-size: 12rem;\n  opacity: 0.2;\n  position: absolute;\n  right: 0;\n  bottom: -40%;\n  transform: rotate(30deg);\n  transition: 2s ease-in-out;\n}\n.author-content-item.game-yuanshen {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/12/19/63a079ca63c8a.webp) no-repeat top;\n  background-size: cover;\n  min-height: 300px;\n  overflow: hidden;\n  color: var(--anzhiyu-white);\n  width: 59%;\n}\n\n.author-content-item .content-bottom {\n  margin-top: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.author-content-item .content-bottom .icon-group {\n  display: flex;\n  position: relative;\n}\n.author-content-item .content-bottom .icon-group i {\n  display: inline-block;\n  width: 143px;\n  height: 18px;\n  margin-right: 0.5rem;\n}\n.icon-pos-mid {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/25/632fb9cecfc8c.png);\n}\n.author-content-item.game-yuanshen::after {\n  box-shadow: 0 -69px 203px 11px #575d8b inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n.author-content-item.comic-content {\n  width: 39%;\n  background: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/common/violet.jpg) no-repeat top;\n  background-size: cover;\n  min-height: 300px;\n  overflow: hidden;\n  color: violet;\n}\n.author-content-item.comic-content::after {\n  box-shadow: 0 -48px 203px 11px #fbe9b8 inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n.author-content-item.like-technology {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/24/632f0dd8f33c6.webp) no-repeat;\n  background-size: cover;\n  min-height: 230px;\n  color: var(--anzhiyu-white);\n}\n\n.author-content-item.like-music {\n  background: url(https://p2.music.126.net/Mrg1i7DwcwjWBvQPIMt_Mg==/79164837213438.jpg) no-repeat top;\n  background-size: cover;\n  min-height: 400px;\n  color: var(--anzhiyu-white);\n  overflow: hidden;\n}\n\n.author-content-item .card-content .banner-button-group {\n  position: absolute;\n  bottom: 1.5rem;\n  right: 2rem;\n}\n\n.author-content-item.like-music::after {\n  box-shadow: 0 -69px 203px 11px #453e38 inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n@media screen and (max-width: 768px) {\n  #gitcalendar {\n    display: none;\n  }\n  [data-theme=\"dark\"] .author-content-item .card-content .banner-button-group .banner-button {\n    color: var(--anzhiyu-black) !important;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button:hover {\n    background: none !important;\n  }\n  .author-content-item.game-yuanshen .content-bottom {\n    padding-bottom: 10px;\n  }\n  .author-content-item.game-yuanshen .game-yuanshen-uid {\n    display: none;\n  }\n  .author-content {\n    margin-top: 0;\n  }\n  .author-content-item {\n    width: 100% !important;\n    margin-top: 1rem;\n    padding: 1rem;\n  }\n  .author-content-item.map {\n    margin-bottom: 0;\n  }\n  .author-content-item-group.column {\n    width: 100% !important;\n  }\n  .author-content-item.selfInfo {\n    height: 95%;\n  }\n  .author-content-item.personalities {\n    height: 170px;\n  }\n  .post-tips {\n    left: auto;\n  }\n  .author-content-item.personalities .image {\n    width: 90px;\n  }\n  .site-card-group > a {\n    width: 100% !important;\n  }\n  .post-reward {\n    display: none;\n  }\n  .reward-list-item {\n    width: 100% !important;\n  }\n  .layout > div:first-child:not(.recent-posts) {\n    /* border-radius: 0; */\n    padding: 0 1rem !important;\n    box-shadow: none !important;\n    background: #fff;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button-text {\n    display: none;\n  }\n  .author-content-item .card-content .banner-button-group {\n    right: 1rem;\n    bottom: 1rem;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button {\n    background: 0 0;\n    padding: 0;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button i {\n    margin-right: 0;\n    font-size: 1.5rem;\n    background: white;\n    border-radius: 50%;\n    padding: 6px;\n    margin-left: 80px;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button:hover i {\n    background: #fff !important;\n    color: var(--anzhiyu-theme);\n  }\n  #selfInfo-content-year {\n    width: 90px;\n  }\n}\n\n@media screen and (min-width: 768px) and (max-width: 896px) {\n  .author-content-item.like-music .content-bottom .tips {\n    display: none;\n  }\n}\n\n/* 赞赏的css */\n\n.reward-list-all {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n}\n\n.reward-list-item {\n  padding: 1rem;\n  border-radius: 12px;\n  border:rgb(203, 203, 203);\n  width: calc((100% / 3) - 0.5rem);\n  margin: 0 0.25rem 0.5rem 0.25rem;\n  box-shadow: #666;\n}\n\n.reward-list-item .reward-list-item-name {\n  font-size: 1rem;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: 0.5rem;\n}\n\n.reward-list-item .reward-list-bottom-group {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.reward-list-item .reward-list-item-money {\n  padding: 4px;\n  background: #fff;\n  color: #fff;\n  font-size: 12px;\n  line-height: 1;\n  border-radius: 4px;\n  margin-right: 4px;\n  white-space: nowrap;\n}\n\n.reward-list-item .reward-list-item-time {\n  font-size: 12px;\n  color: #fff;\n  white-space: nowrap;\n}","site":{"data":{}},"cover":"/img/wenzhang.webp","excerpt":"","more":"#gitcalendar {\n  margin: 0 auto;\n  border-radius: 24px;\n  background: #fff;\n  border: rgb(203, 203, 203);\n  box-shadow: #666;\n  position: relative;\n  padding: 1rem 2rem;\n  overflow: hidden;\n}\n\n#page:has(#about-page) {\n  border: 0;\n  box-shadow: none !important;\n  padding: 0 !important;\n  background: transparent !important;\n}\n\n#page:has(#about-page) .page-title {\n  display: none;\n}\n\n.page:has(#about-page) #footer-wrap {\n  opacity: 1;\n  overflow: visible;\n  height: auto !important;\n  min-height: 16px;\n  color: #666;\n}\n\n#web_bg ~ .page:has(#about-page) {\n  background: #fff;\n}\n\n#about-page .author-box {\n  position: relative;\n}\n#about-page .author-box .author-img {\n  margin: auto;\n  border-radius: 50%;\n  overflow: hidden;\n  width: 180px;\n  height: 180px;\n}\n#about-page .author-box .author-img img {\n  border-radius: 50%;\n  overflow: hidden;\n  width: 180px;\n  height: 180px;\n}\n\n#about-page .author-box .image-dot {\n  width: 45px;\n  height: 45px;\n  background: #6bdf8f;\n  position: absolute;\n  border-radius: 50%;\n  border: 6px solid #fff;\n  top: 50%;\n  left: 50%;\n  transform: translate(35px, 45px);\n}\n\n.author-content {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 1rem;\n}\n\n#about-page .myInfoAndSayHello {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  color: #fff;\n  background: linear-gradient(120deg, #5b27ff 0, #00d4ff 100%);\n  background-size: 200%;\n  animation: gradient 15s ease infinite;\n  width: 59%;\n}\n\n.author-content-item {\n  width: 49%;\n  border-radius: 24px;\n  background: #fff;\n  border:rgb(203, 203, 203);\n  box-shadow: #666;\n  position: relative;\n  padding: 1rem 2rem;\n  overflow: hidden;\n}\n\n#about-page .myInfoAndSayHello .title1 {\n  opacity: 0.8;\n  line-height: 1.3;\n}\n\n#about-page .myInfoAndSayHello .title2 {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n  margin: 0.5rem 0;\n}\n.inline-word {\n  word-break: keep-all;\n  white-space: nowrap;\n}\n\n#about-page .myInfoAndSayHello .title1 {\n  opacity: 0.8;\n  line-height: 1.3;\n}\n\n.author-content-item.aboutsiteTips {\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  flex-direction: column;\n  width: 39%;\n}\n\n.aboutsiteTips h2 {\n  margin-right: auto;\n  font-size: 36px;\n  font-family: Helvetica;\n  line-height: 1.06;\n  letter-spacing: -0.02em;\n  color: #fff;\n  margin-top: 0;\n}\n\n.aboutsiteTips .mask {\n  height: 36px;\n  position: relative;\n  overflow: hidden;\n  margin-top: 4px;\n}\n.aboutsiteTips .mask span {\n  display: block;\n  box-sizing: border-box;\n  position: absolute;\n  top: 36px;\n  padding-bottom: #fff;\n  background-size: 100% 100%;\n  -webkit-background-clip: text;\n  background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-repeat: no-repeat;\n}\n.aboutsiteTips .mask span[data-show] {\n  transform: translateY(-100%);\n  transition: 0.5s transform ease-in-out;\n}\n.aboutsiteTips .mask span[data-up] {\n  transform: translateY(-200%);\n  transition: 0.5s transform ease-in-out;\n}\n.aboutsiteTips .mask span:nth-child(1) {\n  background-image: linear-gradient(45deg, #0ecffe 50%, #07a6f1);\n}\n.aboutsiteTips .mask span:nth-child(2) {\n  background-image: linear-gradient(45deg, #18e198 50%, #0ec15d);\n}\n.aboutsiteTips .mask span:nth-child(3) {\n  background-image: linear-gradient(45deg, #8a7cfb 50%, #633e9c);\n}\n.aboutsiteTips .mask span:nth-child(4) {\n  background-image: linear-gradient(45deg, #fa7671 50%, #f45f7f);\n}\n@media screen and (max-width: 768px) {\n  .author-content-item.map {\n    margin-bottom: 0;\n  }\n}\n#about-page .about-statistic {\n  min-height: 380px;\n  width: 39%;\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/23/632d634f8376d.jpg) no-repeat top;\n  background-size: cover;\n  color: #fff;\n  overflow: hidden;\n}\n#about-page .about-statistic::after {\n  box-shadow: 0 -159px 173px 71px #0c1c2c inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n.author-content-item .card-content {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  z-index: 2;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem 2rem;\n}\n\n.author-content-item .card-content .author-content-item-title {\n  margin-bottom: 0.5rem;\n}\n.author-content-item .author-content-item-title {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1;\n}\n#statistic {\n  font-size: 16px;\n  border-radius: 15px;\n  width: 100%;\n  color: #fff;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin-top: 1rem;\n  margin-bottom: 2rem;\n}\n#statistic div span:first-child {\n  opacity: 0.8;\n  font-size: 0.6rem;\n}\n#statistic div span:last-child {\n  font-weight: 700;\n  font-size: 34px;\n  line-height: 1;\n  white-space: nowrap;\n}\n#statistic div {\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: 50%;\n  margin-bottom: 0.5rem;\n}\n\n.post-tips {\n  color: #666;\n  font-size: 14px;\n  position: absolute;\n  bottom: 1rem;\n  left: 2rem;\n}\n.post-tips a {\n  color: #666 !important;\n  border: none !important;\n}\n.author-content-item .card-content .banner-button-group {\n  position: absolute;\n  bottom: 1.5rem;\n  right: 2rem;\n}\n.author-content-item .card-content .banner-button-group .banner-button {\n  height: 40px;\n  width: 124px;\n  border-radius: 20px;\n  justify-content: center;\n  background: #fff;\n  color: #666;\n  display: flex;\n  align-items: center;\n  z-index: 1;\n  transition: 0.3s;\n  cursor: pointer;\n  border-bottom: 0 !important;\n}\n.author-content-item .card-content .banner-button-group .banner-button i {\n  margin-right: 8px;\n  font-size: 1rem;\n}\n#about-page .author-content-item .card-content .banner-button-group .banner-button i {\n  font-size: 1.5rem;\n}\n\n.author-content-item .card-content .banner-button-group .banner-button:hover {\n  background: #fff;\n  color: #fff;\n  border-radius: 20px !important;\n}\n.author-content-item.personalities {\n  position: relative;\n  width: 59%;\n}\n\n.author-content-item.personalities .image {\n  position: absolute;\n  right: 30px;\n  top: 10px;\n  width: 220px;\n  transition: transform 2s cubic-bezier(0.13, 0.45, 0.21, 1.02);\n}\n.author-content-item.personalities .image img {\n  display: block;\n  margin: 0 auto 20px;\n  max-width: 100%;\n  transition: filter 375ms ease-in 0.2s;\n}\n.author-content-item.personalities:hover .image {\n  transform: rotate(-10deg);\n}\n.author-content-item.myphoto {\n  height: 60%;\n  min-height: 240px;\n  position: relative;\n  overflow: hidden;\n  width: 39%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n.author-content-item.myphoto img {\n  position: absolute;\n  min-width: 100%;\n  object-fit: cover;\n  transition: 0.6s;\n  animation: coverIn 2s ease-out forwards;\n  transition: transform 2s ease-out !important;\n}\n.author-content-item.myphoto:hover img {\n  transform: scale(1.1);\n}\n.author-content-item:hover .card-background-icon {\n  transform: rotate(20deg);\n}\n.author-content-item.personalities .title2 {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n}\n\n.author-content-item.map {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/24/632e6f48981d8.jpg) no-repeat center;\n  min-height: 160px;\n  max-height: 400px;\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 0.5rem;\n  height: 60%;\n  background-size: 100%;\n  transition: 1s ease-in-out;\n}\n[data-theme=\"dark\"] .author-content-item.map {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/26/6330ebf1f3e65.jpg) no-repeat center;\n  background-size: 100%;\n}\n\n.author-content-item.single {\n  width: 100%;\n}\n\n.author-content-item.map .map-title {\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  background: #fff;\n  padding: 0.5rem 2rem;\n  backdrop-filter: saturate(180%) blur(20px);\n  -webkit-backdrop-filter: blur(20px);\n  transition: 1s ease-in-out;\n  font-size: 20px;\n}\n.author-content-item.map .map-title b {\n  color: #fff;\n}\n.author-content-item.selfInfo {\n  display: flex;\n  min-height: 100px;\n  max-height: 400px;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  height: -webkit-fill-available;\n  height: 40%;\n}\n.author-content-item.selfInfo div {\n  display: flex;\n  flex-direction: column;\n  margin: 0.5rem 2rem 0.5rem 0;\n}\n.author-content-item.selfInfo .selfInfo-title {\n  opacity: 0.8;\n  font-size: 0.6rem;\n  line-height: 1;\n  margin-bottom: 8px;\n}\n.author-content-item.selfInfo .selfInfo-content {\n  font-weight: 700;\n  font-size: 34px;\n  line-height: 1;\n}\n.author-content-item-group.column.mapAndInfo {\n  width: 59%;\n}\n.author-content-item.map:hover {\n  background-size: 120%;\n  transition: 4s ease-in-out;\n  background-position-x: 0;\n  background-position-y: 36%;\n}\n.author-content-item.map:hover .map-title {\n  bottom: -100%;\n}\n.author-content-item-group.column {\n  display: flex;\n  flex-direction: column;\n  width: 49%;\n  justify-content: space-between;\n}\n\n.post-tips a:hover {\n  color: #fff !important;\n  background: none !important;\n}\n\n.author-content-item.single.reward .reward-list-updateDate {\n  color: #666;\n  font-size: 14px;\n}\n\n.author-content-item.single.reward .post-reward {\n  position: absolute;\n  margin-top: 0px;\n  width: auto;\n  text-align: none;\n  pointer-events: none;\n  right: 2rem;\n  top: 2rem;\n}\n.tip-button {\n  border: 0;\n  border-radius: 2.25rem;\n  cursor: pointer;\n  font-size: 20px;\n  font-weight: 600;\n  height: 2.6rem;\n  margin-bottom: -4rem;\n  outline: 0;\n  position: relative;\n  top: 0;\n  transform-origin: 0 100%;\n  transition: transform 50ms ease-in-out;\n  width: auto;\n  -webkit-tap-highlight-color: transparent;\n}\n.coin::before,\n.coin__back,\n.coin__back::after,\n.coin__front,\n.coin__front::after,\n.coin__middle {\n  border-radius: 50%;\n  box-sizing: border-box;\n  height: 100%;\n  left: 0;\n  position: absolute;\n  width: 100%;\n  z-index: 3;\n}\n.coin-wrapper {\n  background: 0 0;\n  bottom: 0;\n  height: 18rem;\n  left: 0;\n  opacity: 1;\n  overflow: hidden;\n  pointer-events: none;\n  position: absolute;\n  transform: none;\n  transform-origin: 50% 100%;\n  transition: opacity 0.2s linear 0.1s, transform 0.3s ease-out;\n  width: 100%;\n}\n.coin__front::after {\n  background: rgba(0, 0, 0, 0.2);\n  content: \"\";\n  opacity: #fff;\n}\n.coin__back::after {\n  background: rgba(0, 0, 0, 0.2);\n  content: \"\";\n  opacity: #fff;\n}\n.coin__middle {\n  background: #737c99;\n  transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--middle-scale-multiplier));\n}\n.coin::before {\n  background: radial-gradient(circle at 25% 65%, transparent 50%, rgba(255, 255, 255, 0.9) 90%), linear-gradient(55deg, transparent\n        calc(var(--shine-bg-multiplier) + 0), #e9f4ff calc(var(--shine-bg-multiplier) + 0), transparent calc(var(\n              --shine-bg-multiplier\n            ) + 50%));\n  content: \"\";\n  opacity: #fff;\n  transform: translateY(calc(var(--middle-y-multiplier) * 0.3181818182rem / -2)) scaleY(var(--middle-scale-multiplier))\n    rotate(calc(var(--coin-rotation-multiplier) * 1deg));\n  z-index: 10;\n}\n\n.coin {\n  --front-y-multiplier: 0;\n  --back-y-multiplier: 0;\n  --coin-y-multiplier: 0;\n  --coin-x-multiplier: 0;\n  --coin-scale-multiplier: 0;\n  --coin-rotation-multiplier: 0;\n  --shine-opacity-multiplier: 0.4;\n  --shine-bg-multiplier: 50%;\n  bottom: calc(var(--coin-y-multiplier) * 1rem - 3.5rem);\n  height: 3.5rem;\n  margin-bottom: 3.05rem;\n  position: absolute;\n  right: calc(var(--coin-x-multiplier) * 34% + 16%);\n  transform: translateX(50%) scale(calc(0.4 + var(--coin-scale-multiplier))) rotate(calc(var(\n            --coin-rotation-multiplier\n          ) * -1deg));\n  transition: opacity 0.1s linear 0.2s;\n  width: 3.5rem;\n  z-index: 3;\n}\n\n.coin__back {\n  background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%),\n    radial-gradient(circle at 50% 40%, #fcfaf9 23%, transparent 23%), radial-gradient(circle at 50% 100%, #fcfaf9 35%, transparent\n        35%);\n  background-color: #8590b3;\n  background-size: 100% 100%;\n  transform: translateY(calc(var(--back-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--back-scale-multiplier));\n}\n.coin__front {\n  background: radial-gradient(circle at 50% 50%, transparent 50%, rgba(115, 124, 153, 0.4) 54%, #c2cadf 54%),\n    linear-gradient(210deg, #8590b3 32%, transparent 32%), linear-gradient(150deg, #8590b3 32%, transparent 32%),\n    linear-gradient(to right, #8590b3 22%, transparent 22%, transparent 78%, #8590b3 78%), linear-gradient(\n      to bottom,\n      #fcfaf9 44%,\n      transparent 44%,\n      transparent 65%,\n      #fcfaf9 65%,\n      #fcfaf9 71%,\n      #8590b3 71%\n    ), linear-gradient(to right, transparent 28%, #fcfaf9 28%, #fcfaf9 34%, #8590b3 34%, #8590b3 40%, #fcfaf9 40%, #fcfaf9\n        47%, #8590b3 47%, #8590b3 53%, #fcfaf9 53%, #fcfaf9 60%, #8590b3 60%, #8590b3 66%, #fcfaf9 66%, #fcfaf9 72%, transparent\n        72%);\n  background-color: #8590b3;\n  background-size: 100% 100%;\n  transform: translateY(calc(var(--front-y-multiplier) * 0.3181818182rem / 2)) scaleY(var(--front-scale-multiplier));\n}\n.tip-button__text {\n  color: #fff;\n  margin-right: 1.8rem;\n  opacity: 1;\n  position: relative;\n  transition: opacity 0.1s linear 0.5s;\n  z-index: 3;\n}\n.author-content .post-reward .reward-main {\n  bottom: 0;\n  top: 50px;\n  left: auto;\n  right: 0;\n}\n.author-content .post-reward .reward-main .reward-all:before {\n  top: -11px;\n  bottom: auto;\n}\n#about-page .post-reward .reward-item a:hover {\n  background: transparent !important;\n}\n#about-page .post-reward .reward-item a {\n  border-bottom: none !important;\n}\n#about-page .post-reward .reward-item a img {\n  margin-bottom: 0 !important;\n}\n#about-page .post-reward .reward-main .reward-all {\n  border-radius: 10px;\n  padding: 20px 10px !important;\n}\n.post-reward .reward-main .reward-all .reward-item {\n  padding: 0 8px !important;\n}\n.post-reward .reward-main .reward-all li.reward-item::before {\n  content: none !important;\n}\n.post-reward .reward-main .reward-all:after {\n  content: none !important;\n}\n.author-content-item.maxim {\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: center;\n  width: 39%;\n}\n.author-content-item .author-content-item-tips {\n  opacity: 0.8;\n  font-size: 0.6rem;\n  margin-bottom: 0.5rem;\n}\n.author-content-item.maxim .maxim-title {\n  display: flex;\n  flex-direction: column;\n}\n.author-content-item.buff {\n  height: 200px;\n  font-size: 36px;\n  font-weight: 700;\n  line-height: 1.1;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  justify-content: center;\n  background: linear-gradient(120deg, #ff27e8 0, #ff8000 100%);\n  color: var(--anzhiyu-white);\n  background-size: 200%;\n  animation: gradient 15s ease infinite;\n  min-height: 200px;\n  height: fit-content;\n  width: 59%;\n}\n.author-content-item.buff .card-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n}\n.author-content-item.buff .buff-title {\n  display: flex;\n  flex-direction: column;\n}\n.card-background-icon {\n  font-size: 12rem;\n  opacity: 0.2;\n  position: absolute;\n  right: 0;\n  bottom: -40%;\n  transform: rotate(30deg);\n  transition: 2s ease-in-out;\n}\n.author-content-item.game-yuanshen {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/12/19/63a079ca63c8a.webp) no-repeat top;\n  background-size: cover;\n  min-height: 300px;\n  overflow: hidden;\n  color: var(--anzhiyu-white);\n  width: 59%;\n}\n\n.author-content-item .content-bottom {\n  margin-top: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n.author-content-item .content-bottom .icon-group {\n  display: flex;\n  position: relative;\n}\n.author-content-item .content-bottom .icon-group i {\n  display: inline-block;\n  width: 143px;\n  height: 18px;\n  margin-right: 0.5rem;\n}\n.icon-pos-mid {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/25/632fb9cecfc8c.png);\n}\n.author-content-item.game-yuanshen::after {\n  box-shadow: 0 -69px 203px 11px #575d8b inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n.author-content-item.comic-content {\n  width: 39%;\n  background: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/img/post/common/violet.jpg) no-repeat top;\n  background-size: cover;\n  min-height: 300px;\n  overflow: hidden;\n  color: violet;\n}\n.author-content-item.comic-content::after {\n  box-shadow: 0 -48px 203px 11px #fbe9b8 inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n.author-content-item.like-technology {\n  background: url(https://img02.anzhiy.cn/adminuploads/1/2022/09/24/632f0dd8f33c6.webp) no-repeat;\n  background-size: cover;\n  min-height: 230px;\n  color: var(--anzhiyu-white);\n}\n\n.author-content-item.like-music {\n  background: url(https://p2.music.126.net/Mrg1i7DwcwjWBvQPIMt_Mg==/79164837213438.jpg) no-repeat top;\n  background-size: cover;\n  min-height: 400px;\n  color: var(--anzhiyu-white);\n  overflow: hidden;\n}\n\n.author-content-item .card-content .banner-button-group {\n  position: absolute;\n  bottom: 1.5rem;\n  right: 2rem;\n}\n\n.author-content-item.like-music::after {\n  box-shadow: 0 -69px 203px 11px #453e38 inset;\n  position: absolute;\n  content: \"\";\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n}\n\n@media screen and (max-width: 768px) {\n  #gitcalendar {\n    display: none;\n  }\n  [data-theme=\"dark\"] .author-content-item .card-content .banner-button-group .banner-button {\n    color: var(--anzhiyu-black) !important;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button:hover {\n    background: none !important;\n  }\n  .author-content-item.game-yuanshen .content-bottom {\n    padding-bottom: 10px;\n  }\n  .author-content-item.game-yuanshen .game-yuanshen-uid {\n    display: none;\n  }\n  .author-content {\n    margin-top: 0;\n  }\n  .author-content-item {\n    width: 100% !important;\n    margin-top: 1rem;\n    padding: 1rem;\n  }\n  .author-content-item.map {\n    margin-bottom: 0;\n  }\n  .author-content-item-group.column {\n    width: 100% !important;\n  }\n  .author-content-item.selfInfo {\n    height: 95%;\n  }\n  .author-content-item.personalities {\n    height: 170px;\n  }\n  .post-tips {\n    left: auto;\n  }\n  .author-content-item.personalities .image {\n    width: 90px;\n  }\n  .site-card-group > a {\n    width: 100% !important;\n  }\n  .post-reward {\n    display: none;\n  }\n  .reward-list-item {\n    width: 100% !important;\n  }\n  .layout > div:first-child:not(.recent-posts) {\n    /* border-radius: 0; */\n    padding: 0 1rem !important;\n    box-shadow: none !important;\n    background: #fff;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button-text {\n    display: none;\n  }\n  .author-content-item .card-content .banner-button-group {\n    right: 1rem;\n    bottom: 1rem;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button {\n    background: 0 0;\n    padding: 0;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button i {\n    margin-right: 0;\n    font-size: 1.5rem;\n    background: white;\n    border-radius: 50%;\n    padding: 6px;\n    margin-left: 80px;\n  }\n  .author-content-item .card-content .banner-button-group .banner-button:hover i {\n    background: #fff !important;\n    color: var(--anzhiyu-theme);\n  }\n  #selfInfo-content-year {\n    width: 90px;\n  }\n}\n\n@media screen and (min-width: 768px) and (max-width: 896px) {\n  .author-content-item.like-music .content-bottom .tips {\n    display: none;\n  }\n}\n\n/* 赞赏的css */\n\n.reward-list-all {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  margin-top: 1rem;\n  margin-bottom: 0.5rem;\n  margin-left: -0.25rem;\n  margin-right: -0.25rem;\n}\n\n.reward-list-item {\n  padding: 1rem;\n  border-radius: 12px;\n  border:rgb(203, 203, 203);\n  width: calc((100% / 3) - 0.5rem);\n  margin: 0 0.25rem 0.5rem 0.25rem;\n  box-shadow: #666;\n}\n\n.reward-list-item .reward-list-item-name {\n  font-size: 1rem;\n  font-weight: 700;\n  line-height: 1;\n  margin-bottom: 0.5rem;\n}\n\n.reward-list-item .reward-list-bottom-group {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.reward-list-item .reward-list-item-money {\n  padding: 4px;\n  background: #fff;\n  color: #fff;\n  font-size: 12px;\n  line-height: 1;\n  border-radius: 4px;\n  margin-right: 4px;\n  white-space: nowrap;\n}\n\n.reward-list-item .reward-list-item-time {\n  font-size: 12px;\n  color: #fff;\n  white-space: nowrap;\n}"},{"date":"2023-01-20T08:39:49.000Z","comments":1,"aside":false,"top_img":false,"_content":"> 免费空调，速吹\n\n<style>\n.copyright-box a {\n  border-bottom: none !important;\n  padding: 0 !important;\n}\n</style>\n\n<div id=\"air-conditioner-vue\"></div>\n<script defer data-pjax src='https://alist.anzhiy.cn/d/anzhiyu/air-conditioner-dev/index.2d8c3a3f.js'></script>","source":"air-conditioner/index.md","raw":"---\ndate: 2023-01-20 16:39:49\ncomments: true\naside: false\ntop_img: false\n---\n> 免费空调，速吹\n\n<style>\n.copyright-box a {\n  border-bottom: none !important;\n  padding: 0 !important;\n}\n</style>\n\n<div id=\"air-conditioner-vue\"></div>\n<script defer data-pjax src='https://alist.anzhiy.cn/d/anzhiyu/air-conditioner-dev/index.2d8c3a3f.js'></script>","updated":"2023-01-20T08:47:23.218Z","path":"air-conditioner/index.html","title":"","layout":"page","_id":"clf0opdj20005hktyahal1ikf","content":"<blockquote>\n<p>免费空调，速吹</p>\n</blockquote>\n<style>\n.copyright-box a {\n  border-bottom: none !important;\n  padding: 0 !important;\n}\n</style>\n\n<div id=\"air-conditioner-vue\"></div>\n<script defer data-pjax src='https://alist.anzhiy.cn/d/anzhiyu/air-conditioner-dev/index.2d8c3a3f.js'></script>","site":{"data":{}},"cover":"/img/wenzhang.webp","excerpt":"","more":"<blockquote>\n<p>免费空调，速吹</p>\n</blockquote>\n<style>\n.copyright-box a {\n  border-bottom: none !important;\n  padding: 0 !important;\n}\n</style>\n\n<div id=\"air-conditioner-vue\"></div>\n<script defer data-pjax src='https://alist.anzhiy.cn/d/anzhiyu/air-conditioner-dev/index.2d8c3a3f.js'></script>"},{"_content":"#about-page\n  .author-box\n    .author-img\n      img.no-lightbox(src='https://images.pexels.com/users/avatars/421924226/-608.png?auto=compress&fit=crop&h=130&w=130&dpr=1')\n    .image-dot\n  p.p.center.logo.large 关于我\n  p.p.center.small 最近很好，最远也是\n  .author-content\n    .author-content-item.myInfoAndSayHello\n      .title1 你好\n      .title2\n        | 我是\n        span.inline-word overplain\n      .title1\n        | 是一名 学生\n        span.inline-word 博主\n    .aboutsiteTips.author-content-item\n      .author-content-item-tips 追求\n      h2\n        | 想要\n        br\n        | 因为好玩而去\n        span.inline-word 感受\n        .mask\n          span.first-tips 学习\n          |\n          span 生活\n          |\n          span(data-up) 程序\n          |\n          span(data-show) 体验\n\n  .author-content\n    .author-content-item.maxim\n      .author-content-item-tips 自我认知\n      span.maxim-title\n        span(style='opacity:.6;margin-bottom:8px') 夜晚摸鱼\n        |\n        span 白日做梦\n    .author-content-item.buff\n      .card-content\n        .author-content-item-tips 特长\n        span.buff-title\n          span(style='opacity:.6;margin-bottom:8px')\n            | 普普通通的\n            span.inline-word 网瘾少女\n          |\n          span\n            | 丧丧指数\n            span.inline-word MAX\n      .card-background-icon\n        i.fas.fa-dice-d20\n\n.author-content\n    .create-site-post.author-content-item.single\n      .author-content-item-tips 心路历程\n      | 欢迎来到我的博客！这里是我记笔记的地方，目前就读于厦门\n      strong 集美大学\n      | 的\n      strong 人工智能\n      | 专业,会在这里记一些笔记,也会放一些自己平时做的ps美工作品,很喜欢做有关设计的东西，这也是我想去学习前端想要自己写网站的原因,更大感觉是在自娱自乐,只有一两个朋友见过我的这个网页,相对于是我的一个小树洞叭\n      | 也喜欢fps游戏,致力于游戏里面突突突,感觉是放松压力的一个地方,但是有时候会被队友压力,算半个网瘾少女。我总是会在生活中遇到游戏里面一些奇奇怪怪的bug,写程序的时候也经常会疑问这个咋不跑呀,那个怎么又能跑啦,这种问题,在学校里面掌握了焊电路,组小车,搅水泥,磨螺丝,也很喜欢体验别人的故事所以是一个剧本杀玩家,用短暂的半天来逃离我本来枯燥无味的生活，算是短暂穿越吧。\n      .checkbox.blue.checked\n        input(type='checkbox', checked)\n        p\n          | 致力于成为一个前端工程师\n        p\n          | 又菜又爱玩🎮\n          kbd ctrl\n          |  +\n          kbd C\n          | 、\n          kbd ctrl\n          |  +\n          kbd V\n          | 高级CV工程师🏆\n        p\n          | 擅长PS、Pr等软件\n      .checkbox.times.red.checked\n        input(type='checkbox', checked)\n        p 精通Html、CSS、JavaScript、Vue、React、PHP、Java、Python、C、C++、C#、Go、TypeScript等单词的拼写🎲\n      .checkbox.times.red.checked\n        input(type='checkbox', checked)\n        p 熟悉Windows、Linux、Mac、Android、IOS等系统的开关机👻\n      span.p.h3 todoList\n      .checkbox.checked\n        input(type='checkbox', checked)\n        p 微信小程序\n      .checkbox.checked\n        input(type='checkbox', checked)\n        p html.css\n      .checkbox.checked\n        input(type='checkbox', checked)\n        p js\n      .checkbox\n        input(type='checkbox')\n        p vue3\n      .checkbox\n","source":"about/about.pug","raw":"#about-page\n  .author-box\n    .author-img\n      img.no-lightbox(src='https://images.pexels.com/users/avatars/421924226/-608.png?auto=compress&fit=crop&h=130&w=130&dpr=1')\n    .image-dot\n  p.p.center.logo.large 关于我\n  p.p.center.small 最近很好，最远也是\n  .author-content\n    .author-content-item.myInfoAndSayHello\n      .title1 你好\n      .title2\n        | 我是\n        span.inline-word overplain\n      .title1\n        | 是一名 学生\n        span.inline-word 博主\n    .aboutsiteTips.author-content-item\n      .author-content-item-tips 追求\n      h2\n        | 想要\n        br\n        | 因为好玩而去\n        span.inline-word 感受\n        .mask\n          span.first-tips 学习\n          |\n          span 生活\n          |\n          span(data-up) 程序\n          |\n          span(data-show) 体验\n\n  .author-content\n    .author-content-item.maxim\n      .author-content-item-tips 自我认知\n      span.maxim-title\n        span(style='opacity:.6;margin-bottom:8px') 夜晚摸鱼\n        |\n        span 白日做梦\n    .author-content-item.buff\n      .card-content\n        .author-content-item-tips 特长\n        span.buff-title\n          span(style='opacity:.6;margin-bottom:8px')\n            | 普普通通的\n            span.inline-word 网瘾少女\n          |\n          span\n            | 丧丧指数\n            span.inline-word MAX\n      .card-background-icon\n        i.fas.fa-dice-d20\n\n.author-content\n    .create-site-post.author-content-item.single\n      .author-content-item-tips 心路历程\n      | 欢迎来到我的博客！这里是我记笔记的地方，目前就读于厦门\n      strong 集美大学\n      | 的\n      strong 人工智能\n      | 专业,会在这里记一些笔记,也会放一些自己平时做的ps美工作品,很喜欢做有关设计的东西，这也是我想去学习前端想要自己写网站的原因,更大感觉是在自娱自乐,只有一两个朋友见过我的这个网页,相对于是我的一个小树洞叭\n      | 也喜欢fps游戏,致力于游戏里面突突突,感觉是放松压力的一个地方,但是有时候会被队友压力,算半个网瘾少女。我总是会在生活中遇到游戏里面一些奇奇怪怪的bug,写程序的时候也经常会疑问这个咋不跑呀,那个怎么又能跑啦,这种问题,在学校里面掌握了焊电路,组小车,搅水泥,磨螺丝,也很喜欢体验别人的故事所以是一个剧本杀玩家,用短暂的半天来逃离我本来枯燥无味的生活，算是短暂穿越吧。\n      .checkbox.blue.checked\n        input(type='checkbox', checked)\n        p\n          | 致力于成为一个前端工程师\n        p\n          | 又菜又爱玩🎮\n          kbd ctrl\n          |  +\n          kbd C\n          | 、\n          kbd ctrl\n          |  +\n          kbd V\n          | 高级CV工程师🏆\n        p\n          | 擅长PS、Pr等软件\n      .checkbox.times.red.checked\n        input(type='checkbox', checked)\n        p 精通Html、CSS、JavaScript、Vue、React、PHP、Java、Python、C、C++、C#、Go、TypeScript等单词的拼写🎲\n      .checkbox.times.red.checked\n        input(type='checkbox', checked)\n        p 熟悉Windows、Linux、Mac、Android、IOS等系统的开关机👻\n      span.p.h3 todoList\n      .checkbox.checked\n        input(type='checkbox', checked)\n        p 微信小程序\n      .checkbox.checked\n        input(type='checkbox', checked)\n        p html.css\n      .checkbox.checked\n        input(type='checkbox', checked)\n        p js\n      .checkbox\n        input(type='checkbox')\n        p vue3\n      .checkbox\n","date":"2023-01-20T08:25:24.862Z","updated":"2023-01-20T08:25:24.862Z","path":"about/about.html","title":"","comments":1,"layout":"page","_id":"clf0opdj30007hktyby9z1o03","content":"<div id=\"about-page\"><div class=\"author-box\"><div class=\"author-img\"><img class=\"no-lightbox\" src=\"https://images.pexels.com/users/avatars/421924226/-608.png?auto=compress&amp;fit=crop&amp;h=130&amp;w=130&amp;dpr=1\"/></div><div class=\"image-dot\"></div></div><p class=\"p center logo large\">关于我</p><p class=\"p center small\">最近很好，最远也是</p><div class=\"author-content\"><div class=\"author-content-item myInfoAndSayHello\"><div class=\"title1\">你好</div><div class=\"title2\">我是<span class=\"inline-word\">overplain</span></div><div class=\"title1\">是一名 学生<span class=\"inline-word\">博主</span></div></div><div class=\"aboutsiteTips author-content-item\"><div class=\"author-content-item-tips\">追求</div><h2>想要<br/>因为好玩而去<span class=\"inline-word\">感受</span><div class=\"mask\"><span class=\"first-tips\">学习</span><span>生活</span><span data-up=\"data-up\">程序</span><span data-show=\"data-show\">体验</span></div></h2></div></div><div class=\"author-content\"><div class=\"author-content-item maxim\"><div class=\"author-content-item-tips\">自我认知</div><span class=\"maxim-title\"><span style=\"opacity:.6;margin-bottom:8px\">夜晚摸鱼</span><span>白日做梦</span></span></div><div class=\"author-content-item buff\"><div class=\"card-content\"><div class=\"author-content-item-tips\">特长</div><span class=\"buff-title\"><span style=\"opacity:.6;margin-bottom:8px\">普普通通的<span class=\"inline-word\">网瘾少女</span></span><span>丧丧指数<span class=\"inline-word\">MAX</span></span></span></div><div class=\"card-background-icon\"><i class=\"fas fa-dice-d20\"></i></div></div></div></div><div class=\"author-content\"><div class=\"create-site-post author-content-item single\"><div class=\"author-content-item-tips\">心路历程</div>欢迎来到我的博客！这里是我记笔记的地方，目前就读于厦门<strong>集美大学</strong>的<strong>人工智能</strong>专业,会在这里记一些笔记,也会放一些自己平时做的ps美工作品,很喜欢做有关设计的东西，这也是我想去学习前端想要自己写网站的原因,更大感觉是在自娱自乐,只有一两个朋友见过我的这个网页,相对于是我的一个小树洞叭\n也喜欢fps游戏,致力于游戏里面突突突,感觉是放松压力的一个地方,但是有时候会被队友压力,算半个网瘾少女。我总是会在生活中遇到游戏里面一些奇奇怪怪的bug,写程序的时候也经常会疑问这个咋不跑呀,那个怎么又能跑啦,这种问题,在学校里面掌握了焊电路,组小车,搅水泥,磨螺丝,也很喜欢体验别人的故事所以是一个剧本杀玩家,用短暂的半天来逃离我本来枯燥无味的生活，算是短暂穿越吧。<div class=\"checkbox blue checked\"><input type=\"checkbox\" checked=\"checked\"/><p>致力于成为一个前端工程师</p><p>又菜又爱玩🎮<kbd>ctrl</kbd> +<kbd>C</kbd>、<kbd>ctrl</kbd> +<kbd>V</kbd>高级CV工程师🏆</p><p>擅长PS、Pr等软件</p></div><div class=\"checkbox times red checked\"><input type=\"checkbox\" checked=\"checked\"/><p>精通Html、CSS、JavaScript、Vue、React、PHP、Java、Python、C、C++、C#、Go、TypeScript等单词的拼写🎲</p></div><div class=\"checkbox times red checked\"><input type=\"checkbox\" checked=\"checked\"/><p>熟悉Windows、Linux、Mac、Android、IOS等系统的开关机👻</p></div><span class=\"p h3\">todoList</span><div class=\"checkbox checked\"><input type=\"checkbox\" checked=\"checked\"/><p>微信小程序</p></div><div class=\"checkbox checked\"><input type=\"checkbox\" checked=\"checked\"/><p>html.css</p></div><div class=\"checkbox checked\"><input type=\"checkbox\" checked=\"checked\"/><p>js</p></div><div class=\"checkbox\"><input type=\"checkbox\"/><p>vue3</p></div><div class=\"checkbox\"></div></div></div>","site":{"data":{}},"cover":"/img/wenzhang.webp","excerpt":"","more":"<div id=\"about-page\"><div class=\"author-box\"><div class=\"author-img\"><img class=\"no-lightbox\" src=\"https://images.pexels.com/users/avatars/421924226/-608.png?auto=compress&amp;fit=crop&amp;h=130&amp;w=130&amp;dpr=1\"/></div><div class=\"image-dot\"></div></div><p class=\"p center logo large\">关于我</p><p class=\"p center small\">最近很好，最远也是</p><div class=\"author-content\"><div class=\"author-content-item myInfoAndSayHello\"><div class=\"title1\">你好</div><div class=\"title2\">我是<span class=\"inline-word\">overplain</span></div><div class=\"title1\">是一名 学生<span class=\"inline-word\">博主</span></div></div><div class=\"aboutsiteTips author-content-item\"><div class=\"author-content-item-tips\">追求</div><h2>想要<br/>因为好玩而去<span class=\"inline-word\">感受</span><div class=\"mask\"><span class=\"first-tips\">学习</span><span>生活</span><span data-up=\"data-up\">程序</span><span data-show=\"data-show\">体验</span></div></h2></div></div><div class=\"author-content\"><div class=\"author-content-item maxim\"><div class=\"author-content-item-tips\">自我认知</div><span class=\"maxim-title\"><span style=\"opacity:.6;margin-bottom:8px\">夜晚摸鱼</span><span>白日做梦</span></span></div><div class=\"author-content-item buff\"><div class=\"card-content\"><div class=\"author-content-item-tips\">特长</div><span class=\"buff-title\"><span style=\"opacity:.6;margin-bottom:8px\">普普通通的<span class=\"inline-word\">网瘾少女</span></span><span>丧丧指数<span class=\"inline-word\">MAX</span></span></span></div><div class=\"card-background-icon\"><i class=\"fas fa-dice-d20\"></i></div></div></div></div><div class=\"author-content\"><div class=\"create-site-post author-content-item single\"><div class=\"author-content-item-tips\">心路历程</div>欢迎来到我的博客！这里是我记笔记的地方，目前就读于厦门<strong>集美大学</strong>的<strong>人工智能</strong>专业,会在这里记一些笔记,也会放一些自己平时做的ps美工作品,很喜欢做有关设计的东西，这也是我想去学习前端想要自己写网站的原因,更大感觉是在自娱自乐,只有一两个朋友见过我的这个网页,相对于是我的一个小树洞叭\n也喜欢fps游戏,致力于游戏里面突突突,感觉是放松压力的一个地方,但是有时候会被队友压力,算半个网瘾少女。我总是会在生活中遇到游戏里面一些奇奇怪怪的bug,写程序的时候也经常会疑问这个咋不跑呀,那个怎么又能跑啦,这种问题,在学校里面掌握了焊电路,组小车,搅水泥,磨螺丝,也很喜欢体验别人的故事所以是一个剧本杀玩家,用短暂的半天来逃离我本来枯燥无味的生活，算是短暂穿越吧。<div class=\"checkbox blue checked\"><input type=\"checkbox\" checked=\"checked\"/><p>致力于成为一个前端工程师</p><p>又菜又爱玩🎮<kbd>ctrl</kbd> +<kbd>C</kbd>、<kbd>ctrl</kbd> +<kbd>V</kbd>高级CV工程师🏆</p><p>擅长PS、Pr等软件</p></div><div class=\"checkbox times red checked\"><input type=\"checkbox\" checked=\"checked\"/><p>精通Html、CSS、JavaScript、Vue、React、PHP、Java、Python、C、C++、C#、Go、TypeScript等单词的拼写🎲</p></div><div class=\"checkbox times red checked\"><input type=\"checkbox\" checked=\"checked\"/><p>熟悉Windows、Linux、Mac、Android、IOS等系统的开关机👻</p></div><span class=\"p h3\">todoList</span><div class=\"checkbox checked\"><input type=\"checkbox\" checked=\"checked\"/><p>微信小程序</p></div><div class=\"checkbox checked\"><input type=\"checkbox\" checked=\"checked\"/><p>html.css</p></div><div class=\"checkbox checked\"><input type=\"checkbox\" checked=\"checked\"/><p>js</p></div><div class=\"checkbox\"><input type=\"checkbox\"/><p>vue3</p></div><div class=\"checkbox\"></div></div></div>"},{"title":"pageName","date":"2023-11-17T08:51:24.000Z","_content":"","source":"pageName/index.md","raw":"---\ntitle: pageName\ndate: 2023-11-17 16:51:24\n---\n","updated":"2023-11-17T08:51:24.388Z","path":"pageName/index.html","comments":1,"layout":"page","_id":"clp2dsiu00001iwtyb3y49b4q","content":"","site":{"data":{}},"cover":"/img/wenzhang.webp","excerpt":"","more":""}],"Post":[{"title":"c++数据结构笔记","abbrlink":"8582db5","date":"2023-01-18T11:11:00.000Z","cover":"https://images.pexels.com/photos/12235461/pexels-photo-12235461.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1","_content":"\n\n\n\n\n\n\n啊？\n\n\n\n试试看能不能上传\n","source":"_posts/c-数据结构笔记.md","raw":"---\ntitle: c++数据结构笔记\nabbrlink: 8582db5\ndate: 2023-01-18 19:11:00\ntags:\ncover: https://images.pexels.com/photos/12235461/pexels-photo-12235461.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\ncategories: 学习笔记\n\n---\n\n\n\n\n\n\n\n啊？\n\n\n\n试试看能不能上传\n","slug":"c-数据结构笔记","published":1,"updated":"2024-02-28T11:41:02.648Z","_id":"clf0opdiw0001hktygdy0231a","comments":1,"layout":"post","photos":[],"link":"","content":"<p>啊？</p>\n<p>试试看能不能上传</p>\n","site":{"data":{}},"excerpt":"","more":"<p>啊？</p>\n<p>试试看能不能上传</p>\n"},{"title":"ps作品","abbrlink":"4a17b15","sticky":1,"swiper_index":1,"description":"作品","cover":"img/作品集.png","_content":"\n\n\n# 作品\n\n## 海报\n\n- 地铁靠岸\n\n![image-20230108125242171](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301081252250.png)\n\n- BIRDS FLOCK\n\n![image-20230113135144753](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301131351843.png)\n\n- DANCE\n\n![image-20230114144108955](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301141441088.png)\n\n- MUSIC\n\n![image-20230114145243390](C:\\Users\\14379\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230114145243390.png)\n\n- SUNSHINE\n\n![image-20230114144230227](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301141442337.png)\n\n## 封面\n\n- 幻绮\n\n![image-20230113135311280](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301131353387.png)\n\n- 神\n\n![image-20230113135114370](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301131351525.png)\n","source":"_posts/ps.md","raw":"---\ntitle: ps作品\nabbrlink: 4a17b15\nsticky: 1\nswiper_index: 1 #置顶轮播图顺序，非负整数，数字越大越靠前\ndescription: 作品\ncover: img/作品集.png\ncategories: 美工作品\n---\n\n\n\n# 作品\n\n## 海报\n\n- 地铁靠岸\n\n![image-20230108125242171](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301081252250.png)\n\n- BIRDS FLOCK\n\n![image-20230113135144753](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301131351843.png)\n\n- DANCE\n\n![image-20230114144108955](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301141441088.png)\n\n- MUSIC\n\n![image-20230114145243390](C:\\Users\\14379\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230114145243390.png)\n\n- SUNSHINE\n\n![image-20230114144230227](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301141442337.png)\n\n## 封面\n\n- 幻绮\n\n![image-20230113135311280](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301131353387.png)\n\n- 神\n\n![image-20230113135114370](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301131351525.png)\n","slug":"ps","published":1,"date":"2023-01-06T08:04:13.307Z","updated":"2023-01-18T07:46:13.362Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf0opdiz0003hkty46roc28q","content":"<h1 id=\"作品\"><a href=\"#作品\" class=\"headerlink\" title=\"作品\"></a>作品</h1><h2 id=\"海报\"><a href=\"#海报\" class=\"headerlink\" title=\"海报\"></a>海报</h2><ul>\n<li>地铁靠岸</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301081252250.png\" alt=\"image-20230108125242171\"></p>\n<ul>\n<li>BIRDS FLOCK</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301131351843.png\" alt=\"image-20230113135144753\"></p>\n<ul>\n<li>DANCE</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301141441088.png\" alt=\"image-20230114144108955\"></p>\n<ul>\n<li>MUSIC</li>\n</ul>\n<p><img src=\"C:\\Users\\14379\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230114145243390.png\" alt=\"image-20230114145243390\"></p>\n<ul>\n<li>SUNSHINE</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301141442337.png\" alt=\"image-20230114144230227\"></p>\n<h2 id=\"封面\"><a href=\"#封面\" class=\"headerlink\" title=\"封面\"></a>封面</h2><ul>\n<li>幻绮</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301131353387.png\" alt=\"image-20230113135311280\"></p>\n<ul>\n<li>神</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301131351525.png\" alt=\"image-20230113135114370\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"作品\"><a href=\"#作品\" class=\"headerlink\" title=\"作品\"></a>作品</h1><h2 id=\"海报\"><a href=\"#海报\" class=\"headerlink\" title=\"海报\"></a>海报</h2><ul>\n<li>地铁靠岸</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301081252250.png\" alt=\"image-20230108125242171\"></p>\n<ul>\n<li>BIRDS FLOCK</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301131351843.png\" alt=\"image-20230113135144753\"></p>\n<ul>\n<li>DANCE</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301141441088.png\" alt=\"image-20230114144108955\"></p>\n<ul>\n<li>MUSIC</li>\n</ul>\n<p><img src=\"C:\\Users\\14379\\AppData\\Roaming\\Typora\\typora-user-images\\image-20230114145243390.png\" alt=\"image-20230114145243390\"></p>\n<ul>\n<li>SUNSHINE</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301141442337.png\" alt=\"image-20230114144230227\"></p>\n<h2 id=\"封面\"><a href=\"#封面\" class=\"headerlink\" title=\"封面\"></a>封面</h2><ul>\n<li>幻绮</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301131353387.png\" alt=\"image-20230113135311280\"></p>\n<ul>\n<li>神</li>\n</ul>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301131351525.png\" alt=\"image-20230113135114370\"></p>\n"},{"title":"html css笔记","abbrlink":"c2394247","date":"2022-12-24T11:10:23.000Z","cover":"https://images.pexels.com/photos/14413791/pexels-photo-14413791.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1","_content":"\n# html\n\n## html基本结构\n\n> ```html\n> <!-- 文档声明，声明当前网页的版本 -->\n> <!doctype html> \n> \n> <!-- html的根标签（元素），网页中的所有内容都要写根元素的里边 -->\n> \n> <html>\n> \n> <!-- head是网页的头部，head中的内容不会在网页中直接出现，主要用来帮助浏览器或搜索引擎来解析网页-->\n> \n> <head>\n>     <!-- meta标签用来设置网页的元数据，这里meta用来设置网页的字符集，避免乱码问题 -->\n>     <meta charset=\"utf-8\">\n>     <!-- title中的内容会显示在浏览器的标题栏，搜索引擎会主要根据title中的内容来判断网页的主要内容 -->\n>     <title>网页的标题</title>\n> </head>\n> \n> <!-- body是htm1的子元素，表示网页的主体，网页中所有的可见内容都应该写在body里 --><body>\n> \n>    <!-- h1网页的一级标题 --> \n> \n>  <h1>网页的大标题</h1>\n> \n> </body>\n> \n> </html>\n> ```\n\n\n\n##  字符实体与语义标签\n\n###  字符实体\n\n有些时候，在HTML中不能直接书写一些特殊符号，如：  \n\n多个连续的空格（在网页中编写的多个空格默认情况会自动被浏览器解析为一个空格）  \n\n比如字母两侧的大于小于号（可能会被认为是标签并解析）  \n\n如果我们需要在网页中书写这些特殊的符号，则需要使用html中的实体（转义字符）实体的语法：&实体的名字;，如：  \n\n![image-20230106155112829](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061551679.png)\n\n\n\n* meta主要用于设置网页中的一些元数据，元数据并不是给用户看的\n\n* charset ：指定网页的字符集\n\n* name ：指定的数据的名称\n\n* keywords：表示网站的关键字，可以同时指定多个关键字，关键字间使用,隔开\n\n* description：表示网站的描述信息\n\n* content ：指定的数据的内容，会作为搜索结果的超链接上的文字显示\n\n* title标签的内容会作为搜索结果的超链接上的文字显示\n\n****\n\n### 语义标签\n\n#### 块元素 \n\n> 标题\t一共有六级标题\n\n从h1 ~ h6重要性递减，h1最重要，h6最不重要\n\nh1在网页中的重要性仅次于title标签\n\n一般情况下一个页面中只会有一个h1\n\n一般情况下标题标签只会使用到h1 ～ h3，h4 ～ h6很少用      \n\n* ```<hgroup>\t标题组\t多层次的标题。它将一组<h1> ～ <h6>元素分组 ```\n* ![image-20230106155131518](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061551867.png)\n\n行内元素与块元素：\n\n块元素（block element）\n\n- 在网页中一般通过块元素来对页面进行布局\n\n行内元素（inline element）\n\n-  行内元素主要用来包裹文字\n\n- 一般情况下会在块元素中放行内元素，而不会在行内元素中放块元素\n\n- 如<p>元素中不能放任何的块元素，不过块元素中基本上什么都能放\n\n\n\n### 布局标签\n\nF12看源码\n\n第一栏elements\n\nheader表示网页的头部（页眉）\n\nmain表示网页的主体部分（一个页面中只会有一个main）\n\nfooter表示网页的底部（页脚）\n\nnav表示网页中的导航\n\naside和主体相关的其他内容（侧边栏）\n\narticle表示一个独立的文章\n\nsection表示一个独立的区块，上边的标签都不能表示时使用section\n\n![image-20230106155147504](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061551759.png)\n\n### 列表\n\n在html中可以创建列表，html列表一共有三种：\n\n- 有序列表，使用ol标签来创建有序列表，使用li表示列表项\n\n ```html\n<ol>\n\n  <li>Mix flour, baking powder, sugar, and salt.</li>\n\n  <li>In another bowl, mix eggs, milk, and oil.</li>\n\n  <li>Stir both mixtures together.</li>\n\n  <li>Fill muffin tray 3/4 full.</li>\n\n  <li>Bake for 20 minutes.</li>\n\n</ol> \n ```\n\n![image-20230106155206425](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061552866.png)\n\n- 无序列表，使用`ul`标签来创建无序列表，使用`li`表示列表项\n\n```html\n<ul>\n    <li>Milk</li>\n    <li>Cheese\n        <ul>\n            <li>Blue cheese\n                <ul>\n                    <li>Sweet blue cheese</li>\n                    <li>Sour blue cheese</li>\n                </ul>\n            </li>\n            <li>Feta</li>\n        </ul>\n    </li>\n</ul>\n\n```\n\n列表元素之间是可以互相嵌套的\n\n![image-20230106155218093](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061552180.png)\n\n- 定义列表，使用dl标签来创建定义列表，使用dt表示定义的内容，使用dd来对内容进行解释说明\n\n```html\n<dl>\n    <dt>Beast of Bodmin</dt>\n    <dd>A large feline inhabiting Bodmin Moor.</dd>\n\n    <dt>Morgawr</dt>\n    <dd>A sea serpent.</dd>\n\n    <dt>Owlman</dt>\n    <dd>A giant owl-like creature.</dd>\n</dl>\n```\n\n### 超链接\n\n超链接可以让我们从一个页面跳转到其他页面，或者是当前页面的其他的位置\n\n使用a标签来定义超链接，href属性指定跳转的目标路径，值可以是一个外部网站的地址，也可以写一个内部页面的地址\n\n超链接是也是一个行内元素，在a标签中可以嵌套除它自身外的任何元素\n\n#### 外部地址\n\n- Linking to an absolute URL：链接一个绝对路径\n- Linking to an email address：链接一个email地址\n- Linking to telephone numbers：链接电话号码\n- Using the download attribute to save a `<canvas>` as a PNG：下载图片\n\n```html\n<ul>\n  <li><a href=\"https://www.baidu.com\">Website</a></li>\n  <li><a href=\"mailto:example@outlook.com\">Email</a></li>\n  <li><a href=\"tel:+123456789\">Phone</a></li>\n</ul>\n```\n\n#### 内部地址\n\n当我们需要跳转一个服务器内部的页面时，一般我们都会使用相对路径，会以./或../开头\n\n- ./ 表示当前文件所在目录，可以省略不写\n\n- ../表示当前文件所在目录的上一级目录\n\n```html\n<a href=\"./test1.html\">超链接1</a><br>\n<a href=\"../test2.html\">超链接2</a><br>\n<a href=\"./test3/test3.html\">超链接3</a><br>\n<a href=\"../test4/test4.html\">超链接4</a>\n```\n\n#### 新建页面\n\ntarget属性，用来指定超链接打开的位置可选值：\n\n- _self在当前页面中打开超链接，默认值\n\n- _blank在新建页面中打开超链接\n\n```html\n<a href=\"./test1.html\">超链接1——默认</a><br>\n<a href=\"./test1.html\" target=\"_self\">超链接1——当前页面</a><br>\n<a href=\"./test1.html\" target=\"_blank\">超链接1——新建页面</a><br>\n```\n\n### 锚点跳转\n\n可以将`#`作为超链接的路径的占位符使用。\n\n`<a href=\"#\">`这是一个新的超链接`</a>`\n\n可以使用javascript:; 来作为href的属性，此时点击这个超链接什么也不会发生\n\n`<a href=\"javascript:;\">`这是一个新的超链接`</a>`\n\n可以直接将超链接的`href`属性设置为`#`，这样点击超链接以后页面不会发生跳转，而是转到当前页面的顶部的位置\n\n可以跳转到页面的指定位置（锚点），只需将`href`属性设置`#目标元素的id属性值`（唯一不重复）\n\nid属性（唯一不重复的）\n\n- 每一个标签都可以添加一个id属性\n- id属性就是元素的唯一标识，同一个页面不能出现重复的id属性\n\n### 图片\n\n图片标签用于向当前页面中引入一个外部图片\n\nimg标签是一个自结束标签，这种元素属于替换元素（块和行内元素之间，具有两种元素的特点）\n\n属性:\n\n- src：属性指定的是外部图片的路径（路径规则和超链接是一样的）\n- alt：图片的描述，这个描述默认情况下不会显示，有些浏览器会在图片无法加载时显示，搜索引擎会根据alt中的内容来识别图片\n- width：图片的宽度（单位是像素）\n- height ：图片的高度（单位是像素）[宽度和高度中如果只修改了一个，则另一个会等比例缩放]\n\n图片的格式：\n\njpeg(jpg)\n\n- 支持的颜色比较丰富\n- 不支持透明效果\n- 不支持动图\n- 一般用来显示照片\n\ngif\n\n- 支持的颜色比较单一\n- 支持简单透明\n- 支持动图\n\npng\n\n- 支持的颜色丰富\n- 支持复杂透明\n- 不支持动图\n- 专为网页而生\n\nwebp\n\n- 这种格式是谷歌新推出的专门用来表示网页中的图片的一种格式\n\n- 具备其他图片格式的所有优点，而且文件还特别的小\n- 缺点：兼容性不好\n\nbase64\n\n- 将图片使用base64编码，这样可以将图片转换为字符，通过字符的形式来引入图片\n  图片格式的选择\n\n- 图片效果一样的，选文件小的\n\n- 图片效果不一样的，选图片效果好的\n\n- 尽可能的兼顾和平衡图片效果和文件大小\n\n### 内联框架\n\n用于向当前页面中引入一个其他页面\n\n- src指定要引入的网页的路径\n- frameborder 指定内联框架的边框\n\n```html\n<iframe src=\"https://www.qq.com\" width=\"800\" height=\"600\" frameborder=\"0\"></iframe>\n```\n\n### 音视频\n\n#### 音频\n\naudio标签用来向页面中引入一个外部的音频文件\n\n音视频文件引入时，默认情况下不允许用户自己控制播放停止\n\n属性：\n\n- controls是否允许用户控制播放\n- autoplay音频文件是否自动播放\n  - 如果设置了autoplay，则音乐在打开页面时会自动播放\n    但是目前来讲大部分浏览器都不会自动对音乐进行播放\n\n- loop音乐是否循环播放\n\n```<audio src=\"./source/audio.mp3\" controls autoplay loop></audio>```\n\n#### SOURCE\n\n除了通过`src`属性来指定外部文件的路径以外，还可以通过`<source>`元素来指定文件的路径\n\n```html\n    对不起，您的浏览器不支持播放音频！请升级浏览器！\n\t<source src=\"./source/audio.mp3\">\n\t<source src=\"./source/audio.ogg\">\n</audio>```\n```\n\n用source可以显示文字提示不支持\n\n多个可以更严谨防止浏览器不支持一个格式\n\n``````html\n<embed src=\"./source/audio.mp3\" type=\"audio/mp3\" >\n``````\n\nembed和那句话任选其一就行了 它能兼容所有【非常流氓！！！\n\n#### 视频\n\n使用`video`标签来向网页中引入一个视频，使用方式和`audio`基本上是一样的\n\n```html\n<video controls>\n    <source src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm\" type=\"video/webm\">\n    <source src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4\" type=\"video/mp4\">\n    <embed src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4\" type=\"video/mp4\">\n</video>\n```\n\n通过iframe引入视频\n\n``````html\n<iframe frameborder=\"0\" src=\"http://\">\n``````\n\n# CSS\n\n## css语法与选择器\n\n### 简介\n\n使用css来修改元素的样式\n\n- 内联样式，行内样式 \n\n  - 在标签内部通过`Style`属性来设置元素的样式\n- `<p style=\"color:\">内联样式（行内样式）</p>`\n\n问题：使用内联样式，样式只能对一个标签生效。如果希望影响到多个元素，必须在每一个元素中都复制一遍；并且当样式发生变化时，我们必须要一个一个的修改，非常的不方便。（注意：开发时绝对不要使用内联样式）\n\n- 内部样式表\n  - 将样式编写到`head`中的`style`标签里然后通过css的选择器来选中元素并为其设置各种样式可以同时为多个标签设置样式，并且修改时只需要修改一处即可。内部样式表更加方便对样式进行复用\n\n```html\n<style>\np{\n    color:green; \n    font-size:50px;\n}\n</style>\n```\n\n问题：我们的内部样式表只能对一个网页起作用，它里边的样式不能跨页面进行复用\n\n- 外部样式表\n  - 可以将css样式编写到一个外部的CSS文件中，然后通过`link`标签来引入外部的CSS文件\n\n```html\n<link rel=\"stylesheet\" href=\"./style.css\">\n```\n\n外部样式表需要通过`link`标签进行引入，意味着只要想使用这些样式的网页都可以对其进行引用使样式，可以在不同页面之间进行复用\n\n将样式编写到外部的CSS文件中，可以使用到浏览器的缓存机制，从而加快网页的加载速度，提高用户的体验。\n\n### CSS基本语法\n\n#### 注释\n\n- css中的注释\n  - 只能使用`/*`和`*/`包裹。即不管是单行注释，还是多行注释，都是以`/*`开头，以`*/`结尾\n\n- html中的注释\n  - 只能使用`<!--`和`-->`包裹。即不管是单行注释，还是多行注释，都是以`<!--`开头，以`-->`结尾\n\n- JS注释\n  - 单行注释使用`//`。多行注释使用`/*`和`*/`包裹，以`<!--`开头，以`-->`结尾\n\n#### 基本语法\n\n*选择器 声明块*\n\n- 选择器：\n\n通过选择器可以选中页面中的指定元素\n\n比如p的作用就是选中页面中所有的p元素声明块\n\n- 声明块：\n\n通过声明块来指定要为元素设置的样式\n\n声明块由一个一个的声明组成，声明是一个名值对结构\n\n一个样式名对应一个样式值，名和值之间以:连接，以;结尾\n\n```css\nh1{\n    color: green;\n}\n```\n\n### CSS选择器\n\n#### 通配选择器\n\n- 作用：选中页面中的所有元素\n- 语法：`*`\n- 例子：`*{}`\n\n```css\n*{\n    color: red;\n}\n```\n\n#### 元素选择器\n\n也叫类型选择器、标签选择器\n\n- 作用：根据标签名来选中指定的元素\n- 语法：`elementname{}`\n- 例子：`p{}` `h1{}` `div{}`\n\n```css\np{\n    color: red; \n}\n\nh1{\n    color: green;\n}\n```\n\n#### ID选择器\n\n作用：根据元素的id属性值选中一个元素\n\n语法：#id属性值{}\n\n例子：#box{} #red{}\n\n```css\n#red{\n\tcolor:red;\n}\n```\n\n#### 类选择器\n\n- 作用：根据元素的class属性值选中一组元素\n- 语法：`.classname`\n- 例子：`.blue{}`\n\n```css\n.blue{\n    color: blue;\n}\n.size{\n    font-size: 20px;\n}\n```\n\nclass`是一个标签的属性，它和`id`类似，不同的是`class\n\n- 可以重复使用，\n- 可以通过`class`属性来为元素分组，\n- 可以同时为一个元素指定多个`class`属性\n\n```css\n<p class=\"blue size\"> 类选择器（Class selector）</p>\n```\n\n#### 属性选择器\n\n作用：根据元素的属性值选中一组元素\n语法1：[属性名] 选择含有指定属性的元素\n语法2：[属性名=属性值] 选择含有指定属性和属性值的元素\n语法3：[属性名^=属性值] 选择属性值以指定值开头的元素\n语法4：[属性名$=属性值] 选择属性值以指定值结尾的元素\n语法5：[属性名*=属性值] 选择属性值中含有某值的元素\n例子：`p[title]{}` `p[title=e]{}` `p[title^=e]{}` `p[title$=e]{}` `p[title*=e]{}`\n\n### 复合选择器\n\n#### 交集选择器\n\n- 作用：选中同时复合多个条件的元素\n- 语法：`选择器1选择器2选择器3选择器n{}`\n- *注意点：交集选择器中如果有元素选择器，必须使用元素选择器开头*\n\n```css\ndiv.red{\n    font-size: 30px;\n}\n\n.a.b.c{\n    color: blue;\n}\n\n```\n\n#### 并集选择器\n\n- 作用：同时选择多个选择器对应的元素\n- 语法：`选择器1,选择器2,选择器3,选择器n{}`\n- 例子：`#b1,.p1,h1,span,div.red{}`\n\n```css\nh1,span{\n    color: green;\n}\n```\n\n### 关系选择器\n\n- 父元素：直接包含子元素的元素叫做父元素\n- 子元素：直接被父元素包含的元素是子元素\n- 祖先元素：直接或间接包含后代元素的元素叫做祖先元素；一个元素的父元素也是它的祖先元素\n- 后代元素：直接或间接被祖先元素包含的元素叫做后代元素；子元素也是后代元素\n- 兄弟元素：拥有相同父元素的元素是兄弟元素\n\n#### 子元素选择器\n\n- 作用：选中指定父元素的指定子元素\n- 语法：`父元素 > 子元素`\n- 例子：`A > B`\n\n```css\ndiv.box > p > span{\n    color: orange;\n}\n```\n\n#### 后代元素选择器   \n\n- 作用：选中指定元素内的指定后代元素\n- 语法：`祖先 后代`\n- 例子：`A B`\n\n```css\ndiv span{\n    color: skyblue;\n}\n```\n\n#### 兄弟元素选择器\n\n- 作用：选择下一个兄弟\n- 语法：`前一个 + 下一个` `前一个 + 下一组`\n- 例子1：`A1 + A2`（选择下一个兄弟）\n- 例子2： `A1 ~ An`（选择下边所有的兄弟）\n\n```css\np + span{\n    color: red;\n}\n\np ~ span{\n    color: red;\n}\n```\n\n### 伪类选择器\n\n伪类（不存在的类，特殊的类）\n\n伪类用来描述一个元素的特殊状态，比如：第一个子元素、被点击的元素、鼠标移入的元素.…\n\n伪类一般情况下都是使用`:`开头\n\n- `:first-child` 第一个子元素\n- `:last-child` 最后一个子元素\n- `:nth-child()` 选中第n个子元素\n  - n：第n个，n的范围0到正无穷\n  - 2n或even：选中偶数位的元素\n  - 2n+1或odd：选中奇数位的元素\n\n以上这些伪类都是根据所有的子元素进行排序的\n\n- `:first-of-type` 同类型中的第一个子元素\n- `:last-of-type` 同类型中的最后一个子元素\n- `:nth-of-type()` 选中同类型中的第n个子元素\n\n这几个伪类的功能和上述的类似，不同点是他们是在同类型元素中进行排序的\n\n- `:not()`否定伪类，将符合条件的元素从选择器中去除\n\n```css\n/* ul下所有li，黑色 */\nul>li {\n    color: black;\n}\n\n/* ul下第偶数个li，黄色 */\nul>li:nth-child(2n) {\n    color: yellow;\n}\n\n/* ul下第奇数个li，绿色 */\nul>li:nth-child(odd) {\n    color: green;\n}\n\n/* ul下第一个li，红色 */\nul>li:first-child {\n    color: red;\n}\n\n/* ul下最后一个li，黄色 */\nul>li:last-child {\n    color: orange;\n}\n```\n\n![image-20230111203813718](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301112038812.png)\n\n```css\nul > li:not(:nth-of-type(3)){\n    color:yellowgreen;\n}\n/*not()就是取消这一行的颜色*/\n```\n\n- `:link` 未访问的链接(正常的链接)\n- `:visited`已访问的链接\n  - 由于隐私的原因，所以`visited`这个伪类只能修改链接的颜色\n- `:hover` 鼠标悬停的链接（用来表示鼠标移入的状态）\n- `:active` 鼠标点击的链接（用来表示鼠标点击）\n\n```css\n/* unvisited link */\na:link {\n  color: red;\n}\n\n/* visited link */\na:visited {\n  color: yellow;\n}\n\n/* mouse over link */\na:hover {\n  color: green;\n}\n\n/* selected link */\na:active {\n  color: blue;\n}\n```\n\n### 伪元素选择器\n\n伪元素，表示页面中一些特殊的并不真实的存在的元素（特殊的位置）\n\n伪元素使用`::`开头\n\n- `::first-letter` 表示第一个字母\n- `::first-line` 表示第一行\n- `::selection` 表示选中的内容\n- `::before` 元素的开始\n- `::after` 元素的最后\n- `::before`和`::after` 必须结合`content`属性来使用\n\n``` css\n/* 段落首字母设置大小为30px */\np::first-letter{\n    font-size: 30px;\n}\n\n/* 段落第一行设置为黄色背景 */\np::first-line{\n    background-color: yellow;\n}\n\n/* 段落选中的部分变绿色 */\np::selection{\n    background-color: green；\n}\n\n/* div前加上内容 */\ndiv::before{\n    content: 'BEFORE';\n    color: red;\n}\n\n/* div后加上内容 */\ndiv::after{\n    content: 'AFTER';\n    color: blue;\n}\n\n```\n\n## 样式继承及颜色长度单位介绍\n\n### 继承\n\n样式的继承，我们为一个元素设置的样式同时也会应用到它的后代元素上\n\n继承是发生在祖先后后代之间的\n\n继承的设计是为了方便我们的开发，利用继承我们可以将一些通用的样式统一设置到共同的祖先元素上，\n\n这样只需设置一次即可让所有的元素都具有该样式\n\n注意:并不是所有的样式都会被继承：\n\n比如背景相关的，布局相关等的这些样式都不会被继承。\n\n- 样式的冲突\n\n​\t-当我们通过不同的选择器，选中相同的元素，并且为相同的样式设置不同的值时，此时就发生了样式的冲突。\n\n发生样式冲突时，应用哪个样式由选择器的权重（优先级）决定\n\n- 选择器的权重：\n\n  内联样式\t\t1,0,0,0\n\n  id选择器\t\t0,1,0,0\n\n  类和伪类选择器\t\t0,0,1,0\n\n  元素选择器\t\t0,0,0,1\n\n  通配选择器\t\t0,0,0,0\n\n  继承的样式\t\t没有优先级\n\n比较优先级时，需要将所有的选择器的优先级进行相加计算，最后优先级越高，则越优先显示(分组选择器是单独计算的\n\n选择器的累加不会超过其最大的数量级，类选择器在高也不会超过id选择器\n\n如果优先级计算后相同,此时则优先使用靠下的样式\n\n可以在某一个样式的后边添加`!important`，则此时该样式会获取到最高的优先级，甚至超过内联样式，\n\n*注意：在开发中一定要慎用！*\n\n### 长度单位\n\n长度单位:\n\n- 像素\n\n​\t- 屏幕（显示器）实际上是由一个一个的小点点构成的\n\n​\t- 不同屏幕的像素大小是不同的，像素越小的屏幕显示的效果越清晰-所以同样的200px在不同的设备下显示效果不一样\n\n- 百分比\n\n​\t-也可以将属性值设置为相对于其父元素属性的百分比\n\n​\t-设置百分比可以使子元素跟随父元素的改变而改变\n\nem\n\nem是相对于元素的字体大小来计算的，`1em = <self>.font-size`，也就说em值会根据元素本身的字体大小的改变而改变\n\nrem\n\nrem是相对于根元素的字体大小来计算，`1em = <root>.font-size`，也就说em值会根据根元素的字体大小的改变而改变\n\n(em改变字体大小就能改变内容大小\n\n```css\n .box4 {\n        font-size: 20px;\n        width: 10rem; /*当时用rem时，不管怎么改本元素的font-size都是不会变的。需要定义root元素的font-size才可以 */\n        height: 10rem;\n        background-color: red;\n    }\n```\n\n### 颜色单位\n\n在css中可以直接使用颜色名来设置各种颜色\n\n比如:red、orange、yellow、 blue、green ... 但是在css中直接使用颜色名是非常的不方便\n\n- RGB值:\n\nRGB通过三种颜色的不同浓度来调配出不同的颜色\n\nR red,G green , B blue\n\n每一种颜色的范围在0 - 255 (0% - 100%)之间\n\n语法:RGB(红色,绿色,蓝色)\n\n- RGBA：\n\n就是在rgb的基础上增加了一个a表示不透明度\n\n需要四个值，前三个和rgb一样，第四个表示不透明度\n\n1表示完全不透明 0表示完全透明 .5半透明\n\n- 十六进制的RGB值:\n\n语法:#红色绿色蓝色\n\n颜色浓度通过00-ff\n\n如果颜色两位两位重复可以进行简写\n\n#aabbcc --> #abc\n\n- HSL值 HSLA值\n\nH 色相(0 - 360)\n\nS 饱和度，颜色的浓度 0% - 100%\n\nL 亮度，颜色的亮度 0% -100%\n\n## 盒模型\n\n### 文档流\n\n网页是一个多层的结构，一层摞着一层\n\n通过css可以分别为每一层来设置样式\n\n作为用户来讲只能看到最顶上一层\n\n这些层中，最底下的一层称为文档流，文档流是网页的基础\n\n​\t\t我们所创建的元素默认都是在文档流中进行排列\n\n对于我们来元素主要有两个状态在文档流中\n\n- 不在文档流中（脱离文档流）\n\n- 元素在文档流中有什么特点:\n\n  - 块元素\n\n    块元素会在页面中独占一行(自上向下垂直排列）\n\n    默认宽度是父元素的全部（会把父元素撑满）\n\n    默认高度是被内容撑开（子元素）\n\n  - 行内克素\n\n    行内元素不会独占页面的一行，只占自身的大小\n\n    行内元素在页面中左向右水平排列（书写习惯一致）\n\n    如果一行之中不能容纳下所有的行内元素，则元素会换到第二行继续自左向右排列（书写习惯一致）\n\n    行内元素的默认宽度和高度都是被内容撑开\n\n### 盒模型\n\n![image-20230113213021324](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301141442677.png)\n\n- 盒模型、盒子模型、框模型\n\n  - css将页面中所有元素都设置为了一个矩形的盒子\n\n  - 讲元素设置为矩形的盒子后，对页面的布局就变成将不同的盒子放到不同的位置\n  - *盒子可见框的大小，由内容区、内边距和边框共同决定，所以在计算盒子大小时，需要将这三个区域加到一起计算*\n\n每一个盒子由以下几个部分组成：\n\n**可见框由内容区、边框、内边距组成**\n\n#### 内容区（content）\n\n- 元素中的所有的子元素和文本内容都在内容区中\n- 内容去的大小由width和height两个属性来设置\n- **width设置内容区的宽度**\n- **height设置内容区的高度**\n\n```html\n.box1{\n    width: 200px; \n    height: 200px; \n    background-color: #bfa;\n}\n```\n\n#### 内边距（padding）\n\n- 内边距，也叫填充，是内容区和边框之间的空间\n\n  - `padding-top` 上内边距\n  - `padding-right` 右内边距\n  - `padding-bottom`下内边距\n  - `padding-left` 左内边距\n- padding内边距的简写属性，可以同时指定四个方向的内边距，规则和边框中属性值设置一样\n- **内边距的设置会影响到盒子的大小，背景颜色会延伸到内边距上**\n- **文字、子元素只会出现在内容区内不会出现在内边距上**\n\n```css\n<style>\n    .outer{\n        width: 200px;\n        height: 200px;\n        border: 10px orange solid;\n        padding-right: 100px;\n        padding-bottom: 100px;\n        padding-left: 100px;\n    }\n\n    .inner {\n        width: 200px;\n        height: 200px;\n        background-color: greenyellow;\n    }\n</style>\n\n<div class=\"outer\">\n    <div class=\"inner\"></div>\n</div>\n\n```\n\n\n\n#### 边框（border）\n\n- 边框属于盒子边缘，边框里边属于盒子内部，出了边框都是盒子的外部\n- **边框也会影响盒子的大小**\n- 设置边框至少需要三个样式\n- **border-width 边框的宽度：默认3px**(可以省略不写)\n  border-top-width 上边框的宽度\n  border-right-width 右边框的宽度\n  border-bottom-width 下边框的宽度\n  border-left-width 左边框的宽度\n- **border-color 边框的颜色：默认使用color的颜色值**\n  border-top-color 上边框的颜色\n  border-right-color 右边框的颜色\n  border-bottom-color 下边框的颜色\n  border-left-color 左边框的颜色\n- **border-style 边框的样式：没有默认值，必须指定**\n  border-top-style 上边框的样式\n  border-right-style 右边框的样式\n  border-bottom-style 下边框的样式\n  border-left-style 左边框的样式\n\n```css\n.box1{\n    border-width: 10px;\n    border-color: red;\n    /* \n    \tsolid  实线 \n    \tdotted 点状虚线 \n    \tdashed 虚线 \n    \tdouble 双线 \n    */\n    border-style: solid;\n}\n```\n\n- 不论是`border-width` 、 `border-color` 、`border-style` 还是其衍生出来的属性写法，都可以指定每个方向的边框情况\n\n  设定几个值就决定了对应方向的宽度、颜色或样式\n\n  - 四个值：`上 右 下 左`\n  - 三个值：`上 左右 下`\n  - 两个值：`上下 左右`\n  - 一个值：`上下左右`\n  - 【顺时针方向设置】\n\n- border简写属性：通过该属性可以同时设置边框所有的相关样式，并且没有顺序要求\n\n  - `border-top` 上边框的宽度、颜色和样式\n  - `border-right` 右边框的宽度、颜色和样式\n  - `border-bottom` 下边框的宽度、颜色和样式\n  - `border-left` 左边框的宽度、颜色和样式\n  - 可以不要哪边写个none就行了\n\n```css\n.box1{ \n\tborder: 10px red solid;\n}\n\n```\n\n#### 外边距（margin）\n\n外边距，也叫空白边，位于盒子的最外围，是添加在边框外周围的空间。空白边使盒子之间不会紧凑地连接在一起，是CSS 布局的一个重要手段\n\n**外边距不会影响盒子可见框的大小，但是外边距会影响盒子的位置和占用空间**\n\nmargin外边距的简写属性，可以同时指定四个方向的内边距，规则和边框中属性值设置一样\n\nmargin会影响到盒子实际占用空间\n\n一共有四个方向的外边距：\n\n- ` margin-top` :上外边距\n  - 设置正值，元素自身向下移动\n  - 设置负值，元素自身向上移动\n-  ` margin-right`:右外边距\n  - 设置正值，其右边的元素向右移动\n  - 设置负值，其右边的元素向左移动\n  - 上述说法并不准确，对于块元素，设置`margin-right`不会产生任何效果\n\n-  `margin-bottom`:下外边距\n  - 设置正值，其下边的元素向下移动\n  - 设置负值，其下边的元素向上移动\n  - 上述说法并不准确，对于块元素，会有垂直方向上的边距重叠问题\n- `  margin-left`:左外边距\n  - 设置正值，元素自身向右移动\n  - 设置负值，元素自身向左移动\n\n元素在页面中是按照自左向右的顺序排列的，所以默认情况下\n\n- 如果我们设置的左和上外边距则会移动元素自身\n- 而设置下和右外边距会移动其他元素\n\n```html\n.box1 {\n    width: 200px;\n    height: 200px;\n    background-color: #bfa;\n    border: 10px orange solid;\n    margin-bottom: 100px;\n\n}\n\n.box2 {\n    width: 200px;\n    height: 200px;\n    background-color: #bfa;\n    border: 10px red solid;\n    margin-top: 100px;\n}\n\n```\n\n### 水平方向布局\n\n元素在其父元素中水平方向的位置由以下几个属性共同决定，一个元素在其父元素中，水平布局**必须要满足**以下的等式\n\n```\nmargin-left + border-left + padding-left + width + padding-right + border-right + margin-right = 其父元素的宽度\n```\n\n以上等式必须满足，如果相加结果使等式不成立，则称为**过渡约束**\n\n- 如果这七个值中没有`auto`的情况，则浏览器会自动调整`margin-right`值以使等式满足\n\n  `100 + 0 + 0 + 200 + 0 + 0 + 0 = 800` ==> `100 + 0 + 0 + 200 + 0 + 0 + 500 = 800`\n\n- 如果这七个值中有`auto`的情况，则会自动调整`auto`值以使等式成立\n- 这七个值中有三个值可以设置为`auto` ：`width`、`margin-left`、`maring-right`\n\n1/如果某个值为auto，则会自动调整`auto`的那个值以使等式成立\n\n2/如果宽度为`auto`，则宽度会调整到最大，其他`auto`的外边距会自动设置为0\n\n3/如果外边距都为`auto`，则`auto`的外边距会自动均分以使等式成立\n\n【所以我们进程利用这个特点来使一个元素在其都元素中水平居中】\n\n### 垂直方向布局\n\n默认情况下父元素的高度被内容撑开\n\n#### 元素溢出\n\n子元素是在父元素的内容区中排列的，如果子元素的大小超过了父元素，则子元素会从父元素中溢出\n\n使用`overflow`/`overflow-x`/`overflow-y`属性来设置父元素如何处理溢出的子元素\n\n可选值：`visible`/`hidden`/`scroll`/`auto`\n\n`visible` 溢出内容会在父元素外部位置显示，默认值\n\n`hidden` 溢出内容会被裁剪，不会显示\n\n`scroll` 生成两个滚动条，通过滚动条来查看完整的内容\n\n`auto` 根据需要生成滚动条\n\n```html\n<style>\n    .box1 {\n        width: 200px;\n        height: 200px;\n        background-color: #bfa;\n        border: 10px orange solid;\n        overflow: visible; /* 默认值 */\n    }\n</style>\n<div class=\"box1\">\n    Lorem ipsum dolor sit amet consectetur adipisicing elit. Asperiores aspernatur illo inventore\n    deleniti laudantium quaerat excepturi sed quidem tempore? Eaque, cumque porro. Fuga quam error cupiditate quasi\n    eveniet in numquam!\n</div>\n\n```\n\n#### 边距折叠\n\n垂直外边距的重叠（折叠）：相邻的垂直方向外边距会发生重叠现象\n\n#### 兄弟元素\n\n兄弟元素间的相邻，垂直外边距会取两者之间的较大值（两者都是正值）\n\n特殊情况：\n\n- 如果相邻的外边距一正一负，则取两者的和\n\n- 如果相邻的外边距都是负值，则取两者中绝对值较大的\n\n- ```html\n  .box1,.box2{ \n      width:200px; \n      height:200px; \n      font-size:100px;\n  }\n  \n  .boxl{\n      background-color: #bfa;\n      /*设置一个下外边距*/\n      margin-bottom: 100px;\n  }\n  \n  .box2{\n      background-color: orange;\n      /*设置一个上外边距*/\n      margin-top: 100px;\n  }\n  ```\n\n兄弟元素之间的外边距的重叠，对于开发是有利的，所以我们不需要进行处理\n","source":"_posts/html css笔记.md","raw":"---\ntitle: html css笔记\nabbrlink: c2394247\ndate: 2022-12-24 19:10:23\ntags:\ncover: https://images.pexels.com/photos/14413791/pexels-photo-14413791.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\ncategories: 学习笔记\n---\n\n# html\n\n## html基本结构\n\n> ```html\n> <!-- 文档声明，声明当前网页的版本 -->\n> <!doctype html> \n> \n> <!-- html的根标签（元素），网页中的所有内容都要写根元素的里边 -->\n> \n> <html>\n> \n> <!-- head是网页的头部，head中的内容不会在网页中直接出现，主要用来帮助浏览器或搜索引擎来解析网页-->\n> \n> <head>\n>     <!-- meta标签用来设置网页的元数据，这里meta用来设置网页的字符集，避免乱码问题 -->\n>     <meta charset=\"utf-8\">\n>     <!-- title中的内容会显示在浏览器的标题栏，搜索引擎会主要根据title中的内容来判断网页的主要内容 -->\n>     <title>网页的标题</title>\n> </head>\n> \n> <!-- body是htm1的子元素，表示网页的主体，网页中所有的可见内容都应该写在body里 --><body>\n> \n>    <!-- h1网页的一级标题 --> \n> \n>  <h1>网页的大标题</h1>\n> \n> </body>\n> \n> </html>\n> ```\n\n\n\n##  字符实体与语义标签\n\n###  字符实体\n\n有些时候，在HTML中不能直接书写一些特殊符号，如：  \n\n多个连续的空格（在网页中编写的多个空格默认情况会自动被浏览器解析为一个空格）  \n\n比如字母两侧的大于小于号（可能会被认为是标签并解析）  \n\n如果我们需要在网页中书写这些特殊的符号，则需要使用html中的实体（转义字符）实体的语法：&实体的名字;，如：  \n\n![image-20230106155112829](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061551679.png)\n\n\n\n* meta主要用于设置网页中的一些元数据，元数据并不是给用户看的\n\n* charset ：指定网页的字符集\n\n* name ：指定的数据的名称\n\n* keywords：表示网站的关键字，可以同时指定多个关键字，关键字间使用,隔开\n\n* description：表示网站的描述信息\n\n* content ：指定的数据的内容，会作为搜索结果的超链接上的文字显示\n\n* title标签的内容会作为搜索结果的超链接上的文字显示\n\n****\n\n### 语义标签\n\n#### 块元素 \n\n> 标题\t一共有六级标题\n\n从h1 ~ h6重要性递减，h1最重要，h6最不重要\n\nh1在网页中的重要性仅次于title标签\n\n一般情况下一个页面中只会有一个h1\n\n一般情况下标题标签只会使用到h1 ～ h3，h4 ～ h6很少用      \n\n* ```<hgroup>\t标题组\t多层次的标题。它将一组<h1> ～ <h6>元素分组 ```\n* ![image-20230106155131518](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061551867.png)\n\n行内元素与块元素：\n\n块元素（block element）\n\n- 在网页中一般通过块元素来对页面进行布局\n\n行内元素（inline element）\n\n-  行内元素主要用来包裹文字\n\n- 一般情况下会在块元素中放行内元素，而不会在行内元素中放块元素\n\n- 如<p>元素中不能放任何的块元素，不过块元素中基本上什么都能放\n\n\n\n### 布局标签\n\nF12看源码\n\n第一栏elements\n\nheader表示网页的头部（页眉）\n\nmain表示网页的主体部分（一个页面中只会有一个main）\n\nfooter表示网页的底部（页脚）\n\nnav表示网页中的导航\n\naside和主体相关的其他内容（侧边栏）\n\narticle表示一个独立的文章\n\nsection表示一个独立的区块，上边的标签都不能表示时使用section\n\n![image-20230106155147504](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061551759.png)\n\n### 列表\n\n在html中可以创建列表，html列表一共有三种：\n\n- 有序列表，使用ol标签来创建有序列表，使用li表示列表项\n\n ```html\n<ol>\n\n  <li>Mix flour, baking powder, sugar, and salt.</li>\n\n  <li>In another bowl, mix eggs, milk, and oil.</li>\n\n  <li>Stir both mixtures together.</li>\n\n  <li>Fill muffin tray 3/4 full.</li>\n\n  <li>Bake for 20 minutes.</li>\n\n</ol> \n ```\n\n![image-20230106155206425](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061552866.png)\n\n- 无序列表，使用`ul`标签来创建无序列表，使用`li`表示列表项\n\n```html\n<ul>\n    <li>Milk</li>\n    <li>Cheese\n        <ul>\n            <li>Blue cheese\n                <ul>\n                    <li>Sweet blue cheese</li>\n                    <li>Sour blue cheese</li>\n                </ul>\n            </li>\n            <li>Feta</li>\n        </ul>\n    </li>\n</ul>\n\n```\n\n列表元素之间是可以互相嵌套的\n\n![image-20230106155218093](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061552180.png)\n\n- 定义列表，使用dl标签来创建定义列表，使用dt表示定义的内容，使用dd来对内容进行解释说明\n\n```html\n<dl>\n    <dt>Beast of Bodmin</dt>\n    <dd>A large feline inhabiting Bodmin Moor.</dd>\n\n    <dt>Morgawr</dt>\n    <dd>A sea serpent.</dd>\n\n    <dt>Owlman</dt>\n    <dd>A giant owl-like creature.</dd>\n</dl>\n```\n\n### 超链接\n\n超链接可以让我们从一个页面跳转到其他页面，或者是当前页面的其他的位置\n\n使用a标签来定义超链接，href属性指定跳转的目标路径，值可以是一个外部网站的地址，也可以写一个内部页面的地址\n\n超链接是也是一个行内元素，在a标签中可以嵌套除它自身外的任何元素\n\n#### 外部地址\n\n- Linking to an absolute URL：链接一个绝对路径\n- Linking to an email address：链接一个email地址\n- Linking to telephone numbers：链接电话号码\n- Using the download attribute to save a `<canvas>` as a PNG：下载图片\n\n```html\n<ul>\n  <li><a href=\"https://www.baidu.com\">Website</a></li>\n  <li><a href=\"mailto:example@outlook.com\">Email</a></li>\n  <li><a href=\"tel:+123456789\">Phone</a></li>\n</ul>\n```\n\n#### 内部地址\n\n当我们需要跳转一个服务器内部的页面时，一般我们都会使用相对路径，会以./或../开头\n\n- ./ 表示当前文件所在目录，可以省略不写\n\n- ../表示当前文件所在目录的上一级目录\n\n```html\n<a href=\"./test1.html\">超链接1</a><br>\n<a href=\"../test2.html\">超链接2</a><br>\n<a href=\"./test3/test3.html\">超链接3</a><br>\n<a href=\"../test4/test4.html\">超链接4</a>\n```\n\n#### 新建页面\n\ntarget属性，用来指定超链接打开的位置可选值：\n\n- _self在当前页面中打开超链接，默认值\n\n- _blank在新建页面中打开超链接\n\n```html\n<a href=\"./test1.html\">超链接1——默认</a><br>\n<a href=\"./test1.html\" target=\"_self\">超链接1——当前页面</a><br>\n<a href=\"./test1.html\" target=\"_blank\">超链接1——新建页面</a><br>\n```\n\n### 锚点跳转\n\n可以将`#`作为超链接的路径的占位符使用。\n\n`<a href=\"#\">`这是一个新的超链接`</a>`\n\n可以使用javascript:; 来作为href的属性，此时点击这个超链接什么也不会发生\n\n`<a href=\"javascript:;\">`这是一个新的超链接`</a>`\n\n可以直接将超链接的`href`属性设置为`#`，这样点击超链接以后页面不会发生跳转，而是转到当前页面的顶部的位置\n\n可以跳转到页面的指定位置（锚点），只需将`href`属性设置`#目标元素的id属性值`（唯一不重复）\n\nid属性（唯一不重复的）\n\n- 每一个标签都可以添加一个id属性\n- id属性就是元素的唯一标识，同一个页面不能出现重复的id属性\n\n### 图片\n\n图片标签用于向当前页面中引入一个外部图片\n\nimg标签是一个自结束标签，这种元素属于替换元素（块和行内元素之间，具有两种元素的特点）\n\n属性:\n\n- src：属性指定的是外部图片的路径（路径规则和超链接是一样的）\n- alt：图片的描述，这个描述默认情况下不会显示，有些浏览器会在图片无法加载时显示，搜索引擎会根据alt中的内容来识别图片\n- width：图片的宽度（单位是像素）\n- height ：图片的高度（单位是像素）[宽度和高度中如果只修改了一个，则另一个会等比例缩放]\n\n图片的格式：\n\njpeg(jpg)\n\n- 支持的颜色比较丰富\n- 不支持透明效果\n- 不支持动图\n- 一般用来显示照片\n\ngif\n\n- 支持的颜色比较单一\n- 支持简单透明\n- 支持动图\n\npng\n\n- 支持的颜色丰富\n- 支持复杂透明\n- 不支持动图\n- 专为网页而生\n\nwebp\n\n- 这种格式是谷歌新推出的专门用来表示网页中的图片的一种格式\n\n- 具备其他图片格式的所有优点，而且文件还特别的小\n- 缺点：兼容性不好\n\nbase64\n\n- 将图片使用base64编码，这样可以将图片转换为字符，通过字符的形式来引入图片\n  图片格式的选择\n\n- 图片效果一样的，选文件小的\n\n- 图片效果不一样的，选图片效果好的\n\n- 尽可能的兼顾和平衡图片效果和文件大小\n\n### 内联框架\n\n用于向当前页面中引入一个其他页面\n\n- src指定要引入的网页的路径\n- frameborder 指定内联框架的边框\n\n```html\n<iframe src=\"https://www.qq.com\" width=\"800\" height=\"600\" frameborder=\"0\"></iframe>\n```\n\n### 音视频\n\n#### 音频\n\naudio标签用来向页面中引入一个外部的音频文件\n\n音视频文件引入时，默认情况下不允许用户自己控制播放停止\n\n属性：\n\n- controls是否允许用户控制播放\n- autoplay音频文件是否自动播放\n  - 如果设置了autoplay，则音乐在打开页面时会自动播放\n    但是目前来讲大部分浏览器都不会自动对音乐进行播放\n\n- loop音乐是否循环播放\n\n```<audio src=\"./source/audio.mp3\" controls autoplay loop></audio>```\n\n#### SOURCE\n\n除了通过`src`属性来指定外部文件的路径以外，还可以通过`<source>`元素来指定文件的路径\n\n```html\n    对不起，您的浏览器不支持播放音频！请升级浏览器！\n\t<source src=\"./source/audio.mp3\">\n\t<source src=\"./source/audio.ogg\">\n</audio>```\n```\n\n用source可以显示文字提示不支持\n\n多个可以更严谨防止浏览器不支持一个格式\n\n``````html\n<embed src=\"./source/audio.mp3\" type=\"audio/mp3\" >\n``````\n\nembed和那句话任选其一就行了 它能兼容所有【非常流氓！！！\n\n#### 视频\n\n使用`video`标签来向网页中引入一个视频，使用方式和`audio`基本上是一样的\n\n```html\n<video controls>\n    <source src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm\" type=\"video/webm\">\n    <source src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4\" type=\"video/mp4\">\n    <embed src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4\" type=\"video/mp4\">\n</video>\n```\n\n通过iframe引入视频\n\n``````html\n<iframe frameborder=\"0\" src=\"http://\">\n``````\n\n# CSS\n\n## css语法与选择器\n\n### 简介\n\n使用css来修改元素的样式\n\n- 内联样式，行内样式 \n\n  - 在标签内部通过`Style`属性来设置元素的样式\n- `<p style=\"color:\">内联样式（行内样式）</p>`\n\n问题：使用内联样式，样式只能对一个标签生效。如果希望影响到多个元素，必须在每一个元素中都复制一遍；并且当样式发生变化时，我们必须要一个一个的修改，非常的不方便。（注意：开发时绝对不要使用内联样式）\n\n- 内部样式表\n  - 将样式编写到`head`中的`style`标签里然后通过css的选择器来选中元素并为其设置各种样式可以同时为多个标签设置样式，并且修改时只需要修改一处即可。内部样式表更加方便对样式进行复用\n\n```html\n<style>\np{\n    color:green; \n    font-size:50px;\n}\n</style>\n```\n\n问题：我们的内部样式表只能对一个网页起作用，它里边的样式不能跨页面进行复用\n\n- 外部样式表\n  - 可以将css样式编写到一个外部的CSS文件中，然后通过`link`标签来引入外部的CSS文件\n\n```html\n<link rel=\"stylesheet\" href=\"./style.css\">\n```\n\n外部样式表需要通过`link`标签进行引入，意味着只要想使用这些样式的网页都可以对其进行引用使样式，可以在不同页面之间进行复用\n\n将样式编写到外部的CSS文件中，可以使用到浏览器的缓存机制，从而加快网页的加载速度，提高用户的体验。\n\n### CSS基本语法\n\n#### 注释\n\n- css中的注释\n  - 只能使用`/*`和`*/`包裹。即不管是单行注释，还是多行注释，都是以`/*`开头，以`*/`结尾\n\n- html中的注释\n  - 只能使用`<!--`和`-->`包裹。即不管是单行注释，还是多行注释，都是以`<!--`开头，以`-->`结尾\n\n- JS注释\n  - 单行注释使用`//`。多行注释使用`/*`和`*/`包裹，以`<!--`开头，以`-->`结尾\n\n#### 基本语法\n\n*选择器 声明块*\n\n- 选择器：\n\n通过选择器可以选中页面中的指定元素\n\n比如p的作用就是选中页面中所有的p元素声明块\n\n- 声明块：\n\n通过声明块来指定要为元素设置的样式\n\n声明块由一个一个的声明组成，声明是一个名值对结构\n\n一个样式名对应一个样式值，名和值之间以:连接，以;结尾\n\n```css\nh1{\n    color: green;\n}\n```\n\n### CSS选择器\n\n#### 通配选择器\n\n- 作用：选中页面中的所有元素\n- 语法：`*`\n- 例子：`*{}`\n\n```css\n*{\n    color: red;\n}\n```\n\n#### 元素选择器\n\n也叫类型选择器、标签选择器\n\n- 作用：根据标签名来选中指定的元素\n- 语法：`elementname{}`\n- 例子：`p{}` `h1{}` `div{}`\n\n```css\np{\n    color: red; \n}\n\nh1{\n    color: green;\n}\n```\n\n#### ID选择器\n\n作用：根据元素的id属性值选中一个元素\n\n语法：#id属性值{}\n\n例子：#box{} #red{}\n\n```css\n#red{\n\tcolor:red;\n}\n```\n\n#### 类选择器\n\n- 作用：根据元素的class属性值选中一组元素\n- 语法：`.classname`\n- 例子：`.blue{}`\n\n```css\n.blue{\n    color: blue;\n}\n.size{\n    font-size: 20px;\n}\n```\n\nclass`是一个标签的属性，它和`id`类似，不同的是`class\n\n- 可以重复使用，\n- 可以通过`class`属性来为元素分组，\n- 可以同时为一个元素指定多个`class`属性\n\n```css\n<p class=\"blue size\"> 类选择器（Class selector）</p>\n```\n\n#### 属性选择器\n\n作用：根据元素的属性值选中一组元素\n语法1：[属性名] 选择含有指定属性的元素\n语法2：[属性名=属性值] 选择含有指定属性和属性值的元素\n语法3：[属性名^=属性值] 选择属性值以指定值开头的元素\n语法4：[属性名$=属性值] 选择属性值以指定值结尾的元素\n语法5：[属性名*=属性值] 选择属性值中含有某值的元素\n例子：`p[title]{}` `p[title=e]{}` `p[title^=e]{}` `p[title$=e]{}` `p[title*=e]{}`\n\n### 复合选择器\n\n#### 交集选择器\n\n- 作用：选中同时复合多个条件的元素\n- 语法：`选择器1选择器2选择器3选择器n{}`\n- *注意点：交集选择器中如果有元素选择器，必须使用元素选择器开头*\n\n```css\ndiv.red{\n    font-size: 30px;\n}\n\n.a.b.c{\n    color: blue;\n}\n\n```\n\n#### 并集选择器\n\n- 作用：同时选择多个选择器对应的元素\n- 语法：`选择器1,选择器2,选择器3,选择器n{}`\n- 例子：`#b1,.p1,h1,span,div.red{}`\n\n```css\nh1,span{\n    color: green;\n}\n```\n\n### 关系选择器\n\n- 父元素：直接包含子元素的元素叫做父元素\n- 子元素：直接被父元素包含的元素是子元素\n- 祖先元素：直接或间接包含后代元素的元素叫做祖先元素；一个元素的父元素也是它的祖先元素\n- 后代元素：直接或间接被祖先元素包含的元素叫做后代元素；子元素也是后代元素\n- 兄弟元素：拥有相同父元素的元素是兄弟元素\n\n#### 子元素选择器\n\n- 作用：选中指定父元素的指定子元素\n- 语法：`父元素 > 子元素`\n- 例子：`A > B`\n\n```css\ndiv.box > p > span{\n    color: orange;\n}\n```\n\n#### 后代元素选择器   \n\n- 作用：选中指定元素内的指定后代元素\n- 语法：`祖先 后代`\n- 例子：`A B`\n\n```css\ndiv span{\n    color: skyblue;\n}\n```\n\n#### 兄弟元素选择器\n\n- 作用：选择下一个兄弟\n- 语法：`前一个 + 下一个` `前一个 + 下一组`\n- 例子1：`A1 + A2`（选择下一个兄弟）\n- 例子2： `A1 ~ An`（选择下边所有的兄弟）\n\n```css\np + span{\n    color: red;\n}\n\np ~ span{\n    color: red;\n}\n```\n\n### 伪类选择器\n\n伪类（不存在的类，特殊的类）\n\n伪类用来描述一个元素的特殊状态，比如：第一个子元素、被点击的元素、鼠标移入的元素.…\n\n伪类一般情况下都是使用`:`开头\n\n- `:first-child` 第一个子元素\n- `:last-child` 最后一个子元素\n- `:nth-child()` 选中第n个子元素\n  - n：第n个，n的范围0到正无穷\n  - 2n或even：选中偶数位的元素\n  - 2n+1或odd：选中奇数位的元素\n\n以上这些伪类都是根据所有的子元素进行排序的\n\n- `:first-of-type` 同类型中的第一个子元素\n- `:last-of-type` 同类型中的最后一个子元素\n- `:nth-of-type()` 选中同类型中的第n个子元素\n\n这几个伪类的功能和上述的类似，不同点是他们是在同类型元素中进行排序的\n\n- `:not()`否定伪类，将符合条件的元素从选择器中去除\n\n```css\n/* ul下所有li，黑色 */\nul>li {\n    color: black;\n}\n\n/* ul下第偶数个li，黄色 */\nul>li:nth-child(2n) {\n    color: yellow;\n}\n\n/* ul下第奇数个li，绿色 */\nul>li:nth-child(odd) {\n    color: green;\n}\n\n/* ul下第一个li，红色 */\nul>li:first-child {\n    color: red;\n}\n\n/* ul下最后一个li，黄色 */\nul>li:last-child {\n    color: orange;\n}\n```\n\n![image-20230111203813718](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301112038812.png)\n\n```css\nul > li:not(:nth-of-type(3)){\n    color:yellowgreen;\n}\n/*not()就是取消这一行的颜色*/\n```\n\n- `:link` 未访问的链接(正常的链接)\n- `:visited`已访问的链接\n  - 由于隐私的原因，所以`visited`这个伪类只能修改链接的颜色\n- `:hover` 鼠标悬停的链接（用来表示鼠标移入的状态）\n- `:active` 鼠标点击的链接（用来表示鼠标点击）\n\n```css\n/* unvisited link */\na:link {\n  color: red;\n}\n\n/* visited link */\na:visited {\n  color: yellow;\n}\n\n/* mouse over link */\na:hover {\n  color: green;\n}\n\n/* selected link */\na:active {\n  color: blue;\n}\n```\n\n### 伪元素选择器\n\n伪元素，表示页面中一些特殊的并不真实的存在的元素（特殊的位置）\n\n伪元素使用`::`开头\n\n- `::first-letter` 表示第一个字母\n- `::first-line` 表示第一行\n- `::selection` 表示选中的内容\n- `::before` 元素的开始\n- `::after` 元素的最后\n- `::before`和`::after` 必须结合`content`属性来使用\n\n``` css\n/* 段落首字母设置大小为30px */\np::first-letter{\n    font-size: 30px;\n}\n\n/* 段落第一行设置为黄色背景 */\np::first-line{\n    background-color: yellow;\n}\n\n/* 段落选中的部分变绿色 */\np::selection{\n    background-color: green；\n}\n\n/* div前加上内容 */\ndiv::before{\n    content: 'BEFORE';\n    color: red;\n}\n\n/* div后加上内容 */\ndiv::after{\n    content: 'AFTER';\n    color: blue;\n}\n\n```\n\n## 样式继承及颜色长度单位介绍\n\n### 继承\n\n样式的继承，我们为一个元素设置的样式同时也会应用到它的后代元素上\n\n继承是发生在祖先后后代之间的\n\n继承的设计是为了方便我们的开发，利用继承我们可以将一些通用的样式统一设置到共同的祖先元素上，\n\n这样只需设置一次即可让所有的元素都具有该样式\n\n注意:并不是所有的样式都会被继承：\n\n比如背景相关的，布局相关等的这些样式都不会被继承。\n\n- 样式的冲突\n\n​\t-当我们通过不同的选择器，选中相同的元素，并且为相同的样式设置不同的值时，此时就发生了样式的冲突。\n\n发生样式冲突时，应用哪个样式由选择器的权重（优先级）决定\n\n- 选择器的权重：\n\n  内联样式\t\t1,0,0,0\n\n  id选择器\t\t0,1,0,0\n\n  类和伪类选择器\t\t0,0,1,0\n\n  元素选择器\t\t0,0,0,1\n\n  通配选择器\t\t0,0,0,0\n\n  继承的样式\t\t没有优先级\n\n比较优先级时，需要将所有的选择器的优先级进行相加计算，最后优先级越高，则越优先显示(分组选择器是单独计算的\n\n选择器的累加不会超过其最大的数量级，类选择器在高也不会超过id选择器\n\n如果优先级计算后相同,此时则优先使用靠下的样式\n\n可以在某一个样式的后边添加`!important`，则此时该样式会获取到最高的优先级，甚至超过内联样式，\n\n*注意：在开发中一定要慎用！*\n\n### 长度单位\n\n长度单位:\n\n- 像素\n\n​\t- 屏幕（显示器）实际上是由一个一个的小点点构成的\n\n​\t- 不同屏幕的像素大小是不同的，像素越小的屏幕显示的效果越清晰-所以同样的200px在不同的设备下显示效果不一样\n\n- 百分比\n\n​\t-也可以将属性值设置为相对于其父元素属性的百分比\n\n​\t-设置百分比可以使子元素跟随父元素的改变而改变\n\nem\n\nem是相对于元素的字体大小来计算的，`1em = <self>.font-size`，也就说em值会根据元素本身的字体大小的改变而改变\n\nrem\n\nrem是相对于根元素的字体大小来计算，`1em = <root>.font-size`，也就说em值会根据根元素的字体大小的改变而改变\n\n(em改变字体大小就能改变内容大小\n\n```css\n .box4 {\n        font-size: 20px;\n        width: 10rem; /*当时用rem时，不管怎么改本元素的font-size都是不会变的。需要定义root元素的font-size才可以 */\n        height: 10rem;\n        background-color: red;\n    }\n```\n\n### 颜色单位\n\n在css中可以直接使用颜色名来设置各种颜色\n\n比如:red、orange、yellow、 blue、green ... 但是在css中直接使用颜色名是非常的不方便\n\n- RGB值:\n\nRGB通过三种颜色的不同浓度来调配出不同的颜色\n\nR red,G green , B blue\n\n每一种颜色的范围在0 - 255 (0% - 100%)之间\n\n语法:RGB(红色,绿色,蓝色)\n\n- RGBA：\n\n就是在rgb的基础上增加了一个a表示不透明度\n\n需要四个值，前三个和rgb一样，第四个表示不透明度\n\n1表示完全不透明 0表示完全透明 .5半透明\n\n- 十六进制的RGB值:\n\n语法:#红色绿色蓝色\n\n颜色浓度通过00-ff\n\n如果颜色两位两位重复可以进行简写\n\n#aabbcc --> #abc\n\n- HSL值 HSLA值\n\nH 色相(0 - 360)\n\nS 饱和度，颜色的浓度 0% - 100%\n\nL 亮度，颜色的亮度 0% -100%\n\n## 盒模型\n\n### 文档流\n\n网页是一个多层的结构，一层摞着一层\n\n通过css可以分别为每一层来设置样式\n\n作为用户来讲只能看到最顶上一层\n\n这些层中，最底下的一层称为文档流，文档流是网页的基础\n\n​\t\t我们所创建的元素默认都是在文档流中进行排列\n\n对于我们来元素主要有两个状态在文档流中\n\n- 不在文档流中（脱离文档流）\n\n- 元素在文档流中有什么特点:\n\n  - 块元素\n\n    块元素会在页面中独占一行(自上向下垂直排列）\n\n    默认宽度是父元素的全部（会把父元素撑满）\n\n    默认高度是被内容撑开（子元素）\n\n  - 行内克素\n\n    行内元素不会独占页面的一行，只占自身的大小\n\n    行内元素在页面中左向右水平排列（书写习惯一致）\n\n    如果一行之中不能容纳下所有的行内元素，则元素会换到第二行继续自左向右排列（书写习惯一致）\n\n    行内元素的默认宽度和高度都是被内容撑开\n\n### 盒模型\n\n![image-20230113213021324](https://cdn.jsdelivr.net/gh/overplain/pico/img/202301141442677.png)\n\n- 盒模型、盒子模型、框模型\n\n  - css将页面中所有元素都设置为了一个矩形的盒子\n\n  - 讲元素设置为矩形的盒子后，对页面的布局就变成将不同的盒子放到不同的位置\n  - *盒子可见框的大小，由内容区、内边距和边框共同决定，所以在计算盒子大小时，需要将这三个区域加到一起计算*\n\n每一个盒子由以下几个部分组成：\n\n**可见框由内容区、边框、内边距组成**\n\n#### 内容区（content）\n\n- 元素中的所有的子元素和文本内容都在内容区中\n- 内容去的大小由width和height两个属性来设置\n- **width设置内容区的宽度**\n- **height设置内容区的高度**\n\n```html\n.box1{\n    width: 200px; \n    height: 200px; \n    background-color: #bfa;\n}\n```\n\n#### 内边距（padding）\n\n- 内边距，也叫填充，是内容区和边框之间的空间\n\n  - `padding-top` 上内边距\n  - `padding-right` 右内边距\n  - `padding-bottom`下内边距\n  - `padding-left` 左内边距\n- padding内边距的简写属性，可以同时指定四个方向的内边距，规则和边框中属性值设置一样\n- **内边距的设置会影响到盒子的大小，背景颜色会延伸到内边距上**\n- **文字、子元素只会出现在内容区内不会出现在内边距上**\n\n```css\n<style>\n    .outer{\n        width: 200px;\n        height: 200px;\n        border: 10px orange solid;\n        padding-right: 100px;\n        padding-bottom: 100px;\n        padding-left: 100px;\n    }\n\n    .inner {\n        width: 200px;\n        height: 200px;\n        background-color: greenyellow;\n    }\n</style>\n\n<div class=\"outer\">\n    <div class=\"inner\"></div>\n</div>\n\n```\n\n\n\n#### 边框（border）\n\n- 边框属于盒子边缘，边框里边属于盒子内部，出了边框都是盒子的外部\n- **边框也会影响盒子的大小**\n- 设置边框至少需要三个样式\n- **border-width 边框的宽度：默认3px**(可以省略不写)\n  border-top-width 上边框的宽度\n  border-right-width 右边框的宽度\n  border-bottom-width 下边框的宽度\n  border-left-width 左边框的宽度\n- **border-color 边框的颜色：默认使用color的颜色值**\n  border-top-color 上边框的颜色\n  border-right-color 右边框的颜色\n  border-bottom-color 下边框的颜色\n  border-left-color 左边框的颜色\n- **border-style 边框的样式：没有默认值，必须指定**\n  border-top-style 上边框的样式\n  border-right-style 右边框的样式\n  border-bottom-style 下边框的样式\n  border-left-style 左边框的样式\n\n```css\n.box1{\n    border-width: 10px;\n    border-color: red;\n    /* \n    \tsolid  实线 \n    \tdotted 点状虚线 \n    \tdashed 虚线 \n    \tdouble 双线 \n    */\n    border-style: solid;\n}\n```\n\n- 不论是`border-width` 、 `border-color` 、`border-style` 还是其衍生出来的属性写法，都可以指定每个方向的边框情况\n\n  设定几个值就决定了对应方向的宽度、颜色或样式\n\n  - 四个值：`上 右 下 左`\n  - 三个值：`上 左右 下`\n  - 两个值：`上下 左右`\n  - 一个值：`上下左右`\n  - 【顺时针方向设置】\n\n- border简写属性：通过该属性可以同时设置边框所有的相关样式，并且没有顺序要求\n\n  - `border-top` 上边框的宽度、颜色和样式\n  - `border-right` 右边框的宽度、颜色和样式\n  - `border-bottom` 下边框的宽度、颜色和样式\n  - `border-left` 左边框的宽度、颜色和样式\n  - 可以不要哪边写个none就行了\n\n```css\n.box1{ \n\tborder: 10px red solid;\n}\n\n```\n\n#### 外边距（margin）\n\n外边距，也叫空白边，位于盒子的最外围，是添加在边框外周围的空间。空白边使盒子之间不会紧凑地连接在一起，是CSS 布局的一个重要手段\n\n**外边距不会影响盒子可见框的大小，但是外边距会影响盒子的位置和占用空间**\n\nmargin外边距的简写属性，可以同时指定四个方向的内边距，规则和边框中属性值设置一样\n\nmargin会影响到盒子实际占用空间\n\n一共有四个方向的外边距：\n\n- ` margin-top` :上外边距\n  - 设置正值，元素自身向下移动\n  - 设置负值，元素自身向上移动\n-  ` margin-right`:右外边距\n  - 设置正值，其右边的元素向右移动\n  - 设置负值，其右边的元素向左移动\n  - 上述说法并不准确，对于块元素，设置`margin-right`不会产生任何效果\n\n-  `margin-bottom`:下外边距\n  - 设置正值，其下边的元素向下移动\n  - 设置负值，其下边的元素向上移动\n  - 上述说法并不准确，对于块元素，会有垂直方向上的边距重叠问题\n- `  margin-left`:左外边距\n  - 设置正值，元素自身向右移动\n  - 设置负值，元素自身向左移动\n\n元素在页面中是按照自左向右的顺序排列的，所以默认情况下\n\n- 如果我们设置的左和上外边距则会移动元素自身\n- 而设置下和右外边距会移动其他元素\n\n```html\n.box1 {\n    width: 200px;\n    height: 200px;\n    background-color: #bfa;\n    border: 10px orange solid;\n    margin-bottom: 100px;\n\n}\n\n.box2 {\n    width: 200px;\n    height: 200px;\n    background-color: #bfa;\n    border: 10px red solid;\n    margin-top: 100px;\n}\n\n```\n\n### 水平方向布局\n\n元素在其父元素中水平方向的位置由以下几个属性共同决定，一个元素在其父元素中，水平布局**必须要满足**以下的等式\n\n```\nmargin-left + border-left + padding-left + width + padding-right + border-right + margin-right = 其父元素的宽度\n```\n\n以上等式必须满足，如果相加结果使等式不成立，则称为**过渡约束**\n\n- 如果这七个值中没有`auto`的情况，则浏览器会自动调整`margin-right`值以使等式满足\n\n  `100 + 0 + 0 + 200 + 0 + 0 + 0 = 800` ==> `100 + 0 + 0 + 200 + 0 + 0 + 500 = 800`\n\n- 如果这七个值中有`auto`的情况，则会自动调整`auto`值以使等式成立\n- 这七个值中有三个值可以设置为`auto` ：`width`、`margin-left`、`maring-right`\n\n1/如果某个值为auto，则会自动调整`auto`的那个值以使等式成立\n\n2/如果宽度为`auto`，则宽度会调整到最大，其他`auto`的外边距会自动设置为0\n\n3/如果外边距都为`auto`，则`auto`的外边距会自动均分以使等式成立\n\n【所以我们进程利用这个特点来使一个元素在其都元素中水平居中】\n\n### 垂直方向布局\n\n默认情况下父元素的高度被内容撑开\n\n#### 元素溢出\n\n子元素是在父元素的内容区中排列的，如果子元素的大小超过了父元素，则子元素会从父元素中溢出\n\n使用`overflow`/`overflow-x`/`overflow-y`属性来设置父元素如何处理溢出的子元素\n\n可选值：`visible`/`hidden`/`scroll`/`auto`\n\n`visible` 溢出内容会在父元素外部位置显示，默认值\n\n`hidden` 溢出内容会被裁剪，不会显示\n\n`scroll` 生成两个滚动条，通过滚动条来查看完整的内容\n\n`auto` 根据需要生成滚动条\n\n```html\n<style>\n    .box1 {\n        width: 200px;\n        height: 200px;\n        background-color: #bfa;\n        border: 10px orange solid;\n        overflow: visible; /* 默认值 */\n    }\n</style>\n<div class=\"box1\">\n    Lorem ipsum dolor sit amet consectetur adipisicing elit. Asperiores aspernatur illo inventore\n    deleniti laudantium quaerat excepturi sed quidem tempore? Eaque, cumque porro. Fuga quam error cupiditate quasi\n    eveniet in numquam!\n</div>\n\n```\n\n#### 边距折叠\n\n垂直外边距的重叠（折叠）：相邻的垂直方向外边距会发生重叠现象\n\n#### 兄弟元素\n\n兄弟元素间的相邻，垂直外边距会取两者之间的较大值（两者都是正值）\n\n特殊情况：\n\n- 如果相邻的外边距一正一负，则取两者的和\n\n- 如果相邻的外边距都是负值，则取两者中绝对值较大的\n\n- ```html\n  .box1,.box2{ \n      width:200px; \n      height:200px; \n      font-size:100px;\n  }\n  \n  .boxl{\n      background-color: #bfa;\n      /*设置一个下外边距*/\n      margin-bottom: 100px;\n  }\n  \n  .box2{\n      background-color: orange;\n      /*设置一个上外边距*/\n      margin-top: 100px;\n  }\n  ```\n\n兄弟元素之间的外边距的重叠，对于开发是有利的，所以我们不需要进行处理\n","slug":"html css笔记","published":1,"updated":"2023-03-09T05:37:11.424Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf0opdj20006hkty1j8w697b","content":"<h1 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h1><h2 id=\"html基本结构\"><a href=\"#html基本结构\" class=\"headerlink\" title=\"html基本结构\"></a>html基本结构</h2><blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 文档声明，声明当前网页的版本 --&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"keyword\">html</span>&gt;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- html的根标签（元素），网页中的所有内容都要写根元素的里边 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- head是网页的头部，head中的内容不会在网页中直接出现，主要用来帮助浏览器或搜索引擎来解析网页--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- meta标签用来设置网页的元数据，这里meta用来设置网页的字符集，避免乱码问题 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- title中的内容会显示在浏览器的标题栏，搜索引擎会主要根据title中的内容来判断网页的主要内容 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>网页的标题<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- body是htm1的子元素，表示网页的主体，网页中所有的可见内容都应该写在body里 --&gt;</span><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- h1网页的一级标题 --&gt;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>网页的大标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"字符实体与语义标签\"><a href=\"#字符实体与语义标签\" class=\"headerlink\" title=\"字符实体与语义标签\"></a>字符实体与语义标签</h2><h3 id=\"字符实体\"><a href=\"#字符实体\" class=\"headerlink\" title=\"字符实体\"></a>字符实体</h3><p>有些时候，在HTML中不能直接书写一些特殊符号，如：  </p>\n<p>多个连续的空格（在网页中编写的多个空格默认情况会自动被浏览器解析为一个空格）  </p>\n<p>比如字母两侧的大于小于号（可能会被认为是标签并解析）  </p>\n<p>如果我们需要在网页中书写这些特殊的符号，则需要使用html中的实体（转义字符）实体的语法：&amp;实体的名字;，如：  </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061551679.png\" alt=\"image-20230106155112829\"></p>\n<ul>\n<li><p>meta主要用于设置网页中的一些元数据，元数据并不是给用户看的</p>\n</li>\n<li><p>charset ：指定网页的字符集</p>\n</li>\n<li><p>name ：指定的数据的名称</p>\n</li>\n<li><p>keywords：表示网站的关键字，可以同时指定多个关键字，关键字间使用,隔开</p>\n</li>\n<li><p>description：表示网站的描述信息</p>\n</li>\n<li><p>content ：指定的数据的内容，会作为搜索结果的超链接上的文字显示</p>\n</li>\n<li><p>title标签的内容会作为搜索结果的超链接上的文字显示</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"语义标签\"><a href=\"#语义标签\" class=\"headerlink\" title=\"语义标签\"></a>语义标签</h3><h4 id=\"块元素\"><a href=\"#块元素\" class=\"headerlink\" title=\"块元素\"></a>块元素</h4><blockquote>\n<p>标题    一共有六级标题</p>\n</blockquote>\n<p>从h1 ~ h6重要性递减，h1最重要，h6最不重要</p>\n<p>h1在网页中的重要性仅次于title标签</p>\n<p>一般情况下一个页面中只会有一个h1</p>\n<p>一般情况下标题标签只会使用到h1 ～ h3，h4 ～ h6很少用      </p>\n<ul>\n<li><code>&lt;hgroup&gt;    标题组    多层次的标题。它将一组&lt;h1&gt; ～ &lt;h6&gt;元素分组 </code></li>\n<li><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061551867.png\" alt=\"image-20230106155131518\"></li>\n</ul>\n<p>行内元素与块元素：</p>\n<p>块元素（block element）</p>\n<ul>\n<li>在网页中一般通过块元素来对页面进行布局</li>\n</ul>\n<p>行内元素（inline element）</p>\n<ul>\n<li><p> 行内元素主要用来包裹文字</p>\n</li>\n<li><p>一般情况下会在块元素中放行内元素，而不会在行内元素中放块元素</p>\n</li>\n<li><p>如<p>元素中不能放任何的块元素，不过块元素中基本上什么都能放</p>\n</li>\n</ul>\n<h3 id=\"布局标签\"><a href=\"#布局标签\" class=\"headerlink\" title=\"布局标签\"></a>布局标签</h3><p>F12看源码</p>\n<p>第一栏elements</p>\n<p>header表示网页的头部（页眉）</p>\n<p>main表示网页的主体部分（一个页面中只会有一个main）</p>\n<p>footer表示网页的底部（页脚）</p>\n<p>nav表示网页中的导航</p>\n<p>aside和主体相关的其他内容（侧边栏）</p>\n<p>article表示一个独立的文章</p>\n<p>section表示一个独立的区块，上边的标签都不能表示时使用section</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061551759.png\" alt=\"image-20230106155147504\"></p>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><p>在html中可以创建列表，html列表一共有三种：</p>\n<ul>\n<li>有序列表，使用ol标签来创建有序列表，使用li表示列表项</li>\n</ul>\n <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Mix flour, baking powder, sugar, and salt.<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>In another bowl, mix eggs, milk, and oil.<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Stir both mixtures together.<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Fill muffin tray 3/4 full.<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Bake for 20 minutes.<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span> </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061552866.png\" alt=\"image-20230106155206425\"></p>\n<ul>\n<li>无序列表，使用<code>ul</code>标签来创建无序列表，使用<code>li</code>表示列表项</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Milk<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Cheese</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Blue cheese</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Sweet blue cheese<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Sour blue cheese<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Feta<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>列表元素之间是可以互相嵌套的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061552180.png\" alt=\"image-20230106155218093\"></p>\n<ul>\n<li>定义列表，使用dl标签来创建定义列表，使用dt表示定义的内容，使用dd来对内容进行解释说明</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>Beast of Bodmin<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>A large feline inhabiting Bodmin Moor.<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>Morgawr<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>A sea serpent.<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>Owlman<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>A giant owl-like creature.<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h3><p>超链接可以让我们从一个页面跳转到其他页面，或者是当前页面的其他的位置</p>\n<p>使用a标签来定义超链接，href属性指定跳转的目标路径，值可以是一个外部网站的地址，也可以写一个内部页面的地址</p>\n<p>超链接是也是一个行内元素，在a标签中可以嵌套除它自身外的任何元素</p>\n<h4 id=\"外部地址\"><a href=\"#外部地址\" class=\"headerlink\" title=\"外部地址\"></a>外部地址</h4><ul>\n<li>Linking to an absolute URL：链接一个绝对路径</li>\n<li>Linking to an email address：链接一个email地址</li>\n<li>Linking to telephone numbers：链接电话号码</li>\n<li>Using the download attribute to save a <code>&lt;canvas&gt;</code> as a PNG：下载图片</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://www.baidu.com&quot;</span>&gt;</span>Website<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;mailto:example@outlook.com&quot;</span>&gt;</span>Email<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;tel:+123456789&quot;</span>&gt;</span>Phone<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"内部地址\"><a href=\"#内部地址\" class=\"headerlink\" title=\"内部地址\"></a>内部地址</h4><p>当我们需要跳转一个服务器内部的页面时，一般我们都会使用相对路径，会以./或../开头</p>\n<ul>\n<li><p>./ 表示当前文件所在目录，可以省略不写</p>\n</li>\n<li><p>../表示当前文件所在目录的上一级目录</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./test1.html&quot;</span>&gt;</span>超链接1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;../test2.html&quot;</span>&gt;</span>超链接2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./test3/test3.html&quot;</span>&gt;</span>超链接3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;../test4/test4.html&quot;</span>&gt;</span>超链接4<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"新建页面\"><a href=\"#新建页面\" class=\"headerlink\" title=\"新建页面\"></a>新建页面</h4><p>target属性，用来指定超链接打开的位置可选值：</p>\n<ul>\n<li><p>_self在当前页面中打开超链接，默认值</p>\n</li>\n<li><p>_blank在新建页面中打开超链接</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./test1.html&quot;</span>&gt;</span>超链接1——默认<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./test1.html&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_self&quot;</span>&gt;</span>超链接1——当前页面<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./test1.html&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>超链接1——新建页面<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"锚点跳转\"><a href=\"#锚点跳转\" class=\"headerlink\" title=\"锚点跳转\"></a>锚点跳转</h3><p>可以将<code>#</code>作为超链接的路径的占位符使用。</p>\n<p><code>&lt;a href=&quot;#&quot;&gt;</code>这是一个新的超链接<code>&lt;/a&gt;</code></p>\n<p>可以使用javascript:; 来作为href的属性，此时点击这个超链接什么也不会发生</p>\n<p><code>&lt;a href=&quot;javascript:;&quot;&gt;</code>这是一个新的超链接<code>&lt;/a&gt;</code></p>\n<p>可以直接将超链接的<code>href</code>属性设置为<code>#</code>，这样点击超链接以后页面不会发生跳转，而是转到当前页面的顶部的位置</p>\n<p>可以跳转到页面的指定位置（锚点），只需将<code>href</code>属性设置<code>#目标元素的id属性值</code>（唯一不重复）</p>\n<p>id属性（唯一不重复的）</p>\n<ul>\n<li>每一个标签都可以添加一个id属性</li>\n<li>id属性就是元素的唯一标识，同一个页面不能出现重复的id属性</li>\n</ul>\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><p>图片标签用于向当前页面中引入一个外部图片</p>\n<p>img标签是一个自结束标签，这种元素属于替换元素（块和行内元素之间，具有两种元素的特点）</p>\n<p>属性:</p>\n<ul>\n<li>src：属性指定的是外部图片的路径（路径规则和超链接是一样的）</li>\n<li>alt：图片的描述，这个描述默认情况下不会显示，有些浏览器会在图片无法加载时显示，搜索引擎会根据alt中的内容来识别图片</li>\n<li>width：图片的宽度（单位是像素）</li>\n<li>height ：图片的高度（单位是像素）[宽度和高度中如果只修改了一个，则另一个会等比例缩放]</li>\n</ul>\n<p>图片的格式：</p>\n<p>jpeg(jpg)</p>\n<ul>\n<li>支持的颜色比较丰富</li>\n<li>不支持透明效果</li>\n<li>不支持动图</li>\n<li>一般用来显示照片</li>\n</ul>\n<p>gif</p>\n<ul>\n<li>支持的颜色比较单一</li>\n<li>支持简单透明</li>\n<li>支持动图</li>\n</ul>\n<p>png</p>\n<ul>\n<li>支持的颜色丰富</li>\n<li>支持复杂透明</li>\n<li>不支持动图</li>\n<li>专为网页而生</li>\n</ul>\n<p>webp</p>\n<ul>\n<li><p>这种格式是谷歌新推出的专门用来表示网页中的图片的一种格式</p>\n</li>\n<li><p>具备其他图片格式的所有优点，而且文件还特别的小</p>\n</li>\n<li><p>缺点：兼容性不好</p>\n</li>\n</ul>\n<p>base64</p>\n<ul>\n<li><p>将图片使用base64编码，这样可以将图片转换为字符，通过字符的形式来引入图片<br>图片格式的选择</p>\n</li>\n<li><p>图片效果一样的，选文件小的</p>\n</li>\n<li><p>图片效果不一样的，选图片效果好的</p>\n</li>\n<li><p>尽可能的兼顾和平衡图片效果和文件大小</p>\n</li>\n</ul>\n<h3 id=\"内联框架\"><a href=\"#内联框架\" class=\"headerlink\" title=\"内联框架\"></a>内联框架</h3><p>用于向当前页面中引入一个其他页面</p>\n<ul>\n<li>src指定要引入的网页的路径</li>\n<li>frameborder 指定内联框架的边框</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://www.qq.com&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;800&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;600&quot;</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"音视频\"><a href=\"#音视频\" class=\"headerlink\" title=\"音视频\"></a>音视频</h3><h4 id=\"音频\"><a href=\"#音频\" class=\"headerlink\" title=\"音频\"></a>音频</h4><p>audio标签用来向页面中引入一个外部的音频文件</p>\n<p>音视频文件引入时，默认情况下不允许用户自己控制播放停止</p>\n<p>属性：</p>\n<ul>\n<li><p>controls是否允许用户控制播放</p>\n</li>\n<li><p>autoplay音频文件是否自动播放</p>\n<ul>\n<li>如果设置了autoplay，则音乐在打开页面时会自动播放<br>但是目前来讲大部分浏览器都不会自动对音乐进行播放</li>\n</ul>\n</li>\n<li><p>loop音乐是否循环播放</p>\n</li>\n</ul>\n<p><code>&lt;audio src=&quot;./source/audio.mp3&quot; controls autoplay loop&gt;&lt;/audio&gt;</code></p>\n<h4 id=\"SOURCE\"><a href=\"#SOURCE\" class=\"headerlink\" title=\"SOURCE\"></a>SOURCE</h4><p>除了通过<code>src</code>属性来指定外部文件的路径以外，还可以通过<code>&lt;source&gt;</code>元素来指定文件的路径</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    对不起，您的浏览器不支持播放音频！请升级浏览器！</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./source/audio.mp3&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./source/audio.ogg&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span>```</span><br></pre></td></tr></table></figure>\n\n<p>用source可以显示文字提示不支持</p>\n<p>多个可以更严谨防止浏览器不支持一个格式</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">embed</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./source/audio.mp3&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;audio/mp3&quot;</span> &gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>embed和那句话任选其一就行了 它能兼容所有【非常流氓！！！</p>\n<h4 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h4><p>使用<code>video</code>标签来向网页中引入一个视频，使用方式和<code>audio</code>基本上是一样的</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">controls</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;video/webm&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">embed</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>通过iframe引入视频</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h1><h2 id=\"css语法与选择器\"><a href=\"#css语法与选择器\" class=\"headerlink\" title=\"css语法与选择器\"></a>css语法与选择器</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>使用css来修改元素的样式</p>\n<ul>\n<li><p>内联样式，行内样式 </p>\n<ul>\n<li>在标签内部通过<code>Style</code>属性来设置元素的样式</li>\n</ul>\n</li>\n<li><p><code>&lt;p style=&quot;color:&quot;&gt;内联样式（行内样式）&lt;/p&gt;</code></p>\n</li>\n</ul>\n<p>问题：使用内联样式，样式只能对一个标签生效。如果希望影响到多个元素，必须在每一个元素中都复制一遍；并且当样式发生变化时，我们必须要一个一个的修改，非常的不方便。（注意：开发时绝对不要使用内联样式）</p>\n<ul>\n<li>内部样式表<ul>\n<li>将样式编写到<code>head</code>中的<code>style</code>标签里然后通过css的选择器来选中元素并为其设置各种样式可以同时为多个标签设置样式，并且修改时只需要修改一处即可。内部样式表更加方便对样式进行复用</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">p</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">color</span>:green; </span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">font-size</span>:<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>问题：我们的内部样式表只能对一个网页起作用，它里边的样式不能跨页面进行复用</p>\n<ul>\n<li>外部样式表<ul>\n<li>可以将css样式编写到一个外部的CSS文件中，然后通过<code>link</code>标签来引入外部的CSS文件</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./style.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>外部样式表需要通过<code>link</code>标签进行引入，意味着只要想使用这些样式的网页都可以对其进行引用使样式，可以在不同页面之间进行复用</p>\n<p>将样式编写到外部的CSS文件中，可以使用到浏览器的缓存机制，从而加快网页的加载速度，提高用户的体验。</p>\n<h3 id=\"CSS基本语法\"><a href=\"#CSS基本语法\" class=\"headerlink\" title=\"CSS基本语法\"></a>CSS基本语法</h3><h4 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h4><ul>\n<li><p>css中的注释</p>\n<ul>\n<li>只能使用<code>/*</code>和<code>*/</code>包裹。即不管是单行注释，还是多行注释，都是以<code>/*</code>开头，以<code>*/</code>结尾</li>\n</ul>\n</li>\n<li><p>html中的注释</p>\n<ul>\n<li>只能使用<code>&lt;!--</code>和<code>--&gt;</code>包裹。即不管是单行注释，还是多行注释，都是以<code>&lt;!--</code>开头，以<code>--&gt;</code>结尾</li>\n</ul>\n</li>\n<li><p>JS注释</p>\n<ul>\n<li>单行注释使用<code>//</code>。多行注释使用<code>/*</code>和<code>*/</code>包裹，以<code>&lt;!--</code>开头，以<code>--&gt;</code>结尾</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h4><p><em>选择器 声明块</em></p>\n<ul>\n<li>选择器：</li>\n</ul>\n<p>通过选择器可以选中页面中的指定元素</p>\n<p>比如p的作用就是选中页面中所有的p元素声明块</p>\n<ul>\n<li>声明块：</li>\n</ul>\n<p>通过声明块来指定要为元素设置的样式</p>\n<p>声明块由一个一个的声明组成，声明是一个名值对结构</p>\n<p>一个样式名对应一个样式值，名和值之间以:连接，以;结尾</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h1</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CSS选择器\"><a href=\"#CSS选择器\" class=\"headerlink\" title=\"CSS选择器\"></a>CSS选择器</h3><h4 id=\"通配选择器\"><a href=\"#通配选择器\" class=\"headerlink\" title=\"通配选择器\"></a>通配选择器</h4><ul>\n<li>作用：选中页面中的所有元素</li>\n<li>语法：<code>*</code></li>\n<li>例子：<code>*&#123;&#125;</code></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"元素选择器\"><a href=\"#元素选择器\" class=\"headerlink\" title=\"元素选择器\"></a>元素选择器</h4><p>也叫类型选择器、标签选择器</p>\n<ul>\n<li>作用：根据标签名来选中指定的元素</li>\n<li>语法：<code>elementname&#123;&#125;</code></li>\n<li>例子：<code>p&#123;&#125;</code> <code>h1&#123;&#125;</code> <code>div&#123;&#125;</code></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ID选择器\"><a href=\"#ID选择器\" class=\"headerlink\" title=\"ID选择器\"></a>ID选择器</h4><p>作用：根据元素的id属性值选中一个元素</p>\n<p>语法：#id属性值{}</p>\n<p>例子：#box{} #red{}</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#red</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>:red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"类选择器\"><a href=\"#类选择器\" class=\"headerlink\" title=\"类选择器\"></a>类选择器</h4><ul>\n<li>作用：根据元素的class属性值选中一组元素</li>\n<li>语法：<code>.classname</code></li>\n<li>例子：<code>.blue&#123;&#125;</code></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.blue</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.size</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>class<code>是一个标签的属性，它和</code>id<code>类似，不同的是</code>class</p>\n<ul>\n<li>可以重复使用，</li>\n<li>可以通过<code>class</code>属性来为元素分组，</li>\n<li>可以同时为一个元素指定多个<code>class</code>属性</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">p</span> class=&quot;blue size&quot;&gt; 类选择器（Class selector）&lt;/<span class=\"selector-tag\">p</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"属性选择器\"><a href=\"#属性选择器\" class=\"headerlink\" title=\"属性选择器\"></a>属性选择器</h4><p>作用：根据元素的属性值选中一组元素<br>语法1：[属性名] 选择含有指定属性的元素<br>语法2：[属性名=属性值] 选择含有指定属性和属性值的元素<br>语法3：[属性名^=属性值] 选择属性值以指定值开头的元素<br>语法4：[属性名$=属性值] 选择属性值以指定值结尾的元素<br>语法5：[属性名*=属性值] 选择属性值中含有某值的元素<br>例子：<code>p[title]&#123;&#125;</code> <code>p[title=e]&#123;&#125;</code> <code>p[title^=e]&#123;&#125;</code> <code>p[title$=e]&#123;&#125;</code> <code>p[title*=e]&#123;&#125;</code></p>\n<h3 id=\"复合选择器\"><a href=\"#复合选择器\" class=\"headerlink\" title=\"复合选择器\"></a>复合选择器</h3><h4 id=\"交集选择器\"><a href=\"#交集选择器\" class=\"headerlink\" title=\"交集选择器\"></a>交集选择器</h4><ul>\n<li>作用：选中同时复合多个条件的元素</li>\n<li>语法：<code>选择器1选择器2选择器3选择器n&#123;&#125;</code></li>\n<li><em>注意点：交集选择器中如果有元素选择器，必须使用元素选择器开头</em></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.red</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.a</span><span class=\"selector-class\">.b</span><span class=\"selector-class\">.c</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"并集选择器\"><a href=\"#并集选择器\" class=\"headerlink\" title=\"并集选择器\"></a>并集选择器</h4><ul>\n<li>作用：同时选择多个选择器对应的元素</li>\n<li>语法：<code>选择器1,选择器2,选择器3,选择器n&#123;&#125;</code></li>\n<li>例子：<code>#b1,.p1,h1,span,div.red&#123;&#125;</code></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h1</span>,<span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"关系选择器\"><a href=\"#关系选择器\" class=\"headerlink\" title=\"关系选择器\"></a>关系选择器</h3><ul>\n<li>父元素：直接包含子元素的元素叫做父元素</li>\n<li>子元素：直接被父元素包含的元素是子元素</li>\n<li>祖先元素：直接或间接包含后代元素的元素叫做祖先元素；一个元素的父元素也是它的祖先元素</li>\n<li>后代元素：直接或间接被祖先元素包含的元素叫做后代元素；子元素也是后代元素</li>\n<li>兄弟元素：拥有相同父元素的元素是兄弟元素</li>\n</ul>\n<h4 id=\"子元素选择器\"><a href=\"#子元素选择器\" class=\"headerlink\" title=\"子元素选择器\"></a>子元素选择器</h4><ul>\n<li>作用：选中指定父元素的指定子元素</li>\n<li>语法：<code>父元素 &gt; 子元素</code></li>\n<li>例子：<code>A &gt; B</code></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.box</span> &gt; <span class=\"selector-tag\">p</span> &gt; <span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: orange;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"后代元素选择器\"><a href=\"#后代元素选择器\" class=\"headerlink\" title=\"后代元素选择器\"></a>后代元素选择器</h4><ul>\n<li>作用：选中指定元素内的指定后代元素</li>\n<li>语法：<code>祖先 后代</code></li>\n<li>例子：<code>A B</code></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> <span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: skyblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"兄弟元素选择器\"><a href=\"#兄弟元素选择器\" class=\"headerlink\" title=\"兄弟元素选择器\"></a>兄弟元素选择器</h4><ul>\n<li>作用：选择下一个兄弟</li>\n<li>语法：<code>前一个 + 下一个</code> <code>前一个 + 下一组</code></li>\n<li>例子1：<code>A1 + A2</code>（选择下一个兄弟）</li>\n<li>例子2： <code>A1 ~ An</code>（选择下边所有的兄弟）</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> + <span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> ~ <span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"伪类选择器\"><a href=\"#伪类选择器\" class=\"headerlink\" title=\"伪类选择器\"></a>伪类选择器</h3><p>伪类（不存在的类，特殊的类）</p>\n<p>伪类用来描述一个元素的特殊状态，比如：第一个子元素、被点击的元素、鼠标移入的元素.…</p>\n<p>伪类一般情况下都是使用<code>:</code>开头</p>\n<ul>\n<li><code>:first-child</code> 第一个子元素</li>\n<li><code>:last-child</code> 最后一个子元素</li>\n<li><code>:nth-child()</code> 选中第n个子元素<ul>\n<li>n：第n个，n的范围0到正无穷</li>\n<li>2n或even：选中偶数位的元素</li>\n<li>2n+1或odd：选中奇数位的元素</li>\n</ul>\n</li>\n</ul>\n<p>以上这些伪类都是根据所有的子元素进行排序的</p>\n<ul>\n<li><code>:first-of-type</code> 同类型中的第一个子元素</li>\n<li><code>:last-of-type</code> 同类型中的最后一个子元素</li>\n<li><code>:nth-of-type()</code> 选中同类型中的第n个子元素</li>\n</ul>\n<p>这几个伪类的功能和上述的类似，不同点是他们是在同类型元素中进行排序的</p>\n<ul>\n<li><code>:not()</code>否定伪类，将符合条件的元素从选择器中去除</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* ul下所有li，黑色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ul下第偶数个li，黄色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">2</span>n) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: yellow;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ul下第奇数个li，绿色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(odd) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ul下第一个li，红色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:first</span>-child &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ul下最后一个li，黄色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: orange;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301112038812.png\" alt=\"image-20230111203813718\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">ul</span> &gt; <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:not</span>(<span class=\"selector-pseudo\">:nth-of-type</span>(<span class=\"number\">3</span>))&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:yellowgreen;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*not()就是取消这一行的颜色*/</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>:link</code> 未访问的链接(正常的链接)</li>\n<li><code>:visited</code>已访问的链接<ul>\n<li>由于隐私的原因，所以<code>visited</code>这个伪类只能修改链接的颜色</li>\n</ul>\n</li>\n<li><code>:hover</code> 鼠标悬停的链接（用来表示鼠标移入的状态）</li>\n<li><code>:active</code> 鼠标点击的链接（用来表示鼠标点击）</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* unvisited link */</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:link</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* visited link */</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:visited</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: yellow;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* mouse over link */</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* selected link */</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"伪元素选择器\"><a href=\"#伪元素选择器\" class=\"headerlink\" title=\"伪元素选择器\"></a>伪元素选择器</h3><p>伪元素，表示页面中一些特殊的并不真实的存在的元素（特殊的位置）</p>\n<p>伪元素使用<code>::</code>开头</p>\n<ul>\n<li><code>::first-letter</code> 表示第一个字母</li>\n<li><code>::first-line</code> 表示第一行</li>\n<li><code>::selection</code> 表示选中的内容</li>\n<li><code>::before</code> 元素的开始</li>\n<li><code>::after</code> 元素的最后</li>\n<li><code>::before</code>和<code>::after</code> 必须结合<code>content</code>属性来使用</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 段落首字母设置大小为30px */</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">::first-letter</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 段落第一行设置为黄色背景 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">::first-line</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: yellow;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 段落选中的部分变绿色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">::selection</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: green；</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* div前加上内容 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;BEFORE&#x27;</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* div后加上内容 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;AFTER&#x27;</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"样式继承及颜色长度单位介绍\"><a href=\"#样式继承及颜色长度单位介绍\" class=\"headerlink\" title=\"样式继承及颜色长度单位介绍\"></a>样式继承及颜色长度单位介绍</h2><h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3><p>样式的继承，我们为一个元素设置的样式同时也会应用到它的后代元素上</p>\n<p>继承是发生在祖先后后代之间的</p>\n<p>继承的设计是为了方便我们的开发，利用继承我们可以将一些通用的样式统一设置到共同的祖先元素上，</p>\n<p>这样只需设置一次即可让所有的元素都具有该样式</p>\n<p>注意:并不是所有的样式都会被继承：</p>\n<p>比如背景相关的，布局相关等的这些样式都不会被继承。</p>\n<ul>\n<li>样式的冲突</li>\n</ul>\n<p>​    -当我们通过不同的选择器，选中相同的元素，并且为相同的样式设置不同的值时，此时就发生了样式的冲突。</p>\n<p>发生样式冲突时，应用哪个样式由选择器的权重（优先级）决定</p>\n<ul>\n<li><p>选择器的权重：</p>\n<p>内联样式        1,0,0,0</p>\n<p>id选择器        0,1,0,0</p>\n<p>类和伪类选择器        0,0,1,0</p>\n<p>元素选择器        0,0,0,1</p>\n<p>通配选择器        0,0,0,0</p>\n<p>继承的样式        没有优先级</p>\n</li>\n</ul>\n<p>比较优先级时，需要将所有的选择器的优先级进行相加计算，最后优先级越高，则越优先显示(分组选择器是单独计算的</p>\n<p>选择器的累加不会超过其最大的数量级，类选择器在高也不会超过id选择器</p>\n<p>如果优先级计算后相同,此时则优先使用靠下的样式</p>\n<p>可以在某一个样式的后边添加<code>!important</code>，则此时该样式会获取到最高的优先级，甚至超过内联样式，</p>\n<p><em>注意：在开发中一定要慎用！</em></p>\n<h3 id=\"长度单位\"><a href=\"#长度单位\" class=\"headerlink\" title=\"长度单位\"></a>长度单位</h3><p>长度单位:</p>\n<ul>\n<li>像素</li>\n</ul>\n<p>​    - 屏幕（显示器）实际上是由一个一个的小点点构成的</p>\n<p>​    - 不同屏幕的像素大小是不同的，像素越小的屏幕显示的效果越清晰-所以同样的200px在不同的设备下显示效果不一样</p>\n<ul>\n<li>百分比</li>\n</ul>\n<p>​    -也可以将属性值设置为相对于其父元素属性的百分比</p>\n<p>​    -设置百分比可以使子元素跟随父元素的改变而改变</p>\n<p>em</p>\n<p>em是相对于元素的字体大小来计算的，<code>1em = &lt;self&gt;.font-size</code>，也就说em值会根据元素本身的字体大小的改变而改变</p>\n<p>rem</p>\n<p>rem是相对于根元素的字体大小来计算，<code>1em = &lt;root&gt;.font-size</code>，也就说em值会根据根元素的字体大小的改变而改变</p>\n<p>(em改变字体大小就能改变内容大小</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box4</span> &#123;</span><br><span class=\"line\">       <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">       <span class=\"attribute\">width</span>: <span class=\"number\">10rem</span>; <span class=\"comment\">/*当时用rem时，不管怎么改本元素的font-size都是不会变的。需要定义root元素的font-size才可以 */</span></span><br><span class=\"line\">       <span class=\"attribute\">height</span>: <span class=\"number\">10rem</span>;</span><br><span class=\"line\">       <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"颜色单位\"><a href=\"#颜色单位\" class=\"headerlink\" title=\"颜色单位\"></a>颜色单位</h3><p>在css中可以直接使用颜色名来设置各种颜色</p>\n<p>比如:red、orange、yellow、 blue、green … 但是在css中直接使用颜色名是非常的不方便</p>\n<ul>\n<li>RGB值:</li>\n</ul>\n<p>RGB通过三种颜色的不同浓度来调配出不同的颜色</p>\n<p>R red,G green , B blue</p>\n<p>每一种颜色的范围在0 - 255 (0% - 100%)之间</p>\n<p>语法:RGB(红色,绿色,蓝色)</p>\n<ul>\n<li>RGBA：</li>\n</ul>\n<p>就是在rgb的基础上增加了一个a表示不透明度</p>\n<p>需要四个值，前三个和rgb一样，第四个表示不透明度</p>\n<p>1表示完全不透明 0表示完全透明 .5半透明</p>\n<ul>\n<li>十六进制的RGB值:</li>\n</ul>\n<p>语法:#红色绿色蓝色</p>\n<p>颜色浓度通过00-ff</p>\n<p>如果颜色两位两位重复可以进行简写</p>\n<p>#aabbcc –&gt; #abc</p>\n<ul>\n<li>HSL值 HSLA值</li>\n</ul>\n<p>H 色相(0 - 360)</p>\n<p>S 饱和度，颜色的浓度 0% - 100%</p>\n<p>L 亮度，颜色的亮度 0% -100%</p>\n<h2 id=\"盒模型\"><a href=\"#盒模型\" class=\"headerlink\" title=\"盒模型\"></a>盒模型</h2><h3 id=\"文档流\"><a href=\"#文档流\" class=\"headerlink\" title=\"文档流\"></a>文档流</h3><p>网页是一个多层的结构，一层摞着一层</p>\n<p>通过css可以分别为每一层来设置样式</p>\n<p>作为用户来讲只能看到最顶上一层</p>\n<p>这些层中，最底下的一层称为文档流，文档流是网页的基础</p>\n<p>​        我们所创建的元素默认都是在文档流中进行排列</p>\n<p>对于我们来元素主要有两个状态在文档流中</p>\n<ul>\n<li><p>不在文档流中（脱离文档流）</p>\n</li>\n<li><p>元素在文档流中有什么特点:</p>\n<ul>\n<li><p>块元素</p>\n<p>块元素会在页面中独占一行(自上向下垂直排列）</p>\n<p>默认宽度是父元素的全部（会把父元素撑满）</p>\n<p>默认高度是被内容撑开（子元素）</p>\n</li>\n<li><p>行内克素</p>\n<p>行内元素不会独占页面的一行，只占自身的大小</p>\n<p>行内元素在页面中左向右水平排列（书写习惯一致）</p>\n<p>如果一行之中不能容纳下所有的行内元素，则元素会换到第二行继续自左向右排列（书写习惯一致）</p>\n<p>行内元素的默认宽度和高度都是被内容撑开</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"盒模型-1\"><a href=\"#盒模型-1\" class=\"headerlink\" title=\"盒模型\"></a>盒模型</h3><p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301141442677.png\" alt=\"image-20230113213021324\"></p>\n<ul>\n<li><p>盒模型、盒子模型、框模型</p>\n<ul>\n<li><p>css将页面中所有元素都设置为了一个矩形的盒子</p>\n</li>\n<li><p>讲元素设置为矩形的盒子后，对页面的布局就变成将不同的盒子放到不同的位置</p>\n</li>\n<li><p><em>盒子可见框的大小，由内容区、内边距和边框共同决定，所以在计算盒子大小时，需要将这三个区域加到一起计算</em></p>\n</li>\n</ul>\n</li>\n</ul>\n<p>每一个盒子由以下几个部分组成：</p>\n<p><strong>可见框由内容区、边框、内边距组成</strong></p>\n<h4 id=\"内容区（content）\"><a href=\"#内容区（content）\" class=\"headerlink\" title=\"内容区（content）\"></a>内容区（content）</h4><ul>\n<li>元素中的所有的子元素和文本内容都在内容区中</li>\n<li>内容去的大小由width和height两个属性来设置</li>\n<li><strong>width设置内容区的宽度</strong></li>\n<li><strong>height设置内容区的高度</strong></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box1&#123;</span><br><span class=\"line\">    width: 200px; </span><br><span class=\"line\">    height: 200px; </span><br><span class=\"line\">    background-color: #bfa;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"内边距（padding）\"><a href=\"#内边距（padding）\" class=\"headerlink\" title=\"内边距（padding）\"></a>内边距（padding）</h4><ul>\n<li><p>内边距，也叫填充，是内容区和边框之间的空间</p>\n<ul>\n<li><code>padding-top</code> 上内边距</li>\n<li><code>padding-right</code> 右内边距</li>\n<li><code>padding-bottom</code>下内边距</li>\n<li><code>padding-left</code> 左内边距</li>\n</ul>\n</li>\n<li><p>padding内边距的简写属性，可以同时指定四个方向的内边距，规则和边框中属性值设置一样</p>\n</li>\n<li><p><strong>内边距的设置会影响到盒子的大小，背景颜色会延伸到内边距上</strong></p>\n</li>\n<li><p><strong>文字、子元素只会出现在内容区内不会出现在内边距上</strong></p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    <span class=\"selector-class\">.outer</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">border</span>: <span class=\"number\">10px</span> orange solid;</span><br><span class=\"line\">        <span class=\"attribute\">padding-right</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">padding-left</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-class\">.inner</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: greenyellow;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"selector-tag\">div</span> class=&quot;outer&quot;&gt;</span><br><span class=\"line\">    &lt;<span class=\"selector-tag\">div</span> class=&quot;inner&quot;&gt;&lt;/<span class=\"selector-tag\">div</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"selector-tag\">div</span>&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"边框（border）\"><a href=\"#边框（border）\" class=\"headerlink\" title=\"边框（border）\"></a>边框（border）</h4><ul>\n<li>边框属于盒子边缘，边框里边属于盒子内部，出了边框都是盒子的外部</li>\n<li><strong>边框也会影响盒子的大小</strong></li>\n<li>设置边框至少需要三个样式</li>\n<li><strong>border-width 边框的宽度：默认3px</strong>(可以省略不写)<br>border-top-width 上边框的宽度<br>border-right-width 右边框的宽度<br>border-bottom-width 下边框的宽度<br>border-left-width 左边框的宽度</li>\n<li><strong>border-color 边框的颜色：默认使用color的颜色值</strong><br>border-top-color 上边框的颜色<br>border-right-color 右边框的颜色<br>border-bottom-color 下边框的颜色<br>border-left-color 左边框的颜色</li>\n<li><strong>border-style 边框的样式：没有默认值，必须指定</strong><br>border-top-style 上边框的样式<br>border-right-style 右边框的样式<br>border-bottom-style 下边框的样式<br>border-left-style 左边框的样式</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box1</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: red;</span><br><span class=\"line\">    <span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\">    \tsolid  实线 </span></span><br><span class=\"line\"><span class=\"comment\">    \tdotted 点状虚线 </span></span><br><span class=\"line\"><span class=\"comment\">    \tdashed 虚线 </span></span><br><span class=\"line\"><span class=\"comment\">    \tdouble 双线 </span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: solid;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>不论是<code>border-width</code> 、 <code>border-color</code> 、<code>border-style</code> 还是其衍生出来的属性写法，都可以指定每个方向的边框情况</p>\n<p>设定几个值就决定了对应方向的宽度、颜色或样式</p>\n<ul>\n<li>四个值：<code>上 右 下 左</code></li>\n<li>三个值：<code>上 左右 下</code></li>\n<li>两个值：<code>上下 左右</code></li>\n<li>一个值：<code>上下左右</code></li>\n<li>【顺时针方向设置】</li>\n</ul>\n</li>\n<li><p>border简写属性：通过该属性可以同时设置边框所有的相关样式，并且没有顺序要求</p>\n<ul>\n<li><code>border-top</code> 上边框的宽度、颜色和样式</li>\n<li><code>border-right</code> 右边框的宽度、颜色和样式</li>\n<li><code>border-bottom</code> 下边框的宽度、颜色和样式</li>\n<li><code>border-left</code> 左边框的宽度、颜色和样式</li>\n<li>可以不要哪边写个none就行了</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box1</span>&#123; </span><br><span class=\"line\">\t<span class=\"attribute\">border</span>: <span class=\"number\">10px</span> red solid;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"外边距（margin）\"><a href=\"#外边距（margin）\" class=\"headerlink\" title=\"外边距（margin）\"></a>外边距（margin）</h4><p>外边距，也叫空白边，位于盒子的最外围，是添加在边框外周围的空间。空白边使盒子之间不会紧凑地连接在一起，是CSS 布局的一个重要手段</p>\n<p><strong>外边距不会影响盒子可见框的大小，但是外边距会影响盒子的位置和占用空间</strong></p>\n<p>margin外边距的简写属性，可以同时指定四个方向的内边距，规则和边框中属性值设置一样</p>\n<p>margin会影响到盒子实际占用空间</p>\n<p>一共有四个方向的外边距：</p>\n<ul>\n<li><p><code> margin-top</code> :上外边距</p>\n<ul>\n<li>设置正值，元素自身向下移动</li>\n<li>设置负值，元素自身向上移动</li>\n</ul>\n</li>\n<li><p> <code> margin-right</code>:右外边距</p>\n</li>\n<li><p>设置正值，其右边的元素向右移动</p>\n</li>\n<li><p>设置负值，其右边的元素向左移动</p>\n</li>\n<li><p>上述说法并不准确，对于块元素，设置<code>margin-right</code>不会产生任何效果</p>\n</li>\n<li><p> <code>margin-bottom</code>:下外边距</p>\n</li>\n<li><p>设置正值，其下边的元素向下移动</p>\n</li>\n<li><p>设置负值，其下边的元素向上移动</p>\n</li>\n<li><p>上述说法并不准确，对于块元素，会有垂直方向上的边距重叠问题</p>\n</li>\n<li><p><code>  margin-left</code>:左外边距</p>\n<ul>\n<li>设置正值，元素自身向右移动</li>\n<li>设置负值，元素自身向左移动</li>\n</ul>\n</li>\n</ul>\n<p>元素在页面中是按照自左向右的顺序排列的，所以默认情况下</p>\n<ul>\n<li>如果我们设置的左和上外边距则会移动元素自身</li>\n<li>而设置下和右外边距会移动其他元素</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box1 &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    background-color: #bfa;</span><br><span class=\"line\">    border: 10px orange solid;</span><br><span class=\"line\">    margin-bottom: 100px;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.box2 &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    background-color: #bfa;</span><br><span class=\"line\">    border: 10px red solid;</span><br><span class=\"line\">    margin-top: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"水平方向布局\"><a href=\"#水平方向布局\" class=\"headerlink\" title=\"水平方向布局\"></a>水平方向布局</h3><p>元素在其父元素中水平方向的位置由以下几个属性共同决定，一个元素在其父元素中，水平布局<strong>必须要满足</strong>以下的等式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">margin-left + border-left + padding-left + width + padding-right + border-right + margin-right = 其父元素的宽度</span><br></pre></td></tr></table></figure>\n\n<p>以上等式必须满足，如果相加结果使等式不成立，则称为<strong>过渡约束</strong></p>\n<ul>\n<li><p>如果这七个值中没有<code>auto</code>的情况，则浏览器会自动调整<code>margin-right</code>值以使等式满足</p>\n<p><code>100 + 0 + 0 + 200 + 0 + 0 + 0 = 800</code> ==&gt; <code>100 + 0 + 0 + 200 + 0 + 0 + 500 = 800</code></p>\n</li>\n<li><p>如果这七个值中有<code>auto</code>的情况，则会自动调整<code>auto</code>值以使等式成立</p>\n</li>\n<li><p>这七个值中有三个值可以设置为<code>auto</code> ：<code>width</code>、<code>margin-left</code>、<code>maring-right</code></p>\n</li>\n</ul>\n<p>1/如果某个值为auto，则会自动调整<code>auto</code>的那个值以使等式成立</p>\n<p>2/如果宽度为<code>auto</code>，则宽度会调整到最大，其他<code>auto</code>的外边距会自动设置为0</p>\n<p>3/如果外边距都为<code>auto</code>，则<code>auto</code>的外边距会自动均分以使等式成立</p>\n<p>【所以我们进程利用这个特点来使一个元素在其都元素中水平居中】</p>\n<h3 id=\"垂直方向布局\"><a href=\"#垂直方向布局\" class=\"headerlink\" title=\"垂直方向布局\"></a>垂直方向布局</h3><p>默认情况下父元素的高度被内容撑开</p>\n<h4 id=\"元素溢出\"><a href=\"#元素溢出\" class=\"headerlink\" title=\"元素溢出\"></a>元素溢出</h4><p>子元素是在父元素的内容区中排列的，如果子元素的大小超过了父元素，则子元素会从父元素中溢出</p>\n<p>使用<code>overflow</code>/<code>overflow-x</code>/<code>overflow-y</code>属性来设置父元素如何处理溢出的子元素</p>\n<p>可选值：<code>visible</code>/<code>hidden</code>/<code>scroll</code>/<code>auto</code></p>\n<p><code>visible</code> 溢出内容会在父元素外部位置显示，默认值</p>\n<p><code>hidden</code> 溢出内容会被裁剪，不会显示</p>\n<p><code>scroll</code> 生成两个滚动条，通过滚动条来查看完整的内容</p>\n<p><code>auto</code> 根据需要生成滚动条</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.box1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: <span class=\"number\">#bfa</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">10px</span> orange solid;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">overflow</span>: visible; <span class=\"comment\">/* 默认值 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box1&quot;</span>&gt;</span></span><br><span class=\"line\">    Lorem ipsum dolor sit amet consectetur adipisicing elit. Asperiores aspernatur illo inventore</span><br><span class=\"line\">    deleniti laudantium quaerat excepturi sed quidem tempore? Eaque, cumque porro. Fuga quam error cupiditate quasi</span><br><span class=\"line\">    eveniet in numquam!</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"边距折叠\"><a href=\"#边距折叠\" class=\"headerlink\" title=\"边距折叠\"></a>边距折叠</h4><p>垂直外边距的重叠（折叠）：相邻的垂直方向外边距会发生重叠现象</p>\n<h4 id=\"兄弟元素\"><a href=\"#兄弟元素\" class=\"headerlink\" title=\"兄弟元素\"></a>兄弟元素</h4><p>兄弟元素间的相邻，垂直外边距会取两者之间的较大值（两者都是正值）</p>\n<p>特殊情况：</p>\n<ul>\n<li><p>如果相邻的外边距一正一负，则取两者的和</p>\n</li>\n<li><p>如果相邻的外边距都是负值，则取两者中绝对值较大的</p>\n</li>\n<li><pre><code class=\"html\">.box1,.box2&#123; \n    width:200px; \n    height:200px; \n    font-size:100px;\n&#125;\n\n.boxl&#123;\n    background-color: #bfa;\n    /*设置一个下外边距*/\n    margin-bottom: 100px;\n&#125;\n\n.box2&#123;\n    background-color: orange;\n    /*设置一个上外边距*/\n    margin-top: 100px;\n&#125;\n</code></pre>\n</li>\n</ul>\n<p>兄弟元素之间的外边距的重叠，对于开发是有利的，所以我们不需要进行处理</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"html\"><a href=\"#html\" class=\"headerlink\" title=\"html\"></a>html</h1><h2 id=\"html基本结构\"><a href=\"#html基本结构\" class=\"headerlink\" title=\"html基本结构\"></a>html基本结构</h2><blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 文档声明，声明当前网页的版本 --&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"keyword\">html</span>&gt;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- html的根标签（元素），网页中的所有内容都要写根元素的里边 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- head是网页的头部，head中的内容不会在网页中直接出现，主要用来帮助浏览器或搜索引擎来解析网页--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- meta标签用来设置网页的元数据，这里meta用来设置网页的字符集，避免乱码问题 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- title中的内容会显示在浏览器的标题栏，搜索引擎会主要根据title中的内容来判断网页的主要内容 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>网页的标题<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- body是htm1的子元素，表示网页的主体，网页中所有的可见内容都应该写在body里 --&gt;</span><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">&lt;!-- h1网页的一级标题 --&gt;</span> </span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>网页的大标题<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<h2 id=\"字符实体与语义标签\"><a href=\"#字符实体与语义标签\" class=\"headerlink\" title=\"字符实体与语义标签\"></a>字符实体与语义标签</h2><h3 id=\"字符实体\"><a href=\"#字符实体\" class=\"headerlink\" title=\"字符实体\"></a>字符实体</h3><p>有些时候，在HTML中不能直接书写一些特殊符号，如：  </p>\n<p>多个连续的空格（在网页中编写的多个空格默认情况会自动被浏览器解析为一个空格）  </p>\n<p>比如字母两侧的大于小于号（可能会被认为是标签并解析）  </p>\n<p>如果我们需要在网页中书写这些特殊的符号，则需要使用html中的实体（转义字符）实体的语法：&amp;实体的名字;，如：  </p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061551679.png\" alt=\"image-20230106155112829\"></p>\n<ul>\n<li><p>meta主要用于设置网页中的一些元数据，元数据并不是给用户看的</p>\n</li>\n<li><p>charset ：指定网页的字符集</p>\n</li>\n<li><p>name ：指定的数据的名称</p>\n</li>\n<li><p>keywords：表示网站的关键字，可以同时指定多个关键字，关键字间使用,隔开</p>\n</li>\n<li><p>description：表示网站的描述信息</p>\n</li>\n<li><p>content ：指定的数据的内容，会作为搜索结果的超链接上的文字显示</p>\n</li>\n<li><p>title标签的内容会作为搜索结果的超链接上的文字显示</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"语义标签\"><a href=\"#语义标签\" class=\"headerlink\" title=\"语义标签\"></a>语义标签</h3><h4 id=\"块元素\"><a href=\"#块元素\" class=\"headerlink\" title=\"块元素\"></a>块元素</h4><blockquote>\n<p>标题    一共有六级标题</p>\n</blockquote>\n<p>从h1 ~ h6重要性递减，h1最重要，h6最不重要</p>\n<p>h1在网页中的重要性仅次于title标签</p>\n<p>一般情况下一个页面中只会有一个h1</p>\n<p>一般情况下标题标签只会使用到h1 ～ h3，h4 ～ h6很少用      </p>\n<ul>\n<li><code>&lt;hgroup&gt;    标题组    多层次的标题。它将一组&lt;h1&gt; ～ &lt;h6&gt;元素分组 </code></li>\n<li><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061551867.png\" alt=\"image-20230106155131518\"></li>\n</ul>\n<p>行内元素与块元素：</p>\n<p>块元素（block element）</p>\n<ul>\n<li>在网页中一般通过块元素来对页面进行布局</li>\n</ul>\n<p>行内元素（inline element）</p>\n<ul>\n<li><p> 行内元素主要用来包裹文字</p>\n</li>\n<li><p>一般情况下会在块元素中放行内元素，而不会在行内元素中放块元素</p>\n</li>\n<li><p>如<p>元素中不能放任何的块元素，不过块元素中基本上什么都能放</p>\n</li>\n</ul>\n<h3 id=\"布局标签\"><a href=\"#布局标签\" class=\"headerlink\" title=\"布局标签\"></a>布局标签</h3><p>F12看源码</p>\n<p>第一栏elements</p>\n<p>header表示网页的头部（页眉）</p>\n<p>main表示网页的主体部分（一个页面中只会有一个main）</p>\n<p>footer表示网页的底部（页脚）</p>\n<p>nav表示网页中的导航</p>\n<p>aside和主体相关的其他内容（侧边栏）</p>\n<p>article表示一个独立的文章</p>\n<p>section表示一个独立的区块，上边的标签都不能表示时使用section</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061551759.png\" alt=\"image-20230106155147504\"></p>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><p>在html中可以创建列表，html列表一共有三种：</p>\n<ul>\n<li>有序列表，使用ol标签来创建有序列表，使用li表示列表项</li>\n</ul>\n <figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Mix flour, baking powder, sugar, and salt.<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>In another bowl, mix eggs, milk, and oil.<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Stir both mixtures together.<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Fill muffin tray 3/4 full.<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Bake for 20 minutes.<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span> </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061552866.png\" alt=\"image-20230106155206425\"></p>\n<ul>\n<li>无序列表，使用<code>ul</code>标签来创建无序列表，使用<code>li</code>表示列表项</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Milk<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Cheese</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Blue cheese</span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Sweet blue cheese<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Sour blue cheese<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>Feta<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>列表元素之间是可以互相嵌套的</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301061552180.png\" alt=\"image-20230106155218093\"></p>\n<ul>\n<li>定义列表，使用dl标签来创建定义列表，使用dt表示定义的内容，使用dd来对内容进行解释说明</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dl</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>Beast of Bodmin<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>A large feline inhabiting Bodmin Moor.<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>Morgawr<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>A sea serpent.<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dt</span>&gt;</span>Owlman<span class=\"tag\">&lt;/<span class=\"name\">dt</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dd</span>&gt;</span>A giant owl-like creature.<span class=\"tag\">&lt;/<span class=\"name\">dd</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dl</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h3><p>超链接可以让我们从一个页面跳转到其他页面，或者是当前页面的其他的位置</p>\n<p>使用a标签来定义超链接，href属性指定跳转的目标路径，值可以是一个外部网站的地址，也可以写一个内部页面的地址</p>\n<p>超链接是也是一个行内元素，在a标签中可以嵌套除它自身外的任何元素</p>\n<h4 id=\"外部地址\"><a href=\"#外部地址\" class=\"headerlink\" title=\"外部地址\"></a>外部地址</h4><ul>\n<li>Linking to an absolute URL：链接一个绝对路径</li>\n<li>Linking to an email address：链接一个email地址</li>\n<li>Linking to telephone numbers：链接电话号码</li>\n<li>Using the download attribute to save a <code>&lt;canvas&gt;</code> as a PNG：下载图片</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;https://www.baidu.com&quot;</span>&gt;</span>Website<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;mailto:example@outlook.com&quot;</span>&gt;</span>Email<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;tel:+123456789&quot;</span>&gt;</span>Phone<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"内部地址\"><a href=\"#内部地址\" class=\"headerlink\" title=\"内部地址\"></a>内部地址</h4><p>当我们需要跳转一个服务器内部的页面时，一般我们都会使用相对路径，会以./或../开头</p>\n<ul>\n<li><p>./ 表示当前文件所在目录，可以省略不写</p>\n</li>\n<li><p>../表示当前文件所在目录的上一级目录</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./test1.html&quot;</span>&gt;</span>超链接1<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;../test2.html&quot;</span>&gt;</span>超链接2<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./test3/test3.html&quot;</span>&gt;</span>超链接3<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;../test4/test4.html&quot;</span>&gt;</span>超链接4<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"新建页面\"><a href=\"#新建页面\" class=\"headerlink\" title=\"新建页面\"></a>新建页面</h4><p>target属性，用来指定超链接打开的位置可选值：</p>\n<ul>\n<li><p>_self在当前页面中打开超链接，默认值</p>\n</li>\n<li><p>_blank在新建页面中打开超链接</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./test1.html&quot;</span>&gt;</span>超链接1——默认<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./test1.html&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_self&quot;</span>&gt;</span>超链接1——当前页面<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./test1.html&quot;</span> <span class=\"attr\">target</span>=<span class=\"string\">&quot;_blank&quot;</span>&gt;</span>超链接1——新建页面<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"锚点跳转\"><a href=\"#锚点跳转\" class=\"headerlink\" title=\"锚点跳转\"></a>锚点跳转</h3><p>可以将<code>#</code>作为超链接的路径的占位符使用。</p>\n<p><code>&lt;a href=&quot;#&quot;&gt;</code>这是一个新的超链接<code>&lt;/a&gt;</code></p>\n<p>可以使用javascript:; 来作为href的属性，此时点击这个超链接什么也不会发生</p>\n<p><code>&lt;a href=&quot;javascript:;&quot;&gt;</code>这是一个新的超链接<code>&lt;/a&gt;</code></p>\n<p>可以直接将超链接的<code>href</code>属性设置为<code>#</code>，这样点击超链接以后页面不会发生跳转，而是转到当前页面的顶部的位置</p>\n<p>可以跳转到页面的指定位置（锚点），只需将<code>href</code>属性设置<code>#目标元素的id属性值</code>（唯一不重复）</p>\n<p>id属性（唯一不重复的）</p>\n<ul>\n<li>每一个标签都可以添加一个id属性</li>\n<li>id属性就是元素的唯一标识，同一个页面不能出现重复的id属性</li>\n</ul>\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><p>图片标签用于向当前页面中引入一个外部图片</p>\n<p>img标签是一个自结束标签，这种元素属于替换元素（块和行内元素之间，具有两种元素的特点）</p>\n<p>属性:</p>\n<ul>\n<li>src：属性指定的是外部图片的路径（路径规则和超链接是一样的）</li>\n<li>alt：图片的描述，这个描述默认情况下不会显示，有些浏览器会在图片无法加载时显示，搜索引擎会根据alt中的内容来识别图片</li>\n<li>width：图片的宽度（单位是像素）</li>\n<li>height ：图片的高度（单位是像素）[宽度和高度中如果只修改了一个，则另一个会等比例缩放]</li>\n</ul>\n<p>图片的格式：</p>\n<p>jpeg(jpg)</p>\n<ul>\n<li>支持的颜色比较丰富</li>\n<li>不支持透明效果</li>\n<li>不支持动图</li>\n<li>一般用来显示照片</li>\n</ul>\n<p>gif</p>\n<ul>\n<li>支持的颜色比较单一</li>\n<li>支持简单透明</li>\n<li>支持动图</li>\n</ul>\n<p>png</p>\n<ul>\n<li>支持的颜色丰富</li>\n<li>支持复杂透明</li>\n<li>不支持动图</li>\n<li>专为网页而生</li>\n</ul>\n<p>webp</p>\n<ul>\n<li><p>这种格式是谷歌新推出的专门用来表示网页中的图片的一种格式</p>\n</li>\n<li><p>具备其他图片格式的所有优点，而且文件还特别的小</p>\n</li>\n<li><p>缺点：兼容性不好</p>\n</li>\n</ul>\n<p>base64</p>\n<ul>\n<li><p>将图片使用base64编码，这样可以将图片转换为字符，通过字符的形式来引入图片<br>图片格式的选择</p>\n</li>\n<li><p>图片效果一样的，选文件小的</p>\n</li>\n<li><p>图片效果不一样的，选图片效果好的</p>\n</li>\n<li><p>尽可能的兼顾和平衡图片效果和文件大小</p>\n</li>\n</ul>\n<h3 id=\"内联框架\"><a href=\"#内联框架\" class=\"headerlink\" title=\"内联框架\"></a>内联框架</h3><p>用于向当前页面中引入一个其他页面</p>\n<ul>\n<li>src指定要引入的网页的路径</li>\n<li>frameborder 指定内联框架的边框</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://www.qq.com&quot;</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;800&quot;</span> <span class=\"attr\">height</span>=<span class=\"string\">&quot;600&quot;</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;0&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"音视频\"><a href=\"#音视频\" class=\"headerlink\" title=\"音视频\"></a>音视频</h3><h4 id=\"音频\"><a href=\"#音频\" class=\"headerlink\" title=\"音频\"></a>音频</h4><p>audio标签用来向页面中引入一个外部的音频文件</p>\n<p>音视频文件引入时，默认情况下不允许用户自己控制播放停止</p>\n<p>属性：</p>\n<ul>\n<li><p>controls是否允许用户控制播放</p>\n</li>\n<li><p>autoplay音频文件是否自动播放</p>\n<ul>\n<li>如果设置了autoplay，则音乐在打开页面时会自动播放<br>但是目前来讲大部分浏览器都不会自动对音乐进行播放</li>\n</ul>\n</li>\n<li><p>loop音乐是否循环播放</p>\n</li>\n</ul>\n<p><code>&lt;audio src=&quot;./source/audio.mp3&quot; controls autoplay loop&gt;&lt;/audio&gt;</code></p>\n<h4 id=\"SOURCE\"><a href=\"#SOURCE\" class=\"headerlink\" title=\"SOURCE\"></a>SOURCE</h4><p>除了通过<code>src</code>属性来指定外部文件的路径以外，还可以通过<code>&lt;source&gt;</code>元素来指定文件的路径</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    对不起，您的浏览器不支持播放音频！请升级浏览器！</span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./source/audio.mp3&quot;</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./source/audio.ogg&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">audio</span>&gt;</span>```</span><br></pre></td></tr></table></figure>\n\n<p>用source可以显示文字提示不支持</p>\n<p>多个可以更严谨防止浏览器不支持一个格式</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">embed</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;./source/audio.mp3&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;audio/mp3&quot;</span> &gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>embed和那句话任选其一就行了 它能兼容所有【非常流氓！！！</p>\n<h4 id=\"视频\"><a href=\"#视频\" class=\"headerlink\" title=\"视频\"></a>视频</h4><p>使用<code>video</code>标签来向网页中引入一个视频，使用方式和<code>audio</code>基本上是一样的</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">controls</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;video/webm&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">embed</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>通过iframe引入视频</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h1><h2 id=\"css语法与选择器\"><a href=\"#css语法与选择器\" class=\"headerlink\" title=\"css语法与选择器\"></a>css语法与选择器</h2><h3 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h3><p>使用css来修改元素的样式</p>\n<ul>\n<li><p>内联样式，行内样式 </p>\n<ul>\n<li>在标签内部通过<code>Style</code>属性来设置元素的样式</li>\n</ul>\n</li>\n<li><p><code>&lt;p style=&quot;color:&quot;&gt;内联样式（行内样式）&lt;/p&gt;</code></p>\n</li>\n</ul>\n<p>问题：使用内联样式，样式只能对一个标签生效。如果希望影响到多个元素，必须在每一个元素中都复制一遍；并且当样式发生变化时，我们必须要一个一个的修改，非常的不方便。（注意：开发时绝对不要使用内联样式）</p>\n<ul>\n<li>内部样式表<ul>\n<li>将样式编写到<code>head</code>中的<code>style</code>标签里然后通过css的选择器来选中元素并为其设置各种样式可以同时为多个标签设置样式，并且修改时只需要修改一处即可。内部样式表更加方便对样式进行复用</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\"><span class=\"selector-tag\">p</span>&#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">color</span>:green; </span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">font-size</span>:<span class=\"number\">50px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>问题：我们的内部样式表只能对一个网页起作用，它里边的样式不能跨页面进行复用</p>\n<ul>\n<li>外部样式表<ul>\n<li>可以将css样式编写到一个外部的CSS文件中，然后通过<code>link</code>标签来引入外部的CSS文件</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./style.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>外部样式表需要通过<code>link</code>标签进行引入，意味着只要想使用这些样式的网页都可以对其进行引用使样式，可以在不同页面之间进行复用</p>\n<p>将样式编写到外部的CSS文件中，可以使用到浏览器的缓存机制，从而加快网页的加载速度，提高用户的体验。</p>\n<h3 id=\"CSS基本语法\"><a href=\"#CSS基本语法\" class=\"headerlink\" title=\"CSS基本语法\"></a>CSS基本语法</h3><h4 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h4><ul>\n<li><p>css中的注释</p>\n<ul>\n<li>只能使用<code>/*</code>和<code>*/</code>包裹。即不管是单行注释，还是多行注释，都是以<code>/*</code>开头，以<code>*/</code>结尾</li>\n</ul>\n</li>\n<li><p>html中的注释</p>\n<ul>\n<li>只能使用<code>&lt;!--</code>和<code>--&gt;</code>包裹。即不管是单行注释，还是多行注释，都是以<code>&lt;!--</code>开头，以<code>--&gt;</code>结尾</li>\n</ul>\n</li>\n<li><p>JS注释</p>\n<ul>\n<li>单行注释使用<code>//</code>。多行注释使用<code>/*</code>和<code>*/</code>包裹，以<code>&lt;!--</code>开头，以<code>--&gt;</code>结尾</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h4><p><em>选择器 声明块</em></p>\n<ul>\n<li>选择器：</li>\n</ul>\n<p>通过选择器可以选中页面中的指定元素</p>\n<p>比如p的作用就是选中页面中所有的p元素声明块</p>\n<ul>\n<li>声明块：</li>\n</ul>\n<p>通过声明块来指定要为元素设置的样式</p>\n<p>声明块由一个一个的声明组成，声明是一个名值对结构</p>\n<p>一个样式名对应一个样式值，名和值之间以:连接，以;结尾</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h1</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"CSS选择器\"><a href=\"#CSS选择器\" class=\"headerlink\" title=\"CSS选择器\"></a>CSS选择器</h3><h4 id=\"通配选择器\"><a href=\"#通配选择器\" class=\"headerlink\" title=\"通配选择器\"></a>通配选择器</h4><ul>\n<li>作用：选中页面中的所有元素</li>\n<li>语法：<code>*</code></li>\n<li>例子：<code>*&#123;&#125;</code></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"元素选择器\"><a href=\"#元素选择器\" class=\"headerlink\" title=\"元素选择器\"></a>元素选择器</h4><p>也叫类型选择器、标签选择器</p>\n<ul>\n<li>作用：根据标签名来选中指定的元素</li>\n<li>语法：<code>elementname&#123;&#125;</code></li>\n<li>例子：<code>p&#123;&#125;</code> <code>h1&#123;&#125;</code> <code>div&#123;&#125;</code></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ID选择器\"><a href=\"#ID选择器\" class=\"headerlink\" title=\"ID选择器\"></a>ID选择器</h4><p>作用：根据元素的id属性值选中一个元素</p>\n<p>语法：#id属性值{}</p>\n<p>例子：#box{} #red{}</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#red</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>:red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"类选择器\"><a href=\"#类选择器\" class=\"headerlink\" title=\"类选择器\"></a>类选择器</h4><ul>\n<li>作用：根据元素的class属性值选中一组元素</li>\n<li>语法：<code>.classname</code></li>\n<li>例子：<code>.blue&#123;&#125;</code></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.blue</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.size</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>class<code>是一个标签的属性，它和</code>id<code>类似，不同的是</code>class</p>\n<ul>\n<li>可以重复使用，</li>\n<li>可以通过<code>class</code>属性来为元素分组，</li>\n<li>可以同时为一个元素指定多个<code>class</code>属性</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"selector-tag\">p</span> class=&quot;blue size&quot;&gt; 类选择器（Class selector）&lt;/<span class=\"selector-tag\">p</span>&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"属性选择器\"><a href=\"#属性选择器\" class=\"headerlink\" title=\"属性选择器\"></a>属性选择器</h4><p>作用：根据元素的属性值选中一组元素<br>语法1：[属性名] 选择含有指定属性的元素<br>语法2：[属性名=属性值] 选择含有指定属性和属性值的元素<br>语法3：[属性名^=属性值] 选择属性值以指定值开头的元素<br>语法4：[属性名$=属性值] 选择属性值以指定值结尾的元素<br>语法5：[属性名*=属性值] 选择属性值中含有某值的元素<br>例子：<code>p[title]&#123;&#125;</code> <code>p[title=e]&#123;&#125;</code> <code>p[title^=e]&#123;&#125;</code> <code>p[title$=e]&#123;&#125;</code> <code>p[title*=e]&#123;&#125;</code></p>\n<h3 id=\"复合选择器\"><a href=\"#复合选择器\" class=\"headerlink\" title=\"复合选择器\"></a>复合选择器</h3><h4 id=\"交集选择器\"><a href=\"#交集选择器\" class=\"headerlink\" title=\"交集选择器\"></a>交集选择器</h4><ul>\n<li>作用：选中同时复合多个条件的元素</li>\n<li>语法：<code>选择器1选择器2选择器3选择器n&#123;&#125;</code></li>\n<li><em>注意点：交集选择器中如果有元素选择器，必须使用元素选择器开头</em></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.red</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.a</span><span class=\"selector-class\">.b</span><span class=\"selector-class\">.c</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"并集选择器\"><a href=\"#并集选择器\" class=\"headerlink\" title=\"并集选择器\"></a>并集选择器</h4><ul>\n<li>作用：同时选择多个选择器对应的元素</li>\n<li>语法：<code>选择器1,选择器2,选择器3,选择器n&#123;&#125;</code></li>\n<li>例子：<code>#b1,.p1,h1,span,div.red&#123;&#125;</code></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h1</span>,<span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"关系选择器\"><a href=\"#关系选择器\" class=\"headerlink\" title=\"关系选择器\"></a>关系选择器</h3><ul>\n<li>父元素：直接包含子元素的元素叫做父元素</li>\n<li>子元素：直接被父元素包含的元素是子元素</li>\n<li>祖先元素：直接或间接包含后代元素的元素叫做祖先元素；一个元素的父元素也是它的祖先元素</li>\n<li>后代元素：直接或间接被祖先元素包含的元素叫做后代元素；子元素也是后代元素</li>\n<li>兄弟元素：拥有相同父元素的元素是兄弟元素</li>\n</ul>\n<h4 id=\"子元素选择器\"><a href=\"#子元素选择器\" class=\"headerlink\" title=\"子元素选择器\"></a>子元素选择器</h4><ul>\n<li>作用：选中指定父元素的指定子元素</li>\n<li>语法：<code>父元素 &gt; 子元素</code></li>\n<li>例子：<code>A &gt; B</code></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.box</span> &gt; <span class=\"selector-tag\">p</span> &gt; <span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: orange;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"后代元素选择器\"><a href=\"#后代元素选择器\" class=\"headerlink\" title=\"后代元素选择器\"></a>后代元素选择器</h4><ul>\n<li>作用：选中指定元素内的指定后代元素</li>\n<li>语法：<code>祖先 后代</code></li>\n<li>例子：<code>A B</code></li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> <span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: skyblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"兄弟元素选择器\"><a href=\"#兄弟元素选择器\" class=\"headerlink\" title=\"兄弟元素选择器\"></a>兄弟元素选择器</h4><ul>\n<li>作用：选择下一个兄弟</li>\n<li>语法：<code>前一个 + 下一个</code> <code>前一个 + 下一组</code></li>\n<li>例子1：<code>A1 + A2</code>（选择下一个兄弟）</li>\n<li>例子2： <code>A1 ~ An</code>（选择下边所有的兄弟）</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> + <span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> ~ <span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"伪类选择器\"><a href=\"#伪类选择器\" class=\"headerlink\" title=\"伪类选择器\"></a>伪类选择器</h3><p>伪类（不存在的类，特殊的类）</p>\n<p>伪类用来描述一个元素的特殊状态，比如：第一个子元素、被点击的元素、鼠标移入的元素.…</p>\n<p>伪类一般情况下都是使用<code>:</code>开头</p>\n<ul>\n<li><code>:first-child</code> 第一个子元素</li>\n<li><code>:last-child</code> 最后一个子元素</li>\n<li><code>:nth-child()</code> 选中第n个子元素<ul>\n<li>n：第n个，n的范围0到正无穷</li>\n<li>2n或even：选中偶数位的元素</li>\n<li>2n+1或odd：选中奇数位的元素</li>\n</ul>\n</li>\n</ul>\n<p>以上这些伪类都是根据所有的子元素进行排序的</p>\n<ul>\n<li><code>:first-of-type</code> 同类型中的第一个子元素</li>\n<li><code>:last-of-type</code> 同类型中的最后一个子元素</li>\n<li><code>:nth-of-type()</code> 选中同类型中的第n个子元素</li>\n</ul>\n<p>这几个伪类的功能和上述的类似，不同点是他们是在同类型元素中进行排序的</p>\n<ul>\n<li><code>:not()</code>否定伪类，将符合条件的元素从选择器中去除</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* ul下所有li，黑色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ul下第偶数个li，黄色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">2</span>n) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: yellow;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ul下第奇数个li，绿色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(odd) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ul下第一个li，红色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:first</span>-child &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ul下最后一个li，黄色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: orange;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301112038812.png\" alt=\"image-20230111203813718\"></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">ul</span> &gt; <span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:not</span>(<span class=\"selector-pseudo\">:nth-of-type</span>(<span class=\"number\">3</span>))&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:yellowgreen;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*not()就是取消这一行的颜色*/</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>:link</code> 未访问的链接(正常的链接)</li>\n<li><code>:visited</code>已访问的链接<ul>\n<li>由于隐私的原因，所以<code>visited</code>这个伪类只能修改链接的颜色</li>\n</ul>\n</li>\n<li><code>:hover</code> 鼠标悬停的链接（用来表示鼠标移入的状态）</li>\n<li><code>:active</code> 鼠标点击的链接（用来表示鼠标点击）</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* unvisited link */</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:link</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* visited link */</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:visited</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: yellow;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* mouse over link */</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* selected link */</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"伪元素选择器\"><a href=\"#伪元素选择器\" class=\"headerlink\" title=\"伪元素选择器\"></a>伪元素选择器</h3><p>伪元素，表示页面中一些特殊的并不真实的存在的元素（特殊的位置）</p>\n<p>伪元素使用<code>::</code>开头</p>\n<ul>\n<li><code>::first-letter</code> 表示第一个字母</li>\n<li><code>::first-line</code> 表示第一行</li>\n<li><code>::selection</code> 表示选中的内容</li>\n<li><code>::before</code> 元素的开始</li>\n<li><code>::after</code> 元素的最后</li>\n<li><code>::before</code>和<code>::after</code> 必须结合<code>content</code>属性来使用</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 段落首字母设置大小为30px */</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">::first-letter</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 段落第一行设置为黄色背景 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">::first-line</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: yellow;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 段落选中的部分变绿色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">::selection</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: green；</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* div前加上内容 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;BEFORE&#x27;</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* div后加上内容 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;AFTER&#x27;</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"样式继承及颜色长度单位介绍\"><a href=\"#样式继承及颜色长度单位介绍\" class=\"headerlink\" title=\"样式继承及颜色长度单位介绍\"></a>样式继承及颜色长度单位介绍</h2><h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3><p>样式的继承，我们为一个元素设置的样式同时也会应用到它的后代元素上</p>\n<p>继承是发生在祖先后后代之间的</p>\n<p>继承的设计是为了方便我们的开发，利用继承我们可以将一些通用的样式统一设置到共同的祖先元素上，</p>\n<p>这样只需设置一次即可让所有的元素都具有该样式</p>\n<p>注意:并不是所有的样式都会被继承：</p>\n<p>比如背景相关的，布局相关等的这些样式都不会被继承。</p>\n<ul>\n<li>样式的冲突</li>\n</ul>\n<p>​    -当我们通过不同的选择器，选中相同的元素，并且为相同的样式设置不同的值时，此时就发生了样式的冲突。</p>\n<p>发生样式冲突时，应用哪个样式由选择器的权重（优先级）决定</p>\n<ul>\n<li><p>选择器的权重：</p>\n<p>内联样式        1,0,0,0</p>\n<p>id选择器        0,1,0,0</p>\n<p>类和伪类选择器        0,0,1,0</p>\n<p>元素选择器        0,0,0,1</p>\n<p>通配选择器        0,0,0,0</p>\n<p>继承的样式        没有优先级</p>\n</li>\n</ul>\n<p>比较优先级时，需要将所有的选择器的优先级进行相加计算，最后优先级越高，则越优先显示(分组选择器是单独计算的</p>\n<p>选择器的累加不会超过其最大的数量级，类选择器在高也不会超过id选择器</p>\n<p>如果优先级计算后相同,此时则优先使用靠下的样式</p>\n<p>可以在某一个样式的后边添加<code>!important</code>，则此时该样式会获取到最高的优先级，甚至超过内联样式，</p>\n<p><em>注意：在开发中一定要慎用！</em></p>\n<h3 id=\"长度单位\"><a href=\"#长度单位\" class=\"headerlink\" title=\"长度单位\"></a>长度单位</h3><p>长度单位:</p>\n<ul>\n<li>像素</li>\n</ul>\n<p>​    - 屏幕（显示器）实际上是由一个一个的小点点构成的</p>\n<p>​    - 不同屏幕的像素大小是不同的，像素越小的屏幕显示的效果越清晰-所以同样的200px在不同的设备下显示效果不一样</p>\n<ul>\n<li>百分比</li>\n</ul>\n<p>​    -也可以将属性值设置为相对于其父元素属性的百分比</p>\n<p>​    -设置百分比可以使子元素跟随父元素的改变而改变</p>\n<p>em</p>\n<p>em是相对于元素的字体大小来计算的，<code>1em = &lt;self&gt;.font-size</code>，也就说em值会根据元素本身的字体大小的改变而改变</p>\n<p>rem</p>\n<p>rem是相对于根元素的字体大小来计算，<code>1em = &lt;root&gt;.font-size</code>，也就说em值会根据根元素的字体大小的改变而改变</p>\n<p>(em改变字体大小就能改变内容大小</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box4</span> &#123;</span><br><span class=\"line\">       <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">       <span class=\"attribute\">width</span>: <span class=\"number\">10rem</span>; <span class=\"comment\">/*当时用rem时，不管怎么改本元素的font-size都是不会变的。需要定义root元素的font-size才可以 */</span></span><br><span class=\"line\">       <span class=\"attribute\">height</span>: <span class=\"number\">10rem</span>;</span><br><span class=\"line\">       <span class=\"attribute\">background-color</span>: red;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"颜色单位\"><a href=\"#颜色单位\" class=\"headerlink\" title=\"颜色单位\"></a>颜色单位</h3><p>在css中可以直接使用颜色名来设置各种颜色</p>\n<p>比如:red、orange、yellow、 blue、green … 但是在css中直接使用颜色名是非常的不方便</p>\n<ul>\n<li>RGB值:</li>\n</ul>\n<p>RGB通过三种颜色的不同浓度来调配出不同的颜色</p>\n<p>R red,G green , B blue</p>\n<p>每一种颜色的范围在0 - 255 (0% - 100%)之间</p>\n<p>语法:RGB(红色,绿色,蓝色)</p>\n<ul>\n<li>RGBA：</li>\n</ul>\n<p>就是在rgb的基础上增加了一个a表示不透明度</p>\n<p>需要四个值，前三个和rgb一样，第四个表示不透明度</p>\n<p>1表示完全不透明 0表示完全透明 .5半透明</p>\n<ul>\n<li>十六进制的RGB值:</li>\n</ul>\n<p>语法:#红色绿色蓝色</p>\n<p>颜色浓度通过00-ff</p>\n<p>如果颜色两位两位重复可以进行简写</p>\n<p>#aabbcc –&gt; #abc</p>\n<ul>\n<li>HSL值 HSLA值</li>\n</ul>\n<p>H 色相(0 - 360)</p>\n<p>S 饱和度，颜色的浓度 0% - 100%</p>\n<p>L 亮度，颜色的亮度 0% -100%</p>\n<h2 id=\"盒模型\"><a href=\"#盒模型\" class=\"headerlink\" title=\"盒模型\"></a>盒模型</h2><h3 id=\"文档流\"><a href=\"#文档流\" class=\"headerlink\" title=\"文档流\"></a>文档流</h3><p>网页是一个多层的结构，一层摞着一层</p>\n<p>通过css可以分别为每一层来设置样式</p>\n<p>作为用户来讲只能看到最顶上一层</p>\n<p>这些层中，最底下的一层称为文档流，文档流是网页的基础</p>\n<p>​        我们所创建的元素默认都是在文档流中进行排列</p>\n<p>对于我们来元素主要有两个状态在文档流中</p>\n<ul>\n<li><p>不在文档流中（脱离文档流）</p>\n</li>\n<li><p>元素在文档流中有什么特点:</p>\n<ul>\n<li><p>块元素</p>\n<p>块元素会在页面中独占一行(自上向下垂直排列）</p>\n<p>默认宽度是父元素的全部（会把父元素撑满）</p>\n<p>默认高度是被内容撑开（子元素）</p>\n</li>\n<li><p>行内克素</p>\n<p>行内元素不会独占页面的一行，只占自身的大小</p>\n<p>行内元素在页面中左向右水平排列（书写习惯一致）</p>\n<p>如果一行之中不能容纳下所有的行内元素，则元素会换到第二行继续自左向右排列（书写习惯一致）</p>\n<p>行内元素的默认宽度和高度都是被内容撑开</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"盒模型-1\"><a href=\"#盒模型-1\" class=\"headerlink\" title=\"盒模型\"></a>盒模型</h3><p><img src=\"https://cdn.jsdelivr.net/gh/overplain/pico/img/202301141442677.png\" alt=\"image-20230113213021324\"></p>\n<ul>\n<li><p>盒模型、盒子模型、框模型</p>\n<ul>\n<li><p>css将页面中所有元素都设置为了一个矩形的盒子</p>\n</li>\n<li><p>讲元素设置为矩形的盒子后，对页面的布局就变成将不同的盒子放到不同的位置</p>\n</li>\n<li><p><em>盒子可见框的大小，由内容区、内边距和边框共同决定，所以在计算盒子大小时，需要将这三个区域加到一起计算</em></p>\n</li>\n</ul>\n</li>\n</ul>\n<p>每一个盒子由以下几个部分组成：</p>\n<p><strong>可见框由内容区、边框、内边距组成</strong></p>\n<h4 id=\"内容区（content）\"><a href=\"#内容区（content）\" class=\"headerlink\" title=\"内容区（content）\"></a>内容区（content）</h4><ul>\n<li>元素中的所有的子元素和文本内容都在内容区中</li>\n<li>内容去的大小由width和height两个属性来设置</li>\n<li><strong>width设置内容区的宽度</strong></li>\n<li><strong>height设置内容区的高度</strong></li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box1&#123;</span><br><span class=\"line\">    width: 200px; </span><br><span class=\"line\">    height: 200px; </span><br><span class=\"line\">    background-color: #bfa;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"内边距（padding）\"><a href=\"#内边距（padding）\" class=\"headerlink\" title=\"内边距（padding）\"></a>内边距（padding）</h4><ul>\n<li><p>内边距，也叫填充，是内容区和边框之间的空间</p>\n<ul>\n<li><code>padding-top</code> 上内边距</li>\n<li><code>padding-right</code> 右内边距</li>\n<li><code>padding-bottom</code>下内边距</li>\n<li><code>padding-left</code> 左内边距</li>\n</ul>\n</li>\n<li><p>padding内边距的简写属性，可以同时指定四个方向的内边距，规则和边框中属性值设置一样</p>\n</li>\n<li><p><strong>内边距的设置会影响到盒子的大小，背景颜色会延伸到内边距上</strong></p>\n</li>\n<li><p><strong>文字、子元素只会出现在内容区内不会出现在内边距上</strong></p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    <span class=\"selector-class\">.outer</span>&#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">border</span>: <span class=\"number\">10px</span> orange solid;</span><br><span class=\"line\">        <span class=\"attribute\">padding-right</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">padding-bottom</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">padding-left</span>: <span class=\"number\">100px</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"selector-class\">.inner</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span><br><span class=\"line\">        <span class=\"attribute\">background-color</span>: greenyellow;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;<span class=\"selector-tag\">div</span> class=&quot;outer&quot;&gt;</span><br><span class=\"line\">    &lt;<span class=\"selector-tag\">div</span> class=&quot;inner&quot;&gt;&lt;/<span class=\"selector-tag\">div</span>&gt;</span><br><span class=\"line\">&lt;/<span class=\"selector-tag\">div</span>&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"边框（border）\"><a href=\"#边框（border）\" class=\"headerlink\" title=\"边框（border）\"></a>边框（border）</h4><ul>\n<li>边框属于盒子边缘，边框里边属于盒子内部，出了边框都是盒子的外部</li>\n<li><strong>边框也会影响盒子的大小</strong></li>\n<li>设置边框至少需要三个样式</li>\n<li><strong>border-width 边框的宽度：默认3px</strong>(可以省略不写)<br>border-top-width 上边框的宽度<br>border-right-width 右边框的宽度<br>border-bottom-width 下边框的宽度<br>border-left-width 左边框的宽度</li>\n<li><strong>border-color 边框的颜色：默认使用color的颜色值</strong><br>border-top-color 上边框的颜色<br>border-right-color 右边框的颜色<br>border-bottom-color 下边框的颜色<br>border-left-color 左边框的颜色</li>\n<li><strong>border-style 边框的样式：没有默认值，必须指定</strong><br>border-top-style 上边框的样式<br>border-right-style 右边框的样式<br>border-bottom-style 下边框的样式<br>border-left-style 左边框的样式</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box1</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">border-width</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-color</span>: red;</span><br><span class=\"line\">    <span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\">    \tsolid  实线 </span></span><br><span class=\"line\"><span class=\"comment\">    \tdotted 点状虚线 </span></span><br><span class=\"line\"><span class=\"comment\">    \tdashed 虚线 </span></span><br><span class=\"line\"><span class=\"comment\">    \tdouble 双线 </span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"attribute\">border-style</span>: solid;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><p>不论是<code>border-width</code> 、 <code>border-color</code> 、<code>border-style</code> 还是其衍生出来的属性写法，都可以指定每个方向的边框情况</p>\n<p>设定几个值就决定了对应方向的宽度、颜色或样式</p>\n<ul>\n<li>四个值：<code>上 右 下 左</code></li>\n<li>三个值：<code>上 左右 下</code></li>\n<li>两个值：<code>上下 左右</code></li>\n<li>一个值：<code>上下左右</code></li>\n<li>【顺时针方向设置】</li>\n</ul>\n</li>\n<li><p>border简写属性：通过该属性可以同时设置边框所有的相关样式，并且没有顺序要求</p>\n<ul>\n<li><code>border-top</code> 上边框的宽度、颜色和样式</li>\n<li><code>border-right</code> 右边框的宽度、颜色和样式</li>\n<li><code>border-bottom</code> 下边框的宽度、颜色和样式</li>\n<li><code>border-left</code> 左边框的宽度、颜色和样式</li>\n<li>可以不要哪边写个none就行了</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.box1</span>&#123; </span><br><span class=\"line\">\t<span class=\"attribute\">border</span>: <span class=\"number\">10px</span> red solid;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"外边距（margin）\"><a href=\"#外边距（margin）\" class=\"headerlink\" title=\"外边距（margin）\"></a>外边距（margin）</h4><p>外边距，也叫空白边，位于盒子的最外围，是添加在边框外周围的空间。空白边使盒子之间不会紧凑地连接在一起，是CSS 布局的一个重要手段</p>\n<p><strong>外边距不会影响盒子可见框的大小，但是外边距会影响盒子的位置和占用空间</strong></p>\n<p>margin外边距的简写属性，可以同时指定四个方向的内边距，规则和边框中属性值设置一样</p>\n<p>margin会影响到盒子实际占用空间</p>\n<p>一共有四个方向的外边距：</p>\n<ul>\n<li><p><code> margin-top</code> :上外边距</p>\n<ul>\n<li>设置正值，元素自身向下移动</li>\n<li>设置负值，元素自身向上移动</li>\n</ul>\n</li>\n<li><p> <code> margin-right</code>:右外边距</p>\n</li>\n<li><p>设置正值，其右边的元素向右移动</p>\n</li>\n<li><p>设置负值，其右边的元素向左移动</p>\n</li>\n<li><p>上述说法并不准确，对于块元素，设置<code>margin-right</code>不会产生任何效果</p>\n</li>\n<li><p> <code>margin-bottom</code>:下外边距</p>\n</li>\n<li><p>设置正值，其下边的元素向下移动</p>\n</li>\n<li><p>设置负值，其下边的元素向上移动</p>\n</li>\n<li><p>上述说法并不准确，对于块元素，会有垂直方向上的边距重叠问题</p>\n</li>\n<li><p><code>  margin-left</code>:左外边距</p>\n<ul>\n<li>设置正值，元素自身向右移动</li>\n<li>设置负值，元素自身向左移动</li>\n</ul>\n</li>\n</ul>\n<p>元素在页面中是按照自左向右的顺序排列的，所以默认情况下</p>\n<ul>\n<li>如果我们设置的左和上外边距则会移动元素自身</li>\n<li>而设置下和右外边距会移动其他元素</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.box1 &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    background-color: #bfa;</span><br><span class=\"line\">    border: 10px orange solid;</span><br><span class=\"line\">    margin-bottom: 100px;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.box2 &#123;</span><br><span class=\"line\">    width: 200px;</span><br><span class=\"line\">    height: 200px;</span><br><span class=\"line\">    background-color: #bfa;</span><br><span class=\"line\">    border: 10px red solid;</span><br><span class=\"line\">    margin-top: 100px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"水平方向布局\"><a href=\"#水平方向布局\" class=\"headerlink\" title=\"水平方向布局\"></a>水平方向布局</h3><p>元素在其父元素中水平方向的位置由以下几个属性共同决定，一个元素在其父元素中，水平布局<strong>必须要满足</strong>以下的等式</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">margin-left + border-left + padding-left + width + padding-right + border-right + margin-right = 其父元素的宽度</span><br></pre></td></tr></table></figure>\n\n<p>以上等式必须满足，如果相加结果使等式不成立，则称为<strong>过渡约束</strong></p>\n<ul>\n<li><p>如果这七个值中没有<code>auto</code>的情况，则浏览器会自动调整<code>margin-right</code>值以使等式满足</p>\n<p><code>100 + 0 + 0 + 200 + 0 + 0 + 0 = 800</code> ==&gt; <code>100 + 0 + 0 + 200 + 0 + 0 + 500 = 800</code></p>\n</li>\n<li><p>如果这七个值中有<code>auto</code>的情况，则会自动调整<code>auto</code>值以使等式成立</p>\n</li>\n<li><p>这七个值中有三个值可以设置为<code>auto</code> ：<code>width</code>、<code>margin-left</code>、<code>maring-right</code></p>\n</li>\n</ul>\n<p>1/如果某个值为auto，则会自动调整<code>auto</code>的那个值以使等式成立</p>\n<p>2/如果宽度为<code>auto</code>，则宽度会调整到最大，其他<code>auto</code>的外边距会自动设置为0</p>\n<p>3/如果外边距都为<code>auto</code>，则<code>auto</code>的外边距会自动均分以使等式成立</p>\n<p>【所以我们进程利用这个特点来使一个元素在其都元素中水平居中】</p>\n<h3 id=\"垂直方向布局\"><a href=\"#垂直方向布局\" class=\"headerlink\" title=\"垂直方向布局\"></a>垂直方向布局</h3><p>默认情况下父元素的高度被内容撑开</p>\n<h4 id=\"元素溢出\"><a href=\"#元素溢出\" class=\"headerlink\" title=\"元素溢出\"></a>元素溢出</h4><p>子元素是在父元素的内容区中排列的，如果子元素的大小超过了父元素，则子元素会从父元素中溢出</p>\n<p>使用<code>overflow</code>/<code>overflow-x</code>/<code>overflow-y</code>属性来设置父元素如何处理溢出的子元素</p>\n<p>可选值：<code>visible</code>/<code>hidden</code>/<code>scroll</code>/<code>auto</code></p>\n<p><code>visible</code> 溢出内容会在父元素外部位置显示，默认值</p>\n<p><code>hidden</code> 溢出内容会被裁剪，不会显示</p>\n<p><code>scroll</code> 生成两个滚动条，通过滚动条来查看完整的内容</p>\n<p><code>auto</code> 根据需要生成滚动条</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-class\">.box1</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">background-color</span>: <span class=\"number\">#bfa</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">border</span>: <span class=\"number\">10px</span> orange solid;</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"attribute\">overflow</span>: visible; <span class=\"comment\">/* 默认值 */</span></span></span><br><span class=\"line\"><span class=\"language-css\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box1&quot;</span>&gt;</span></span><br><span class=\"line\">    Lorem ipsum dolor sit amet consectetur adipisicing elit. Asperiores aspernatur illo inventore</span><br><span class=\"line\">    deleniti laudantium quaerat excepturi sed quidem tempore? Eaque, cumque porro. Fuga quam error cupiditate quasi</span><br><span class=\"line\">    eveniet in numquam!</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"边距折叠\"><a href=\"#边距折叠\" class=\"headerlink\" title=\"边距折叠\"></a>边距折叠</h4><p>垂直外边距的重叠（折叠）：相邻的垂直方向外边距会发生重叠现象</p>\n<h4 id=\"兄弟元素\"><a href=\"#兄弟元素\" class=\"headerlink\" title=\"兄弟元素\"></a>兄弟元素</h4><p>兄弟元素间的相邻，垂直外边距会取两者之间的较大值（两者都是正值）</p>\n<p>特殊情况：</p>\n<ul>\n<li><p>如果相邻的外边距一正一负，则取两者的和</p>\n</li>\n<li><p>如果相邻的外边距都是负值，则取两者中绝对值较大的</p>\n</li>\n<li><pre><code class=\"html\">.box1,.box2&#123; \n    width:200px; \n    height:200px; \n    font-size:100px;\n&#125;\n\n.boxl&#123;\n    background-color: #bfa;\n    /*设置一个下外边距*/\n    margin-bottom: 100px;\n&#125;\n\n.box2&#123;\n    background-color: orange;\n    /*设置一个上外边距*/\n    margin-top: 100px;\n&#125;\n</code></pre>\n</li>\n</ul>\n<p>兄弟元素之间的外边距的重叠，对于开发是有利的，所以我们不需要进行处理</p>\n"},{"title":"洛谷入门难度刷题记录","abbrlink":"de2ba020","date":"2023-01-18T11:12:44.000Z","cover":"https://images.pexels.com/photos/14246458/pexels-photo-14246458.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1","_content":"\n# [NOIP2002 普及组] 级数求和\n\n## 题目描述\n\n已知：$S_n= 1+\\frac{1}{2}+\\frac{1}{3}+…+\\frac{1}{n}$。显然对于任意一个整数 $k$，当 $n$ 足够大的时候，$S_n>k$。\n\n现给出一个整数 $k$，要求计算出一个最小的 $n$，使得 $S_n>k$。\n\n## 输入格式\n\n一个正整数 $k$。\n\n## 输出格式\n\n一个正整数 $n$。\n\n## 样例 #1\n\n### 样例输入 #1\n\n```\n1\n```\n\n### 样例输出 #1\n\n```\n2\n```\n\n## 提示\n\n**【数据范围】**\n\n对于 $100\\%$ 的数据，$1\\le k \\le 15$。\n\n**【题目来源】**\n\nNOIP 2002 普及组第一题\n\n## 解答：\n\n```c\n#include<stdio.h>\nint main()\n{\n    int k,n;\n\tdouble sn=0.0;\n    scanf(\"%d\",&k);\n    for(n=1; ;n++)\n\t{\n\tsn+=1.0/n;\n\tif(sn>k*1.0)\n\tbreak;\n}\n    printf(\"%d\",n);\nreturn 0;\n}\n```\n\n","source":"_posts/洛谷入门难度刷题记录.md","raw":"---\ntitle: 洛谷入门难度刷题记录\nabbrlink: de2ba020\ndate: 2023-01-18 19:12:44\ntags:\ncategories: 刷题日记\ncover: https://images.pexels.com/photos/14246458/pexels-photo-14246458.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\n---\n\n# [NOIP2002 普及组] 级数求和\n\n## 题目描述\n\n已知：$S_n= 1+\\frac{1}{2}+\\frac{1}{3}+…+\\frac{1}{n}$。显然对于任意一个整数 $k$，当 $n$ 足够大的时候，$S_n>k$。\n\n现给出一个整数 $k$，要求计算出一个最小的 $n$，使得 $S_n>k$。\n\n## 输入格式\n\n一个正整数 $k$。\n\n## 输出格式\n\n一个正整数 $n$。\n\n## 样例 #1\n\n### 样例输入 #1\n\n```\n1\n```\n\n### 样例输出 #1\n\n```\n2\n```\n\n## 提示\n\n**【数据范围】**\n\n对于 $100\\%$ 的数据，$1\\le k \\le 15$。\n\n**【题目来源】**\n\nNOIP 2002 普及组第一题\n\n## 解答：\n\n```c\n#include<stdio.h>\nint main()\n{\n    int k,n;\n\tdouble sn=0.0;\n    scanf(\"%d\",&k);\n    for(n=1; ;n++)\n\t{\n\tsn+=1.0/n;\n\tif(sn>k*1.0)\n\tbreak;\n}\n    printf(\"%d\",n);\nreturn 0;\n}\n```\n\n","slug":"洛谷入门难度刷题记录","published":1,"updated":"2023-01-18T11:55:14.134Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clf0opdj30008hkty7ml6bben","content":"<h1 id=\"NOIP2002-普及组-级数求和\"><a href=\"#NOIP2002-普及组-级数求和\" class=\"headerlink\" title=\"[NOIP2002 普及组] 级数求和\"></a>[NOIP2002 普及组] 级数求和</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>已知：$S_n= 1+\\frac{1}{2}+\\frac{1}{3}+…+\\frac{1}{n}$。显然对于任意一个整数 $k$，当 $n$ 足够大的时候，$S_n&gt;k$。</p>\n<p>现给出一个整数 $k$，要求计算出一个最小的 $n$，使得 $S_n&gt;k$。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h2><p>一个正整数 $k$。</p>\n<h2 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h2><p>一个正整数 $n$。</p>\n<h2 id=\"样例-1\"><a href=\"#样例-1\" class=\"headerlink\" title=\"样例 #1\"></a>样例 #1</h2><h3 id=\"样例输入-1\"><a href=\"#样例输入-1\" class=\"headerlink\" title=\"样例输入 #1\"></a>样例输入 #1</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"样例输出-1\"><a href=\"#样例输出-1\" class=\"headerlink\" title=\"样例输出 #1\"></a>样例输出 #1</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h2><p><strong>【数据范围】</strong></p>\n<p>对于 $100%$ 的数据，$1\\le k \\le 15$。</p>\n<p><strong>【题目来源】</strong></p>\n<p>NOIP 2002 普及组第一题</p>\n<h2 id=\"解答：\"><a href=\"#解答：\" class=\"headerlink\" title=\"解答：\"></a>解答：</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> k,n;</span><br><span class=\"line\">\t<span class=\"type\">double</span> sn=<span class=\"number\">0.0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;k);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(n=<span class=\"number\">1</span>; ;n++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\tsn+=<span class=\"number\">1.0</span>/n;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(sn&gt;k*<span class=\"number\">1.0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,n);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"NOIP2002-普及组-级数求和\"><a href=\"#NOIP2002-普及组-级数求和\" class=\"headerlink\" title=\"[NOIP2002 普及组] 级数求和\"></a>[NOIP2002 普及组] 级数求和</h1><h2 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h2><p>已知：$S_n= 1+\\frac{1}{2}+\\frac{1}{3}+…+\\frac{1}{n}$。显然对于任意一个整数 $k$，当 $n$ 足够大的时候，$S_n&gt;k$。</p>\n<p>现给出一个整数 $k$，要求计算出一个最小的 $n$，使得 $S_n&gt;k$。</p>\n<h2 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h2><p>一个正整数 $k$。</p>\n<h2 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h2><p>一个正整数 $n$。</p>\n<h2 id=\"样例-1\"><a href=\"#样例-1\" class=\"headerlink\" title=\"样例 #1\"></a>样例 #1</h2><h3 id=\"样例输入-1\"><a href=\"#样例输入-1\" class=\"headerlink\" title=\"样例输入 #1\"></a>样例输入 #1</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"样例输出-1\"><a href=\"#样例输出-1\" class=\"headerlink\" title=\"样例输出 #1\"></a>样例输出 #1</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h2><p><strong>【数据范围】</strong></p>\n<p>对于 $100%$ 的数据，$1\\le k \\le 15$。</p>\n<p><strong>【题目来源】</strong></p>\n<p>NOIP 2002 普及组第一题</p>\n<h2 id=\"解答：\"><a href=\"#解答：\" class=\"headerlink\" title=\"解答：\"></a>解答：</h2><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> k,n;</span><br><span class=\"line\">\t<span class=\"type\">double</span> sn=<span class=\"number\">0.0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;k);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(n=<span class=\"number\">1</span>; ;n++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\tsn+=<span class=\"number\">1.0</span>/n;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(sn&gt;k*<span class=\"number\">1.0</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,n);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"c++决策树代码分析","abbrlink":"ea3d45b1","date":"2023-11-17T08:49:43.000Z","cover":"https://images.pexels.com/photos/11879973/pexels-photo-11879973.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1","_content":"\n\n\n# 代码\n\n```c++\n * @Description: C++实现决策树\n * @Author: szq\n * @Github: https://github.com/MrQqqq\n * @Date: 2020-06-29 01:31:54\n * @LastEditors: szq\n * @LastEditTime: 2020-07-08 18:57:10\n * @FilePath: \\cpp\\src\\DecisionTree\\DecisionTree.cpp\n */\n\n#include<iostream>\n#include<math.h>\n#include<algorithm>\n#include\"DecisionTree.h\"\nusing namespace std;\n\n/**\n * @destription: 导入数据\n * @param {type} trainData：训练数据  trainLabel：训练标签\n * @return: 没有返回值\n */\nvoid DecisionTree::loadData(vector<vector<int>>& trainData, vector<int>& trainLabel) {\n    //如果数据特征向量的数量和数据集标签的数量不一样的时候，数据有问题\n    if (trainData.size() != trainLabel.size()) {\n        cerr << \"input error\" << endl;\n        return;\n    }\n    //初始化\n    this->trainData = trainData;\n    this->trainLabel = trainLabel;\n\n    //计算featureValues\n    for (auto data : trainData) {\n        for (int i = 0; i < data.size(); ++i) {\n            featureValues[i].insert(data[i]);\n        }\n    }\n}\n\n/**\n * @destription: 统计数据集中每个标签的数量，比如结果为1的数量和结果为2的数量\n * @param {type} dataset：数据集，是训练数据的子集，整型数组表示，每一个整数表示第几个训练数据\n * @return: 标签名，标签数的map\n */\nmap<int, int> DecisionTree::labelCount(vector<int>& dataset) {\n    map<int, int> res;\n    //遍历数据集，统计标签出现的次数\n    for (int index : dataset) {\n        res[trainLabel[index]]++;\n    }\n    return res;\n}\n\n/**\n * @destription: 计算信息熵，公式为-pi * log(pi)求和\n * @param {type} ：dataset：数据集\n * @return: 信息熵\n */\n\ndouble DecisionTree::caculateEntropy(vector<int>& dataset) {\n    map<int, int> label_count = labelCount(dataset);\n    int len = dataset.size();\n    double result = 0;\n    for (auto count : label_count) {\n        double pi = count.second / static_cast<double>(len);\n        result -= pi * log2(pi);\n    }\n    return result;\n}\n\n/**\n * @destription: 根据特征名来划分子集\n * @param {type} dataset：数据集\n * @param feature:第几个特征\n * @param value:第几个特征的特征值\n * @return: 返回划分的子集\n */\nvector<int> DecisionTree::splitDataset(vector<int>& dataset, int& feature, int& value) {\n    vector<int> res;\n    for (int index : dataset) {\n        if (trainData[index][feature] == value) {\n            res.push_back(index);\n        }\n    }\n    return res;\n}\n\n/**\n * @destription: 计算信息熵\n * @param {type}\n * @return:\n */\ndouble DecisionTree::caculateGain(vector<int>& dataset, int& feature) {\n    set<int> values = featureValues[feature];\n    double result = 0;\n    for (int value : values) {\n        vector<int> subDataset = splitDataset(dataset, feature, value);\n        result += subDataset.size() / static_cast<double>(dataset.size()) * caculateEntropy(subDataset);\n    }\n    return caculateEntropy(dataset) - result;\n\n}\n\n/**\n * @destription: 获取标签统计中出现次数最多的标签\n * @param labelCount:标签统计\n * @return: 返回出现次数最多的标签名\n */\nint DecisionTree::getMaxTimesLabel(map<int, int>& labelCount) {\n    int max_count = 0;\n    int res;\n    for (auto label : labelCount) {\n        if (max_count <= label.second) {\n            max_count = label.second;\n            res = label.first;\n        }\n    }\n    return res;\n}\n\n/**\n * @destription: 获取特征集信息增益中最大的信息增益和所对应的特征\n * @param gains:特征集的信息增益\n * @return: 最大信息增益对应的特征\n */\nint DecisionTree::getMaxGainFeature(map<int, double>& gains) {\n    double max_gain = 0;\n    int max_gain_feature;\n    for (auto gain : gains) {\n        if (max_gain <= gain.second) {\n            max_gain = gain.second;\n            max_gain_feature = gain.first;\n        }\n    }\n    return max_gain_feature;\n}\n\n/**\n * @destription: 创建决策树\n * @param dataset:数据集\n * @param features:特征集\n * @return: 返回决策树根节点指针\n */\nTreeNode* DecisionTree::createTree(vector<int>& dataset, vector<int>& features) {\n    TreeNode* root = new TreeNode();\n    map<int, int> label_count = labelCount(dataset);\n    //如果特征集为空，则该树为单节点树，类别为标签中出现次数最多的标签\n    if (features.size() == 0) {\n        root->result = getMaxTimesLabel(label_count);\n        root->isLeaf = true;\n        return root;\n    }\n    //如果数据集中只包含一种标签，则该树为单节点树，类别为该标签\n    if (label_count.size() == 1) {\n        root->result = label_count.begin()->first;\n        root->isLeaf = true;\n        return root;\n    }\n\n    //计算特征集中每个特征的信息增益\n    map<int, double> gains;\n    for (int feature : features) {\n        gains[feature] = caculateGain(dataset, feature);\n    }\n\n    //获取最大信息增益的特征和最大的信息增益\n    int max_gain_feature = getMaxGainFeature(gains);\n    vector<int> subFeatures = features;\n    subFeatures.erase(find(subFeatures.begin(), subFeatures.end(), max_gain_feature));\n    for (int value : featureValues[max_gain_feature]) {\n        TreeNode* branch = new TreeNode();//创建分支\n        vector<int> subDataset = splitDataset(dataset, max_gain_feature, value);\n\n\n        //如果子集为空，将分支节点标记为叶节点，类别为标签中出现次数最多的标签\n        if (subDataset.size() == 0) {\n            branch->isLeaf = true;\n            branch->result = getMaxTimesLabel(label_count);\n            branch->attr = max_gain_feature;\n            branch->attr_value = value;\n            root->branchs.push_back(branch);\n        }\n        //否则递归创建树\n        else {\n            branch = createTree(subDataset, subFeatures);\n            branch->attr = max_gain_feature;\n            branch->attr_value = value;\n            root->branchs.push_back(branch);\n        }\n    }\n    return root;\n}\n\n/**\n * @destription: 构造函数\n * @param trainData:训练数据\n * @param trainLabel:训练数据标签\n * @param threshold:阈值\n * @return: 没有返回值\n */\nDecisionTree::DecisionTree(vector<vector<int>>& trainData, vector<int>& trainLabel, int& threshold) {\n    loadData(trainData, trainLabel);//导入数据\n    this->threshold = threshold;//设置阈值\n    vector<int> dataset(trainData.size());//数据集\n    for (int i = 0; i < trainData.size(); i++) {\n        dataset[i] = i;\n    }\n    vector<int> features(trainData[0].size());//属性集合\n    for (int i = 0; i < trainData[0].size(); i++) {\n        features[i] = i;\n    }\n    decisionTreeRoot = createTree(dataset, features);//创建决策树\n}\n\n/**\n * @destription: 分类\n * @param testData:测试数据\n * @param root:决策树根节点\n * @return: 返回分类结果\n */\nint DecisionTree::classify(vector<int>& testData, TreeNode* root) {\n    //如果决策树节点是叶子节点，直接返回结果\n    if (root->isLeaf) {\n        return root->result;\n    }\n    for (auto node : root->branchs) {\n        //找到分支，并在分支中再细分\n        if (testData[node->attr] == node->attr_value) {\n            return classify(testData, node);\n        }\n    }\n    return 0;\n}\n\n\nint main() {\n    //训练数据\n    vector<vector<int>> trainData = {\n        {0, 0, 0, 0},\n        {0, 0, 0, 1},\n        {0, 1, 0, 1},\n        {0, 1, 1, 0},\n        {0, 0, 0, 0},\n        {1, 0, 0, 0},\n        {1, 0, 0, 1},\n        {1, 1, 1, 1},\n        {1, 0, 1, 2},\n        {1, 0, 1, 2},\n        {2, 0, 1, 2},\n        {2, 0, 1, 1},\n        {2, 1, 0, 1},\n        {2, 1, 0, 2},\n        {2, 0, 0, 0}\n    };\n    //训练标签\n    vector<int> trainLabel = { 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0 };\n    int threshold = 0;\n    DecisionTree dt = DecisionTree(trainData, trainLabel, threshold);\n\n    //测试数据\n    vector<int> testData = { 2,1,1,1 };\n    TreeNode* root = dt.decisionTreeRoot;\n    int type = dt.classify(testData, root);\n    cout << type << endl;\n    return 0;\n}```\n```\n\n\n\n# 伪代码\n\n导入所需的库\n\n输入: \n\n训练数据 {0, 0, 0, 0},{0, 0, 0, 1}, {0, 1, 0, 1},{0, 1, 1, 0},……{2, 1, 0, 2},{2, 0, 0, 0} \n\n训练标签 trainLabel = {0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0};\n\n \n\n过程：\n\n1）创建计算的函数方法：\n\n  1、创建 loadData 方法；检测数据是否正确并返回数据    \n\n  2、创建 labelCount 方法：统计标签出现的次数\n\n  3、创建 calculateEntropy 方法：计算信息熵，公式为-pi * log(pi)求和   \n\n  4、创建 splitDataset 方法；根据特征名来划分子集 \n\n  5、创建 calculateGain 方法：计算具体的信息增益 \n\n  6、创建 getMaxTimesLabel 方法：得到出现次数最多的标签 \n\n  7、创建 getMaxGainFeature 方法：获取特征集信息增益中最大的信息增益和所对应的特征\n\n2） 创建 createTree决策树\n\n​    1、接受数据集和特征集作为参数\n\n​    2、创建根节点 root\n\n​    3、获取标签统计 label_count\n\n​    4、if 特征集为空，将根节点设为叶子节点，类别为标签中出现次数最多的标签，  \n\n递归返回，情形 (1)\n\n​    5、if数据集中只包含一种标签，将根节点设为叶子节点，类别为该标签，\n\n递归返回，情形 (2)\n\n \n\n选择最优划分属性向：\n\n​    6、计算特征集中每个特征的信息增益，存储在 gains 中（calculateEntropy 方法）\n\n​    7、获取最大信息增益的特征和最大的信息增益（calculateGain 方法）\n\n8、继续生成子树：\n\n​    \t1\\创建一个分支节点 branch\n\n​    \t2\\遍历最大信息增益特征的每个可能取值 value\n\n​      3\\创建一个子数据集 subDataset 通过调用 splitDataset 方法\n\n​      4\\如果子数据集为空，将分支节点标记为叶节点，类别为标签中出现次数最多的标签\t\n\n   递归返回，情形 (3)\n\n​      5\\否则，递归调用 createTree 方法创建子树，并将子树添加到分支节点\n\n​      6\\将分支节点添加到根节点的分支列表中\n\n​    \t7\\返回根节点\n\n​    \n\n3）创建 DecisionTree 构造函数\n\n​    1、接受训练数据、训练数据标签和阈值作为参数\n\n​    2、调用 loadData 方法导入数据\n\n​    3、设置阈值 threshold\n\n​    4、创建数据集 dataset，初始化为包含所有数据点的索引\n\n​    5、创建特征集 features，初始化为包含所有特征的索引\n\n​    6、调用 createTree 方法创建决策树，并将根节点存储在 decisionTreeRoot 中\n\n​    \n\n 4）创建 classify 方法：（目的是为了分类）\n\n​    1、接受测试数据和根节点作为参数\n\n​    2、如果根节点是叶子节点，直接返回结果\n\n​    3、遍历根节点的每个分支\n\n​      找到匹配测试数据的分支，然后递归调用 classify 方法\n\n​    4、return返回分类结果\n\n​    \n\n5）主函数 main 中\n\n  1、定义训练数据 trainData 和训练标签 trainLabel\n\n  2、创建 DecisionTree 对象 dt，传入 trainData、trainLabel 和阈值 threshold\n\n  3、定义测试数据 testData：调用 classify 方法对测试数据进行分类，传入决策树的根节点，将结果存储在 type 变量中\n\n  4、输出分类结果\n\n \n\n输出: 以 node 为根结点的决策树\n\n \n","source":"_posts/C++决策树代码分析.md","raw":"---\ntitle: c++决策树代码分析\nabbrlink: ea3d45b1\ndate: 2023-11-17 16:49:43\ntags:\ncategories: 学习笔记\ncover: https://images.pexels.com/photos/11879973/pexels-photo-11879973.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\n---\n\n\n\n# 代码\n\n```c++\n * @Description: C++实现决策树\n * @Author: szq\n * @Github: https://github.com/MrQqqq\n * @Date: 2020-06-29 01:31:54\n * @LastEditors: szq\n * @LastEditTime: 2020-07-08 18:57:10\n * @FilePath: \\cpp\\src\\DecisionTree\\DecisionTree.cpp\n */\n\n#include<iostream>\n#include<math.h>\n#include<algorithm>\n#include\"DecisionTree.h\"\nusing namespace std;\n\n/**\n * @destription: 导入数据\n * @param {type} trainData：训练数据  trainLabel：训练标签\n * @return: 没有返回值\n */\nvoid DecisionTree::loadData(vector<vector<int>>& trainData, vector<int>& trainLabel) {\n    //如果数据特征向量的数量和数据集标签的数量不一样的时候，数据有问题\n    if (trainData.size() != trainLabel.size()) {\n        cerr << \"input error\" << endl;\n        return;\n    }\n    //初始化\n    this->trainData = trainData;\n    this->trainLabel = trainLabel;\n\n    //计算featureValues\n    for (auto data : trainData) {\n        for (int i = 0; i < data.size(); ++i) {\n            featureValues[i].insert(data[i]);\n        }\n    }\n}\n\n/**\n * @destription: 统计数据集中每个标签的数量，比如结果为1的数量和结果为2的数量\n * @param {type} dataset：数据集，是训练数据的子集，整型数组表示，每一个整数表示第几个训练数据\n * @return: 标签名，标签数的map\n */\nmap<int, int> DecisionTree::labelCount(vector<int>& dataset) {\n    map<int, int> res;\n    //遍历数据集，统计标签出现的次数\n    for (int index : dataset) {\n        res[trainLabel[index]]++;\n    }\n    return res;\n}\n\n/**\n * @destription: 计算信息熵，公式为-pi * log(pi)求和\n * @param {type} ：dataset：数据集\n * @return: 信息熵\n */\n\ndouble DecisionTree::caculateEntropy(vector<int>& dataset) {\n    map<int, int> label_count = labelCount(dataset);\n    int len = dataset.size();\n    double result = 0;\n    for (auto count : label_count) {\n        double pi = count.second / static_cast<double>(len);\n        result -= pi * log2(pi);\n    }\n    return result;\n}\n\n/**\n * @destription: 根据特征名来划分子集\n * @param {type} dataset：数据集\n * @param feature:第几个特征\n * @param value:第几个特征的特征值\n * @return: 返回划分的子集\n */\nvector<int> DecisionTree::splitDataset(vector<int>& dataset, int& feature, int& value) {\n    vector<int> res;\n    for (int index : dataset) {\n        if (trainData[index][feature] == value) {\n            res.push_back(index);\n        }\n    }\n    return res;\n}\n\n/**\n * @destription: 计算信息熵\n * @param {type}\n * @return:\n */\ndouble DecisionTree::caculateGain(vector<int>& dataset, int& feature) {\n    set<int> values = featureValues[feature];\n    double result = 0;\n    for (int value : values) {\n        vector<int> subDataset = splitDataset(dataset, feature, value);\n        result += subDataset.size() / static_cast<double>(dataset.size()) * caculateEntropy(subDataset);\n    }\n    return caculateEntropy(dataset) - result;\n\n}\n\n/**\n * @destription: 获取标签统计中出现次数最多的标签\n * @param labelCount:标签统计\n * @return: 返回出现次数最多的标签名\n */\nint DecisionTree::getMaxTimesLabel(map<int, int>& labelCount) {\n    int max_count = 0;\n    int res;\n    for (auto label : labelCount) {\n        if (max_count <= label.second) {\n            max_count = label.second;\n            res = label.first;\n        }\n    }\n    return res;\n}\n\n/**\n * @destription: 获取特征集信息增益中最大的信息增益和所对应的特征\n * @param gains:特征集的信息增益\n * @return: 最大信息增益对应的特征\n */\nint DecisionTree::getMaxGainFeature(map<int, double>& gains) {\n    double max_gain = 0;\n    int max_gain_feature;\n    for (auto gain : gains) {\n        if (max_gain <= gain.second) {\n            max_gain = gain.second;\n            max_gain_feature = gain.first;\n        }\n    }\n    return max_gain_feature;\n}\n\n/**\n * @destription: 创建决策树\n * @param dataset:数据集\n * @param features:特征集\n * @return: 返回决策树根节点指针\n */\nTreeNode* DecisionTree::createTree(vector<int>& dataset, vector<int>& features) {\n    TreeNode* root = new TreeNode();\n    map<int, int> label_count = labelCount(dataset);\n    //如果特征集为空，则该树为单节点树，类别为标签中出现次数最多的标签\n    if (features.size() == 0) {\n        root->result = getMaxTimesLabel(label_count);\n        root->isLeaf = true;\n        return root;\n    }\n    //如果数据集中只包含一种标签，则该树为单节点树，类别为该标签\n    if (label_count.size() == 1) {\n        root->result = label_count.begin()->first;\n        root->isLeaf = true;\n        return root;\n    }\n\n    //计算特征集中每个特征的信息增益\n    map<int, double> gains;\n    for (int feature : features) {\n        gains[feature] = caculateGain(dataset, feature);\n    }\n\n    //获取最大信息增益的特征和最大的信息增益\n    int max_gain_feature = getMaxGainFeature(gains);\n    vector<int> subFeatures = features;\n    subFeatures.erase(find(subFeatures.begin(), subFeatures.end(), max_gain_feature));\n    for (int value : featureValues[max_gain_feature]) {\n        TreeNode* branch = new TreeNode();//创建分支\n        vector<int> subDataset = splitDataset(dataset, max_gain_feature, value);\n\n\n        //如果子集为空，将分支节点标记为叶节点，类别为标签中出现次数最多的标签\n        if (subDataset.size() == 0) {\n            branch->isLeaf = true;\n            branch->result = getMaxTimesLabel(label_count);\n            branch->attr = max_gain_feature;\n            branch->attr_value = value;\n            root->branchs.push_back(branch);\n        }\n        //否则递归创建树\n        else {\n            branch = createTree(subDataset, subFeatures);\n            branch->attr = max_gain_feature;\n            branch->attr_value = value;\n            root->branchs.push_back(branch);\n        }\n    }\n    return root;\n}\n\n/**\n * @destription: 构造函数\n * @param trainData:训练数据\n * @param trainLabel:训练数据标签\n * @param threshold:阈值\n * @return: 没有返回值\n */\nDecisionTree::DecisionTree(vector<vector<int>>& trainData, vector<int>& trainLabel, int& threshold) {\n    loadData(trainData, trainLabel);//导入数据\n    this->threshold = threshold;//设置阈值\n    vector<int> dataset(trainData.size());//数据集\n    for (int i = 0; i < trainData.size(); i++) {\n        dataset[i] = i;\n    }\n    vector<int> features(trainData[0].size());//属性集合\n    for (int i = 0; i < trainData[0].size(); i++) {\n        features[i] = i;\n    }\n    decisionTreeRoot = createTree(dataset, features);//创建决策树\n}\n\n/**\n * @destription: 分类\n * @param testData:测试数据\n * @param root:决策树根节点\n * @return: 返回分类结果\n */\nint DecisionTree::classify(vector<int>& testData, TreeNode* root) {\n    //如果决策树节点是叶子节点，直接返回结果\n    if (root->isLeaf) {\n        return root->result;\n    }\n    for (auto node : root->branchs) {\n        //找到分支，并在分支中再细分\n        if (testData[node->attr] == node->attr_value) {\n            return classify(testData, node);\n        }\n    }\n    return 0;\n}\n\n\nint main() {\n    //训练数据\n    vector<vector<int>> trainData = {\n        {0, 0, 0, 0},\n        {0, 0, 0, 1},\n        {0, 1, 0, 1},\n        {0, 1, 1, 0},\n        {0, 0, 0, 0},\n        {1, 0, 0, 0},\n        {1, 0, 0, 1},\n        {1, 1, 1, 1},\n        {1, 0, 1, 2},\n        {1, 0, 1, 2},\n        {2, 0, 1, 2},\n        {2, 0, 1, 1},\n        {2, 1, 0, 1},\n        {2, 1, 0, 2},\n        {2, 0, 0, 0}\n    };\n    //训练标签\n    vector<int> trainLabel = { 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0 };\n    int threshold = 0;\n    DecisionTree dt = DecisionTree(trainData, trainLabel, threshold);\n\n    //测试数据\n    vector<int> testData = { 2,1,1,1 };\n    TreeNode* root = dt.decisionTreeRoot;\n    int type = dt.classify(testData, root);\n    cout << type << endl;\n    return 0;\n}```\n```\n\n\n\n# 伪代码\n\n导入所需的库\n\n输入: \n\n训练数据 {0, 0, 0, 0},{0, 0, 0, 1}, {0, 1, 0, 1},{0, 1, 1, 0},……{2, 1, 0, 2},{2, 0, 0, 0} \n\n训练标签 trainLabel = {0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0};\n\n \n\n过程：\n\n1）创建计算的函数方法：\n\n  1、创建 loadData 方法；检测数据是否正确并返回数据    \n\n  2、创建 labelCount 方法：统计标签出现的次数\n\n  3、创建 calculateEntropy 方法：计算信息熵，公式为-pi * log(pi)求和   \n\n  4、创建 splitDataset 方法；根据特征名来划分子集 \n\n  5、创建 calculateGain 方法：计算具体的信息增益 \n\n  6、创建 getMaxTimesLabel 方法：得到出现次数最多的标签 \n\n  7、创建 getMaxGainFeature 方法：获取特征集信息增益中最大的信息增益和所对应的特征\n\n2） 创建 createTree决策树\n\n​    1、接受数据集和特征集作为参数\n\n​    2、创建根节点 root\n\n​    3、获取标签统计 label_count\n\n​    4、if 特征集为空，将根节点设为叶子节点，类别为标签中出现次数最多的标签，  \n\n递归返回，情形 (1)\n\n​    5、if数据集中只包含一种标签，将根节点设为叶子节点，类别为该标签，\n\n递归返回，情形 (2)\n\n \n\n选择最优划分属性向：\n\n​    6、计算特征集中每个特征的信息增益，存储在 gains 中（calculateEntropy 方法）\n\n​    7、获取最大信息增益的特征和最大的信息增益（calculateGain 方法）\n\n8、继续生成子树：\n\n​    \t1\\创建一个分支节点 branch\n\n​    \t2\\遍历最大信息增益特征的每个可能取值 value\n\n​      3\\创建一个子数据集 subDataset 通过调用 splitDataset 方法\n\n​      4\\如果子数据集为空，将分支节点标记为叶节点，类别为标签中出现次数最多的标签\t\n\n   递归返回，情形 (3)\n\n​      5\\否则，递归调用 createTree 方法创建子树，并将子树添加到分支节点\n\n​      6\\将分支节点添加到根节点的分支列表中\n\n​    \t7\\返回根节点\n\n​    \n\n3）创建 DecisionTree 构造函数\n\n​    1、接受训练数据、训练数据标签和阈值作为参数\n\n​    2、调用 loadData 方法导入数据\n\n​    3、设置阈值 threshold\n\n​    4、创建数据集 dataset，初始化为包含所有数据点的索引\n\n​    5、创建特征集 features，初始化为包含所有特征的索引\n\n​    6、调用 createTree 方法创建决策树，并将根节点存储在 decisionTreeRoot 中\n\n​    \n\n 4）创建 classify 方法：（目的是为了分类）\n\n​    1、接受测试数据和根节点作为参数\n\n​    2、如果根节点是叶子节点，直接返回结果\n\n​    3、遍历根节点的每个分支\n\n​      找到匹配测试数据的分支，然后递归调用 classify 方法\n\n​    4、return返回分类结果\n\n​    \n\n5）主函数 main 中\n\n  1、定义训练数据 trainData 和训练标签 trainLabel\n\n  2、创建 DecisionTree 对象 dt，传入 trainData、trainLabel 和阈值 threshold\n\n  3、定义测试数据 testData：调用 classify 方法对测试数据进行分类，传入决策树的根节点，将结果存储在 type 变量中\n\n  4、输出分类结果\n\n \n\n输出: 以 node 为根结点的决策树\n\n \n","slug":"C++决策树代码分析","published":1,"updated":"2023-11-17T09:06:58.501Z","_id":"clp2dsitx0000iwtyex6s9m4p","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> * @Description: C++实现决策树</span><br><span class=\"line\"> * @Author: szq</span><br><span class=\"line\"> * @Github: https:<span class=\"comment\">//github.com/MrQqqq</span></span><br><span class=\"line\"> * @Date: <span class=\"number\">2020</span><span class=\"number\">-06</span><span class=\"number\">-29</span> <span class=\"number\">01</span>:<span class=\"number\">31</span>:<span class=\"number\">54</span></span><br><span class=\"line\"> * @LastEditors: szq</span><br><span class=\"line\"> * @LastEditTime: <span class=\"number\">2020</span><span class=\"number\">-07</span><span class=\"number\">-08</span> <span class=\"number\">18</span>:<span class=\"number\">57</span>:<span class=\"number\">10</span></span><br><span class=\"line\"> * @FilePath: \\cpp\\src\\DecisionTree\\DecisionTree.cpp</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;DecisionTree.h&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 导入数据</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;type&#125; trainData：训练数据  trainLabel：训练标签</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 没有返回值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">DecisionTree::loadData</span><span class=\"params\">(vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; trainData, vector&lt;<span class=\"type\">int</span>&gt;&amp; trainLabel)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//如果数据特征向量的数量和数据集标签的数量不一样的时候，数据有问题</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (trainData.<span class=\"built_in\">size</span>() != trainLabel.<span class=\"built_in\">size</span>()) &#123;</span><br><span class=\"line\">        cerr &lt;&lt; <span class=\"string\">&quot;input error&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//初始化</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;trainData = trainData;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;trainLabel = trainLabel;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//计算featureValues</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> data : trainData) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; data.<span class=\"built_in\">size</span>(); ++i) &#123;</span><br><span class=\"line\">            featureValues[i].<span class=\"built_in\">insert</span>(data[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 统计数据集中每个标签的数量，比如结果为1的数量和结果为2的数量</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;type&#125; dataset：数据集，是训练数据的子集，整型数组表示，每一个整数表示第几个训练数据</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 标签名，标签数的map</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; <span class=\"title\">DecisionTree::labelCount</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; dataset)</span> </span>&#123;</span><br><span class=\"line\">    map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; res;</span><br><span class=\"line\">    <span class=\"comment\">//遍历数据集，统计标签出现的次数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> index : dataset) &#123;</span><br><span class=\"line\">        res[trainLabel[index]]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 计算信息熵，公式为-pi * log(pi)求和</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;type&#125; ：dataset：数据集</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 信息熵</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">DecisionTree::caculateEntropy</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; dataset)</span> </span>&#123;</span><br><span class=\"line\">    map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; label_count = <span class=\"built_in\">labelCount</span>(dataset);</span><br><span class=\"line\">    <span class=\"type\">int</span> len = dataset.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">    <span class=\"type\">double</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> count : label_count) &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> pi = count.second / <span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">double</span>&gt;(len);</span><br><span class=\"line\">        result -= pi * <span class=\"built_in\">log2</span>(pi);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 根据特征名来划分子集</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;type&#125; dataset：数据集</span></span><br><span class=\"line\"><span class=\"comment\"> * @param feature:第几个特征</span></span><br><span class=\"line\"><span class=\"comment\"> * @param value:第几个特征的特征值</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 返回划分的子集</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">DecisionTree::splitDataset</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; dataset, <span class=\"type\">int</span>&amp; feature, <span class=\"type\">int</span>&amp; value)</span> </span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; res;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> index : dataset) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (trainData[index][feature] == value) &#123;</span><br><span class=\"line\">            res.<span class=\"built_in\">push_back</span>(index);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 计算信息熵</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;type&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * @return:</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">DecisionTree::caculateGain</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; dataset, <span class=\"type\">int</span>&amp; feature)</span> </span>&#123;</span><br><span class=\"line\">    set&lt;<span class=\"type\">int</span>&gt; values = featureValues[feature];</span><br><span class=\"line\">    <span class=\"type\">double</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> value : values) &#123;</span><br><span class=\"line\">        vector&lt;<span class=\"type\">int</span>&gt; subDataset = <span class=\"built_in\">splitDataset</span>(dataset, feature, value);</span><br><span class=\"line\">        result += subDataset.<span class=\"built_in\">size</span>() / <span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">double</span>&gt;(dataset.<span class=\"built_in\">size</span>()) * <span class=\"built_in\">caculateEntropy</span>(subDataset);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">caculateEntropy</span>(dataset) - result;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 获取标签统计中出现次数最多的标签</span></span><br><span class=\"line\"><span class=\"comment\"> * @param labelCount:标签统计</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 返回出现次数最多的标签名</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">DecisionTree::getMaxTimesLabel</span><span class=\"params\">(map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&amp; labelCount)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> max_count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> res;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> label : labelCount) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (max_count &lt;= label.second) &#123;</span><br><span class=\"line\">            max_count = label.second;</span><br><span class=\"line\">            res = label.first;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 获取特征集信息增益中最大的信息增益和所对应的特征</span></span><br><span class=\"line\"><span class=\"comment\"> * @param gains:特征集的信息增益</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 最大信息增益对应的特征</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">DecisionTree::getMaxGainFeature</span><span class=\"params\">(map&lt;<span class=\"type\">int</span>, <span class=\"type\">double</span>&gt;&amp; gains)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> max_gain = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> max_gain_feature;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> gain : gains) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (max_gain &lt;= gain.second) &#123;</span><br><span class=\"line\">            max_gain = gain.second;</span><br><span class=\"line\">            max_gain_feature = gain.first;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max_gain_feature;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 创建决策树</span></span><br><span class=\"line\"><span class=\"comment\"> * @param dataset:数据集</span></span><br><span class=\"line\"><span class=\"comment\"> * @param features:特征集</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 返回决策树根节点指针</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">TreeNode* <span class=\"title\">DecisionTree::createTree</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; dataset, vector&lt;<span class=\"type\">int</span>&gt;&amp; features)</span> </span>&#123;</span><br><span class=\"line\">    TreeNode* root = <span class=\"keyword\">new</span> <span class=\"built_in\">TreeNode</span>();</span><br><span class=\"line\">    map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; label_count = <span class=\"built_in\">labelCount</span>(dataset);</span><br><span class=\"line\">    <span class=\"comment\">//如果特征集为空，则该树为单节点树，类别为标签中出现次数最多的标签</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (features.<span class=\"built_in\">size</span>() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        root-&gt;result = <span class=\"built_in\">getMaxTimesLabel</span>(label_count);</span><br><span class=\"line\">        root-&gt;isLeaf = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//如果数据集中只包含一种标签，则该树为单节点树，类别为该标签</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (label_count.<span class=\"built_in\">size</span>() == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        root-&gt;result = label_count.<span class=\"built_in\">begin</span>()-&gt;first;</span><br><span class=\"line\">        root-&gt;isLeaf = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//计算特征集中每个特征的信息增益</span></span><br><span class=\"line\">    map&lt;<span class=\"type\">int</span>, <span class=\"type\">double</span>&gt; gains;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> feature : features) &#123;</span><br><span class=\"line\">        gains[feature] = <span class=\"built_in\">caculateGain</span>(dataset, feature);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//获取最大信息增益的特征和最大的信息增益</span></span><br><span class=\"line\">    <span class=\"type\">int</span> max_gain_feature = <span class=\"built_in\">getMaxGainFeature</span>(gains);</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; subFeatures = features;</span><br><span class=\"line\">    subFeatures.<span class=\"built_in\">erase</span>(<span class=\"built_in\">find</span>(subFeatures.<span class=\"built_in\">begin</span>(), subFeatures.<span class=\"built_in\">end</span>(), max_gain_feature));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> value : featureValues[max_gain_feature]) &#123;</span><br><span class=\"line\">        TreeNode* branch = <span class=\"keyword\">new</span> <span class=\"built_in\">TreeNode</span>();<span class=\"comment\">//创建分支</span></span><br><span class=\"line\">        vector&lt;<span class=\"type\">int</span>&gt; subDataset = <span class=\"built_in\">splitDataset</span>(dataset, max_gain_feature, value);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//如果子集为空，将分支节点标记为叶节点，类别为标签中出现次数最多的标签</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (subDataset.<span class=\"built_in\">size</span>() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            branch-&gt;isLeaf = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            branch-&gt;result = <span class=\"built_in\">getMaxTimesLabel</span>(label_count);</span><br><span class=\"line\">            branch-&gt;attr = max_gain_feature;</span><br><span class=\"line\">            branch-&gt;attr_value = value;</span><br><span class=\"line\">            root-&gt;branchs.<span class=\"built_in\">push_back</span>(branch);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//否则递归创建树</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            branch = <span class=\"built_in\">createTree</span>(subDataset, subFeatures);</span><br><span class=\"line\">            branch-&gt;attr = max_gain_feature;</span><br><span class=\"line\">            branch-&gt;attr_value = value;</span><br><span class=\"line\">            root-&gt;branchs.<span class=\"built_in\">push_back</span>(branch);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 构造函数</span></span><br><span class=\"line\"><span class=\"comment\"> * @param trainData:训练数据</span></span><br><span class=\"line\"><span class=\"comment\"> * @param trainLabel:训练数据标签</span></span><br><span class=\"line\"><span class=\"comment\"> * @param threshold:阈值</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 没有返回值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">DecisionTree::<span class=\"built_in\">DecisionTree</span>(vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; trainData, vector&lt;<span class=\"type\">int</span>&gt;&amp; trainLabel, <span class=\"type\">int</span>&amp; threshold) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">loadData</span>(trainData, trainLabel);<span class=\"comment\">//导入数据</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;threshold = threshold;<span class=\"comment\">//设置阈值</span></span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">dataset</span><span class=\"params\">(trainData.size())</span></span>;<span class=\"comment\">//数据集</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; trainData.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">        dataset[i] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">features</span><span class=\"params\">(trainData[<span class=\"number\">0</span>].size())</span></span>;<span class=\"comment\">//属性集合</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; trainData[<span class=\"number\">0</span>].<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">        features[i] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    decisionTreeRoot = <span class=\"built_in\">createTree</span>(dataset, features);<span class=\"comment\">//创建决策树</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 分类</span></span><br><span class=\"line\"><span class=\"comment\"> * @param testData:测试数据</span></span><br><span class=\"line\"><span class=\"comment\"> * @param root:决策树根节点</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 返回分类结果</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">DecisionTree::classify</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; testData, TreeNode* root)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//如果决策树节点是叶子节点，直接返回结果</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (root-&gt;isLeaf) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> root-&gt;result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> node : root-&gt;branchs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//找到分支，并在分支中再细分</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (testData[node-&gt;attr] == node-&gt;attr_value) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">classify</span>(testData, node);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//训练数据</span></span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; trainData = &#123;</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"comment\">//训练标签</span></span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; trainLabel = &#123; <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span> &#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> threshold = <span class=\"number\">0</span>;</span><br><span class=\"line\">    DecisionTree dt = <span class=\"built_in\">DecisionTree</span>(trainData, trainLabel, threshold);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//测试数据</span></span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; testData = &#123; <span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span> &#125;;</span><br><span class=\"line\">    TreeNode* root = dt.decisionTreeRoot;</span><br><span class=\"line\">    <span class=\"type\">int</span> type = dt.<span class=\"built_in\">classify</span>(testData, root);</span><br><span class=\"line\">    cout &lt;&lt; type &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;```</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"伪代码\"><a href=\"#伪代码\" class=\"headerlink\" title=\"伪代码\"></a>伪代码</h1><p>导入所需的库</p>\n<p>输入: </p>\n<p>训练数据 {0, 0, 0, 0},{0, 0, 0, 1}, {0, 1, 0, 1},{0, 1, 1, 0},……{2, 1, 0, 2},{2, 0, 0, 0} </p>\n<p>训练标签 trainLabel = {0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0};</p>\n<p>过程：</p>\n<p>1）创建计算的函数方法：</p>\n<p>  1、创建 loadData 方法；检测数据是否正确并返回数据    </p>\n<p>  2、创建 labelCount 方法：统计标签出现的次数</p>\n<p>  3、创建 calculateEntropy 方法：计算信息熵，公式为-pi * log(pi)求和   </p>\n<p>  4、创建 splitDataset 方法；根据特征名来划分子集 </p>\n<p>  5、创建 calculateGain 方法：计算具体的信息增益 </p>\n<p>  6、创建 getMaxTimesLabel 方法：得到出现次数最多的标签 </p>\n<p>  7、创建 getMaxGainFeature 方法：获取特征集信息增益中最大的信息增益和所对应的特征</p>\n<p>2） 创建 createTree决策树</p>\n<p>​    1、接受数据集和特征集作为参数</p>\n<p>​    2、创建根节点 root</p>\n<p>​    3、获取标签统计 label_count</p>\n<p>​    4、if 特征集为空，将根节点设为叶子节点，类别为标签中出现次数最多的标签，  </p>\n<p>递归返回，情形 (1)</p>\n<p>​    5、if数据集中只包含一种标签，将根节点设为叶子节点，类别为该标签，</p>\n<p>递归返回，情形 (2)</p>\n<p>选择最优划分属性向：</p>\n<p>​    6、计算特征集中每个特征的信息增益，存储在 gains 中（calculateEntropy 方法）</p>\n<p>​    7、获取最大信息增益的特征和最大的信息增益（calculateGain 方法）</p>\n<p>8、继续生成子树：</p>\n<p>​        1\\创建一个分支节点 branch</p>\n<p>​        2\\遍历最大信息增益特征的每个可能取值 value</p>\n<p>​      3\\创建一个子数据集 subDataset 通过调用 splitDataset 方法</p>\n<p>​      4\\如果子数据集为空，将分支节点标记为叶节点，类别为标签中出现次数最多的标签    </p>\n<p>   递归返回，情形 (3)</p>\n<p>​      5\\否则，递归调用 createTree 方法创建子树，并将子树添加到分支节点</p>\n<p>​      6\\将分支节点添加到根节点的分支列表中</p>\n<p>​        7\\返回根节点</p>\n<p>​    </p>\n<p>3）创建 DecisionTree 构造函数</p>\n<p>​    1、接受训练数据、训练数据标签和阈值作为参数</p>\n<p>​    2、调用 loadData 方法导入数据</p>\n<p>​    3、设置阈值 threshold</p>\n<p>​    4、创建数据集 dataset，初始化为包含所有数据点的索引</p>\n<p>​    5、创建特征集 features，初始化为包含所有特征的索引</p>\n<p>​    6、调用 createTree 方法创建决策树，并将根节点存储在 decisionTreeRoot 中</p>\n<p>​    </p>\n<p> 4）创建 classify 方法：（目的是为了分类）</p>\n<p>​    1、接受测试数据和根节点作为参数</p>\n<p>​    2、如果根节点是叶子节点，直接返回结果</p>\n<p>​    3、遍历根节点的每个分支</p>\n<p>​      找到匹配测试数据的分支，然后递归调用 classify 方法</p>\n<p>​    4、return返回分类结果</p>\n<p>​    </p>\n<p>5）主函数 main 中</p>\n<p>  1、定义训练数据 trainData 和训练标签 trainLabel</p>\n<p>  2、创建 DecisionTree 对象 dt，传入 trainData、trainLabel 和阈值 threshold</p>\n<p>  3、定义测试数据 testData：调用 classify 方法对测试数据进行分类，传入决策树的根节点，将结果存储在 type 变量中</p>\n<p>  4、输出分类结果</p>\n<p>输出: 以 node 为根结点的决策树</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h1><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> * @Description: C++实现决策树</span><br><span class=\"line\"> * @Author: szq</span><br><span class=\"line\"> * @Github: https:<span class=\"comment\">//github.com/MrQqqq</span></span><br><span class=\"line\"> * @Date: <span class=\"number\">2020</span><span class=\"number\">-06</span><span class=\"number\">-29</span> <span class=\"number\">01</span>:<span class=\"number\">31</span>:<span class=\"number\">54</span></span><br><span class=\"line\"> * @LastEditors: szq</span><br><span class=\"line\"> * @LastEditTime: <span class=\"number\">2020</span><span class=\"number\">-07</span><span class=\"number\">-08</span> <span class=\"number\">18</span>:<span class=\"number\">57</span>:<span class=\"number\">10</span></span><br><span class=\"line\"> * @FilePath: \\cpp\\src\\DecisionTree\\DecisionTree.cpp</span><br><span class=\"line\"> */</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;math.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;DecisionTree.h&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 导入数据</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;type&#125; trainData：训练数据  trainLabel：训练标签</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 没有返回值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">DecisionTree::loadData</span><span class=\"params\">(vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; trainData, vector&lt;<span class=\"type\">int</span>&gt;&amp; trainLabel)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//如果数据特征向量的数量和数据集标签的数量不一样的时候，数据有问题</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (trainData.<span class=\"built_in\">size</span>() != trainLabel.<span class=\"built_in\">size</span>()) &#123;</span><br><span class=\"line\">        cerr &lt;&lt; <span class=\"string\">&quot;input error&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">        <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//初始化</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;trainData = trainData;</span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;trainLabel = trainLabel;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//计算featureValues</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> data : trainData) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; data.<span class=\"built_in\">size</span>(); ++i) &#123;</span><br><span class=\"line\">            featureValues[i].<span class=\"built_in\">insert</span>(data[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 统计数据集中每个标签的数量，比如结果为1的数量和结果为2的数量</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;type&#125; dataset：数据集，是训练数据的子集，整型数组表示，每一个整数表示第几个训练数据</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 标签名，标签数的map</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; <span class=\"title\">DecisionTree::labelCount</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; dataset)</span> </span>&#123;</span><br><span class=\"line\">    map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; res;</span><br><span class=\"line\">    <span class=\"comment\">//遍历数据集，统计标签出现的次数</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> index : dataset) &#123;</span><br><span class=\"line\">        res[trainLabel[index]]++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 计算信息熵，公式为-pi * log(pi)求和</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;type&#125; ：dataset：数据集</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 信息熵</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">DecisionTree::caculateEntropy</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; dataset)</span> </span>&#123;</span><br><span class=\"line\">    map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; label_count = <span class=\"built_in\">labelCount</span>(dataset);</span><br><span class=\"line\">    <span class=\"type\">int</span> len = dataset.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">    <span class=\"type\">double</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> count : label_count) &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> pi = count.second / <span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">double</span>&gt;(len);</span><br><span class=\"line\">        result -= pi * <span class=\"built_in\">log2</span>(pi);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 根据特征名来划分子集</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;type&#125; dataset：数据集</span></span><br><span class=\"line\"><span class=\"comment\"> * @param feature:第几个特征</span></span><br><span class=\"line\"><span class=\"comment\"> * @param value:第几个特征的特征值</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 返回划分的子集</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">DecisionTree::splitDataset</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; dataset, <span class=\"type\">int</span>&amp; feature, <span class=\"type\">int</span>&amp; value)</span> </span>&#123;</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; res;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> index : dataset) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (trainData[index][feature] == value) &#123;</span><br><span class=\"line\">            res.<span class=\"built_in\">push_back</span>(index);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 计算信息熵</span></span><br><span class=\"line\"><span class=\"comment\"> * @param &#123;type&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> * @return:</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">double</span> <span class=\"title\">DecisionTree::caculateGain</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; dataset, <span class=\"type\">int</span>&amp; feature)</span> </span>&#123;</span><br><span class=\"line\">    set&lt;<span class=\"type\">int</span>&gt; values = featureValues[feature];</span><br><span class=\"line\">    <span class=\"type\">double</span> result = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> value : values) &#123;</span><br><span class=\"line\">        vector&lt;<span class=\"type\">int</span>&gt; subDataset = <span class=\"built_in\">splitDataset</span>(dataset, feature, value);</span><br><span class=\"line\">        result += subDataset.<span class=\"built_in\">size</span>() / <span class=\"built_in\">static_cast</span>&lt;<span class=\"type\">double</span>&gt;(dataset.<span class=\"built_in\">size</span>()) * <span class=\"built_in\">caculateEntropy</span>(subDataset);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">caculateEntropy</span>(dataset) - result;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 获取标签统计中出现次数最多的标签</span></span><br><span class=\"line\"><span class=\"comment\"> * @param labelCount:标签统计</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 返回出现次数最多的标签名</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">DecisionTree::getMaxTimesLabel</span><span class=\"params\">(map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt;&amp; labelCount)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> max_count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> res;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> label : labelCount) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (max_count &lt;= label.second) &#123;</span><br><span class=\"line\">            max_count = label.second;</span><br><span class=\"line\">            res = label.first;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 获取特征集信息增益中最大的信息增益和所对应的特征</span></span><br><span class=\"line\"><span class=\"comment\"> * @param gains:特征集的信息增益</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 最大信息增益对应的特征</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">DecisionTree::getMaxGainFeature</span><span class=\"params\">(map&lt;<span class=\"type\">int</span>, <span class=\"type\">double</span>&gt;&amp; gains)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> max_gain = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> max_gain_feature;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> gain : gains) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (max_gain &lt;= gain.second) &#123;</span><br><span class=\"line\">            max_gain = gain.second;</span><br><span class=\"line\">            max_gain_feature = gain.first;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max_gain_feature;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 创建决策树</span></span><br><span class=\"line\"><span class=\"comment\"> * @param dataset:数据集</span></span><br><span class=\"line\"><span class=\"comment\"> * @param features:特征集</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 返回决策树根节点指针</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\">TreeNode* <span class=\"title\">DecisionTree::createTree</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; dataset, vector&lt;<span class=\"type\">int</span>&gt;&amp; features)</span> </span>&#123;</span><br><span class=\"line\">    TreeNode* root = <span class=\"keyword\">new</span> <span class=\"built_in\">TreeNode</span>();</span><br><span class=\"line\">    map&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; label_count = <span class=\"built_in\">labelCount</span>(dataset);</span><br><span class=\"line\">    <span class=\"comment\">//如果特征集为空，则该树为单节点树，类别为标签中出现次数最多的标签</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (features.<span class=\"built_in\">size</span>() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        root-&gt;result = <span class=\"built_in\">getMaxTimesLabel</span>(label_count);</span><br><span class=\"line\">        root-&gt;isLeaf = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//如果数据集中只包含一种标签，则该树为单节点树，类别为该标签</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (label_count.<span class=\"built_in\">size</span>() == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        root-&gt;result = label_count.<span class=\"built_in\">begin</span>()-&gt;first;</span><br><span class=\"line\">        root-&gt;isLeaf = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//计算特征集中每个特征的信息增益</span></span><br><span class=\"line\">    map&lt;<span class=\"type\">int</span>, <span class=\"type\">double</span>&gt; gains;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> feature : features) &#123;</span><br><span class=\"line\">        gains[feature] = <span class=\"built_in\">caculateGain</span>(dataset, feature);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//获取最大信息增益的特征和最大的信息增益</span></span><br><span class=\"line\">    <span class=\"type\">int</span> max_gain_feature = <span class=\"built_in\">getMaxGainFeature</span>(gains);</span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; subFeatures = features;</span><br><span class=\"line\">    subFeatures.<span class=\"built_in\">erase</span>(<span class=\"built_in\">find</span>(subFeatures.<span class=\"built_in\">begin</span>(), subFeatures.<span class=\"built_in\">end</span>(), max_gain_feature));</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> value : featureValues[max_gain_feature]) &#123;</span><br><span class=\"line\">        TreeNode* branch = <span class=\"keyword\">new</span> <span class=\"built_in\">TreeNode</span>();<span class=\"comment\">//创建分支</span></span><br><span class=\"line\">        vector&lt;<span class=\"type\">int</span>&gt; subDataset = <span class=\"built_in\">splitDataset</span>(dataset, max_gain_feature, value);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//如果子集为空，将分支节点标记为叶节点，类别为标签中出现次数最多的标签</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (subDataset.<span class=\"built_in\">size</span>() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            branch-&gt;isLeaf = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            branch-&gt;result = <span class=\"built_in\">getMaxTimesLabel</span>(label_count);</span><br><span class=\"line\">            branch-&gt;attr = max_gain_feature;</span><br><span class=\"line\">            branch-&gt;attr_value = value;</span><br><span class=\"line\">            root-&gt;branchs.<span class=\"built_in\">push_back</span>(branch);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//否则递归创建树</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            branch = <span class=\"built_in\">createTree</span>(subDataset, subFeatures);</span><br><span class=\"line\">            branch-&gt;attr = max_gain_feature;</span><br><span class=\"line\">            branch-&gt;attr_value = value;</span><br><span class=\"line\">            root-&gt;branchs.<span class=\"built_in\">push_back</span>(branch);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 构造函数</span></span><br><span class=\"line\"><span class=\"comment\"> * @param trainData:训练数据</span></span><br><span class=\"line\"><span class=\"comment\"> * @param trainLabel:训练数据标签</span></span><br><span class=\"line\"><span class=\"comment\"> * @param threshold:阈值</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 没有返回值</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">DecisionTree::<span class=\"built_in\">DecisionTree</span>(vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;&amp; trainData, vector&lt;<span class=\"type\">int</span>&gt;&amp; trainLabel, <span class=\"type\">int</span>&amp; threshold) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">loadData</span>(trainData, trainLabel);<span class=\"comment\">//导入数据</span></span><br><span class=\"line\">    <span class=\"keyword\">this</span>-&gt;threshold = threshold;<span class=\"comment\">//设置阈值</span></span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">dataset</span><span class=\"params\">(trainData.size())</span></span>;<span class=\"comment\">//数据集</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; trainData.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">        dataset[i] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">features</span><span class=\"params\">(trainData[<span class=\"number\">0</span>].size())</span></span>;<span class=\"comment\">//属性集合</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; trainData[<span class=\"number\">0</span>].<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">        features[i] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    decisionTreeRoot = <span class=\"built_in\">createTree</span>(dataset, features);<span class=\"comment\">//创建决策树</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * @destription: 分类</span></span><br><span class=\"line\"><span class=\"comment\"> * @param testData:测试数据</span></span><br><span class=\"line\"><span class=\"comment\"> * @param root:决策树根节点</span></span><br><span class=\"line\"><span class=\"comment\"> * @return: 返回分类结果</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">DecisionTree::classify</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; testData, TreeNode* root)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//如果决策树节点是叶子节点，直接返回结果</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (root-&gt;isLeaf) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> root-&gt;result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">auto</span> node : root-&gt;branchs) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//找到分支，并在分支中再细分</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (testData[node-&gt;attr] == node-&gt;attr_value) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">classify</span>(testData, node);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//训练数据</span></span><br><span class=\"line\">    vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt; trainData = &#123;</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">2</span>&#125;,</span><br><span class=\"line\">        &#123;<span class=\"number\">2</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>&#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"comment\">//训练标签</span></span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; trainLabel = &#123; <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span> &#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> threshold = <span class=\"number\">0</span>;</span><br><span class=\"line\">    DecisionTree dt = <span class=\"built_in\">DecisionTree</span>(trainData, trainLabel, threshold);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//测试数据</span></span><br><span class=\"line\">    vector&lt;<span class=\"type\">int</span>&gt; testData = &#123; <span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span> &#125;;</span><br><span class=\"line\">    TreeNode* root = dt.decisionTreeRoot;</span><br><span class=\"line\">    <span class=\"type\">int</span> type = dt.<span class=\"built_in\">classify</span>(testData, root);</span><br><span class=\"line\">    cout &lt;&lt; type &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;```</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"伪代码\"><a href=\"#伪代码\" class=\"headerlink\" title=\"伪代码\"></a>伪代码</h1><p>导入所需的库</p>\n<p>输入: </p>\n<p>训练数据 {0, 0, 0, 0},{0, 0, 0, 1}, {0, 1, 0, 1},{0, 1, 1, 0},……{2, 1, 0, 2},{2, 0, 0, 0} </p>\n<p>训练标签 trainLabel = {0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0};</p>\n<p>过程：</p>\n<p>1）创建计算的函数方法：</p>\n<p>  1、创建 loadData 方法；检测数据是否正确并返回数据    </p>\n<p>  2、创建 labelCount 方法：统计标签出现的次数</p>\n<p>  3、创建 calculateEntropy 方法：计算信息熵，公式为-pi * log(pi)求和   </p>\n<p>  4、创建 splitDataset 方法；根据特征名来划分子集 </p>\n<p>  5、创建 calculateGain 方法：计算具体的信息增益 </p>\n<p>  6、创建 getMaxTimesLabel 方法：得到出现次数最多的标签 </p>\n<p>  7、创建 getMaxGainFeature 方法：获取特征集信息增益中最大的信息增益和所对应的特征</p>\n<p>2） 创建 createTree决策树</p>\n<p>​    1、接受数据集和特征集作为参数</p>\n<p>​    2、创建根节点 root</p>\n<p>​    3、获取标签统计 label_count</p>\n<p>​    4、if 特征集为空，将根节点设为叶子节点，类别为标签中出现次数最多的标签，  </p>\n<p>递归返回，情形 (1)</p>\n<p>​    5、if数据集中只包含一种标签，将根节点设为叶子节点，类别为该标签，</p>\n<p>递归返回，情形 (2)</p>\n<p>选择最优划分属性向：</p>\n<p>​    6、计算特征集中每个特征的信息增益，存储在 gains 中（calculateEntropy 方法）</p>\n<p>​    7、获取最大信息增益的特征和最大的信息增益（calculateGain 方法）</p>\n<p>8、继续生成子树：</p>\n<p>​        1\\创建一个分支节点 branch</p>\n<p>​        2\\遍历最大信息增益特征的每个可能取值 value</p>\n<p>​      3\\创建一个子数据集 subDataset 通过调用 splitDataset 方法</p>\n<p>​      4\\如果子数据集为空，将分支节点标记为叶节点，类别为标签中出现次数最多的标签    </p>\n<p>   递归返回，情形 (3)</p>\n<p>​      5\\否则，递归调用 createTree 方法创建子树，并将子树添加到分支节点</p>\n<p>​      6\\将分支节点添加到根节点的分支列表中</p>\n<p>​        7\\返回根节点</p>\n<p>​    </p>\n<p>3）创建 DecisionTree 构造函数</p>\n<p>​    1、接受训练数据、训练数据标签和阈值作为参数</p>\n<p>​    2、调用 loadData 方法导入数据</p>\n<p>​    3、设置阈值 threshold</p>\n<p>​    4、创建数据集 dataset，初始化为包含所有数据点的索引</p>\n<p>​    5、创建特征集 features，初始化为包含所有特征的索引</p>\n<p>​    6、调用 createTree 方法创建决策树，并将根节点存储在 decisionTreeRoot 中</p>\n<p>​    </p>\n<p> 4）创建 classify 方法：（目的是为了分类）</p>\n<p>​    1、接受测试数据和根节点作为参数</p>\n<p>​    2、如果根节点是叶子节点，直接返回结果</p>\n<p>​    3、遍历根节点的每个分支</p>\n<p>​      找到匹配测试数据的分支，然后递归调用 classify 方法</p>\n<p>​    4、return返回分类结果</p>\n<p>​    </p>\n<p>5）主函数 main 中</p>\n<p>  1、定义训练数据 trainData 和训练标签 trainLabel</p>\n<p>  2、创建 DecisionTree 对象 dt，传入 trainData、trainLabel 和阈值 threshold</p>\n<p>  3、定义测试数据 testData：调用 classify 方法对测试数据进行分类，传入决策树的根节点，将结果存储在 type 变量中</p>\n<p>  4、输出分类结果</p>\n<p>输出: 以 node 为根结点的决策树</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"clf0opdiw0001hktygdy0231a","category_id":"clf0opdj10004hkty6ifrgqe4","_id":"clf0opdj4000ahkty79jq69ah"},{"post_id":"clf0opdiz0003hkty46roc28q","category_id":"clf0opdj40009hktybo73eo1i","_id":"clf0opdj6000dhkty5z81czs4"},{"post_id":"clf0opdj20006hkty1j8w697b","category_id":"clf0opdj10004hkty6ifrgqe4","_id":"clf0opdj6000ehkty2om0eecb"},{"post_id":"clf0opdj30008hkty7ml6bben","category_id":"clf0opdj5000chktyh1sz52vu","_id":"clf0opdj6000fhktydb49995p"},{"post_id":"clp2dsitx0000iwtyex6s9m4p","category_id":"clf0opdj10004hkty6ifrgqe4","_id":"clp2dzsqy0000ycty20uy8zon"}],"PostTag":[],"Tag":[]}}